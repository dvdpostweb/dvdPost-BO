'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("dsMarketting"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsMarketting
    Inherits System.Data.DataSet
    
    Private tableactivation_code As activation_codeDataTable
    
    Private tableactivation_group As activation_groupDataTable
    
    Private tableactivation_validity_type As activation_validity_typeDataTable
    
    Private tableactivation_code_view1 As activation_code_view1DataTable
    
    Private tablediscount_code_view1 As discount_code_view1DataTable
    
    Private tablediscount_type As discount_typeDataTable
    
    Private tablediscount_abo_validityto_type As discount_abo_validityto_typeDataTable
    
    Private tableproducts As productsDataTable
    
    Private tablediscount_code As discount_codeDataTable
    
    Private tablediscount_code_combo As discount_code_comboDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("activation_code")) Is Nothing) Then
                MyBase.Tables.Add(New activation_codeDataTable(ds.Tables("activation_code")))
            End If
            If (Not (ds.Tables("activation_group")) Is Nothing) Then
                MyBase.Tables.Add(New activation_groupDataTable(ds.Tables("activation_group")))
            End If
            If (Not (ds.Tables("activation_validity_type")) Is Nothing) Then
                MyBase.Tables.Add(New activation_validity_typeDataTable(ds.Tables("activation_validity_type")))
            End If
            If (Not (ds.Tables("activation_code_view1")) Is Nothing) Then
                MyBase.Tables.Add(New activation_code_view1DataTable(ds.Tables("activation_code_view1")))
            End If
            If (Not (ds.Tables("discount_code_view1")) Is Nothing) Then
                MyBase.Tables.Add(New discount_code_view1DataTable(ds.Tables("discount_code_view1")))
            End If
            If (Not (ds.Tables("discount_type")) Is Nothing) Then
                MyBase.Tables.Add(New discount_typeDataTable(ds.Tables("discount_type")))
            End If
            If (Not (ds.Tables("discount_abo_validityto_type")) Is Nothing) Then
                MyBase.Tables.Add(New discount_abo_validityto_typeDataTable(ds.Tables("discount_abo_validityto_type")))
            End If
            If (Not (ds.Tables("products")) Is Nothing) Then
                MyBase.Tables.Add(New productsDataTable(ds.Tables("products")))
            End If
            If (Not (ds.Tables("discount_code")) Is Nothing) Then
                MyBase.Tables.Add(New discount_codeDataTable(ds.Tables("discount_code")))
            End If
            If (Not (ds.Tables("discount_code_combo")) Is Nothing) Then
                MyBase.Tables.Add(New discount_code_comboDataTable(ds.Tables("discount_code_combo")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property activation_code() As activation_codeDataTable
        Get
            Return Me.tableactivation_code
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property activation_group() As activation_groupDataTable
        Get
            Return Me.tableactivation_group
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property activation_validity_type() As activation_validity_typeDataTable
        Get
            Return Me.tableactivation_validity_type
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property activation_code_view1() As activation_code_view1DataTable
        Get
            Return Me.tableactivation_code_view1
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property discount_code_view1() As discount_code_view1DataTable
        Get
            Return Me.tablediscount_code_view1
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property discount_type() As discount_typeDataTable
        Get
            Return Me.tablediscount_type
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property discount_abo_validityto_type() As discount_abo_validityto_typeDataTable
        Get
            Return Me.tablediscount_abo_validityto_type
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property products() As productsDataTable
        Get
            Return Me.tableproducts
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property discount_code() As discount_codeDataTable
        Get
            Return Me.tablediscount_code
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property discount_code_combo() As discount_code_comboDataTable
        Get
            Return Me.tablediscount_code_combo
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As dsMarketting = CType(MyBase.Clone,dsMarketting)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("activation_code")) Is Nothing) Then
                MyBase.Tables.Add(New activation_codeDataTable(ds.Tables("activation_code")))
            End If
            If (Not (ds.Tables("activation_group")) Is Nothing) Then
                MyBase.Tables.Add(New activation_groupDataTable(ds.Tables("activation_group")))
            End If
            If (Not (ds.Tables("activation_validity_type")) Is Nothing) Then
                MyBase.Tables.Add(New activation_validity_typeDataTable(ds.Tables("activation_validity_type")))
            End If
            If (Not (ds.Tables("activation_code_view1")) Is Nothing) Then
                MyBase.Tables.Add(New activation_code_view1DataTable(ds.Tables("activation_code_view1")))
            End If
            If (Not (ds.Tables("discount_code_view1")) Is Nothing) Then
                MyBase.Tables.Add(New discount_code_view1DataTable(ds.Tables("discount_code_view1")))
            End If
            If (Not (ds.Tables("discount_type")) Is Nothing) Then
                MyBase.Tables.Add(New discount_typeDataTable(ds.Tables("discount_type")))
            End If
            If (Not (ds.Tables("discount_abo_validityto_type")) Is Nothing) Then
                MyBase.Tables.Add(New discount_abo_validityto_typeDataTable(ds.Tables("discount_abo_validityto_type")))
            End If
            If (Not (ds.Tables("products")) Is Nothing) Then
                MyBase.Tables.Add(New productsDataTable(ds.Tables("products")))
            End If
            If (Not (ds.Tables("discount_code")) Is Nothing) Then
                MyBase.Tables.Add(New discount_codeDataTable(ds.Tables("discount_code")))
            End If
            If (Not (ds.Tables("discount_code_combo")) Is Nothing) Then
                MyBase.Tables.Add(New discount_code_comboDataTable(ds.Tables("discount_code_combo")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableactivation_code = CType(MyBase.Tables("activation_code"),activation_codeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableactivation_code) Is Nothing) Then
                Me.tableactivation_code.InitVars
            End If
        End If
        Me.tableactivation_group = CType(MyBase.Tables("activation_group"),activation_groupDataTable)
        If (initTable = true) Then
            If (Not (Me.tableactivation_group) Is Nothing) Then
                Me.tableactivation_group.InitVars
            End If
        End If
        Me.tableactivation_validity_type = CType(MyBase.Tables("activation_validity_type"),activation_validity_typeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableactivation_validity_type) Is Nothing) Then
                Me.tableactivation_validity_type.InitVars
            End If
        End If
        Me.tableactivation_code_view1 = CType(MyBase.Tables("activation_code_view1"),activation_code_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableactivation_code_view1) Is Nothing) Then
                Me.tableactivation_code_view1.InitVars
            End If
        End If
        Me.tablediscount_code_view1 = CType(MyBase.Tables("discount_code_view1"),discount_code_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tablediscount_code_view1) Is Nothing) Then
                Me.tablediscount_code_view1.InitVars
            End If
        End If
        Me.tablediscount_type = CType(MyBase.Tables("discount_type"),discount_typeDataTable)
        If (initTable = true) Then
            If (Not (Me.tablediscount_type) Is Nothing) Then
                Me.tablediscount_type.InitVars
            End If
        End If
        Me.tablediscount_abo_validityto_type = CType(MyBase.Tables("discount_abo_validityto_type"),discount_abo_validityto_typeDataTable)
        If (initTable = true) Then
            If (Not (Me.tablediscount_abo_validityto_type) Is Nothing) Then
                Me.tablediscount_abo_validityto_type.InitVars
            End If
        End If
        Me.tableproducts = CType(MyBase.Tables("products"),productsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproducts) Is Nothing) Then
                Me.tableproducts.InitVars
            End If
        End If
        Me.tablediscount_code = CType(MyBase.Tables("discount_code"),discount_codeDataTable)
        If (initTable = true) Then
            If (Not (Me.tablediscount_code) Is Nothing) Then
                Me.tablediscount_code.InitVars
            End If
        End If
        Me.tablediscount_code_combo = CType(MyBase.Tables("discount_code_combo"),discount_code_comboDataTable)
        If (initTable = true) Then
            If (Not (Me.tablediscount_code_combo) Is Nothing) Then
                Me.tablediscount_code_combo.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsMarketting"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsMarketting.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableactivation_code = New activation_codeDataTable
        MyBase.Tables.Add(Me.tableactivation_code)
        Me.tableactivation_group = New activation_groupDataTable
        MyBase.Tables.Add(Me.tableactivation_group)
        Me.tableactivation_validity_type = New activation_validity_typeDataTable
        MyBase.Tables.Add(Me.tableactivation_validity_type)
        Me.tableactivation_code_view1 = New activation_code_view1DataTable
        MyBase.Tables.Add(Me.tableactivation_code_view1)
        Me.tablediscount_code_view1 = New discount_code_view1DataTable
        MyBase.Tables.Add(Me.tablediscount_code_view1)
        Me.tablediscount_type = New discount_typeDataTable
        MyBase.Tables.Add(Me.tablediscount_type)
        Me.tablediscount_abo_validityto_type = New discount_abo_validityto_typeDataTable
        MyBase.Tables.Add(Me.tablediscount_abo_validityto_type)
        Me.tableproducts = New productsDataTable
        MyBase.Tables.Add(Me.tableproducts)
        Me.tablediscount_code = New discount_codeDataTable
        MyBase.Tables.Add(Me.tablediscount_code)
        Me.tablediscount_code_combo = New discount_code_comboDataTable
        MyBase.Tables.Add(Me.tablediscount_code_combo)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeactivation_code() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeactivation_group() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeactivation_validity_type() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeactivation_code_view1() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializediscount_code_view1() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializediscount_type() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializediscount_abo_validityto_type() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeproducts() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializediscount_code() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializediscount_code_combo() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsMarketting = New dsMarketting
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub activation_codeRowChangeEventHandler(ByVal sender As Object, ByVal e As activation_codeRowChangeEvent)
    
    Public Delegate Sub activation_groupRowChangeEventHandler(ByVal sender As Object, ByVal e As activation_groupRowChangeEvent)
    
    Public Delegate Sub activation_validity_typeRowChangeEventHandler(ByVal sender As Object, ByVal e As activation_validity_typeRowChangeEvent)
    
    Public Delegate Sub activation_code_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As activation_code_view1RowChangeEvent)
    
    Public Delegate Sub discount_code_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As discount_code_view1RowChangeEvent)
    
    Public Delegate Sub discount_typeRowChangeEventHandler(ByVal sender As Object, ByVal e As discount_typeRowChangeEvent)
    
    Public Delegate Sub discount_abo_validityto_typeRowChangeEventHandler(ByVal sender As Object, ByVal e As discount_abo_validityto_typeRowChangeEvent)
    
    Public Delegate Sub productsRowChangeEventHandler(ByVal sender As Object, ByVal e As productsRowChangeEvent)
    
    Public Delegate Sub discount_codeRowChangeEventHandler(ByVal sender As Object, ByVal e As discount_codeRowChangeEvent)
    
    Public Delegate Sub discount_code_comboRowChangeEventHandler(ByVal sender As Object, ByVal e As discount_code_comboRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class activation_codeDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnactivation_id As System.Data.DataColumn
        
        Private columnactivation_code As System.Data.DataColumn
        
        Private columnactivation_group As System.Data.DataColumn
        
        Private columnactivation_group_id As System.Data.DataColumn
        
        Private columnactivation_pack As System.Data.DataColumn
        
        Private columnactivation_code_creation_date As System.Data.DataColumn
        
        Private columnactivation_code_validto_date As System.Data.DataColumn
        
        Private columnactivation_products_id As System.Data.DataColumn
        
        Private columnactivation_validity_month As System.Data.DataColumn
        
        Private columnactivation_validity_type As System.Data.DataColumn
        
        Private columnactivation_validity_value As System.Data.DataColumn
        
        Private columnactivation_waranty As System.Data.DataColumn
        
        Private columncustomers_id As System.Data.DataColumn
        
        Private columnactivation_date As System.Data.DataColumn
        
        Private columncomment As System.Data.DataColumn
        
        Private columnabo_dvd_credit As System.Data.DataColumn
        
        Private columnnext_discount As System.Data.DataColumn
        
        Private columncredit0_auto_reconduct As System.Data.DataColumn
        
        Private columnabo_auto_stop_next_reconduction As System.Data.DataColumn
        
        Private columnbanner As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "activation_code"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_idColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_codeColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_code
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_groupColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_group
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_group_idColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_group_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_packColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_pack
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_code_creation_dateColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_code_creation_date
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_code_validto_dateColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_code_validto_date
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_products_idColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_products_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_validity_monthColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_validity_month
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_validity_typeColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_validity_type
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_validity_valueColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_validity_value
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_warantyColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_waranty
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_dateColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_date
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_dvd_creditColumn() As System.Data.DataColumn
            Get
                Return Me.columnabo_dvd_credit
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property next_discountColumn() As System.Data.DataColumn
            Get
                Return Me.columnnext_discount
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credit0_auto_reconductColumn() As System.Data.DataColumn
            Get
                Return Me.columncredit0_auto_reconduct
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_auto_stop_next_reconductionColumn() As System.Data.DataColumn
            Get
                Return Me.columnabo_auto_stop_next_reconduction
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bannerColumn() As System.Data.DataColumn
            Get
                Return Me.columnbanner
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As activation_codeRow
            Get
                Return CType(Me.Rows(index),activation_codeRow)
            End Get
        End Property
        
        Public Event activation_codeRowChanging As activation_codeRowChangeEventHandler
        
        Public Event activation_codeRowChanged As activation_codeRowChangeEventHandler
        
        Public Event activation_codeRowDeleting As activation_codeRowChangeEventHandler
        
        Public Event activation_codeRowDeleted As activation_codeRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addactivation_codeRow(ByVal row As activation_codeRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addactivation_codeRow( _
                    ByVal activation_id As Integer,  _
                    ByVal activation_code As String,  _
                    ByVal activation_group As Integer,  _
                    ByVal activation_group_id As Integer,  _
                    ByVal activation_pack As Integer,  _
                    ByVal activation_code_creation_date As Date,  _
                    ByVal activation_code_validto_date As Date,  _
                    ByVal activation_products_id As Integer,  _
                    ByVal activation_validity_month As Integer,  _
                    ByVal activation_validity_type As Integer,  _
                    ByVal activation_validity_value As Integer,  _
                    ByVal activation_waranty As Integer,  _
                    ByVal customers_id As Integer,  _
                    ByVal activation_date As Date,  _
                    ByVal comment As String,  _
                    ByVal abo_dvd_credit As Integer,  _
                    ByVal next_discount As Integer,  _
                    ByVal credit0_auto_reconduct As Integer,  _
                    ByVal abo_auto_stop_next_reconduction As Integer,  _
                    ByVal banner As String) As activation_codeRow
            Dim rowactivation_codeRow As activation_codeRow = CType(Me.NewRow,activation_codeRow)
            rowactivation_codeRow.ItemArray = New Object() {activation_id, activation_code, activation_group, activation_group_id, activation_pack, activation_code_creation_date, activation_code_validto_date, activation_products_id, activation_validity_month, activation_validity_type, activation_validity_value, activation_waranty, customers_id, activation_date, comment, abo_dvd_credit, next_discount, credit0_auto_reconduct, abo_auto_stop_next_reconduction, banner}
            Me.Rows.Add(rowactivation_codeRow)
            Return rowactivation_codeRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByactivation_id(ByVal activation_id As Integer) As activation_codeRow
            Return CType(Me.Rows.Find(New Object() {activation_id}),activation_codeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As activation_codeDataTable = CType(MyBase.Clone,activation_codeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New activation_codeDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnactivation_id = MyBase.Columns("activation_id")
            Me.columnactivation_code = MyBase.Columns("activation_code")
            Me.columnactivation_group = MyBase.Columns("activation_group")
            Me.columnactivation_group_id = MyBase.Columns("activation_group_id")
            Me.columnactivation_pack = MyBase.Columns("activation_pack")
            Me.columnactivation_code_creation_date = MyBase.Columns("activation_code_creation_date")
            Me.columnactivation_code_validto_date = MyBase.Columns("activation_code_validto_date")
            Me.columnactivation_products_id = MyBase.Columns("activation_products_id")
            Me.columnactivation_validity_month = MyBase.Columns("activation_validity_month")
            Me.columnactivation_validity_type = MyBase.Columns("activation_validity_type")
            Me.columnactivation_validity_value = MyBase.Columns("activation_validity_value")
            Me.columnactivation_waranty = MyBase.Columns("activation_waranty")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnactivation_date = MyBase.Columns("activation_date")
            Me.columncomment = MyBase.Columns("comment")
            Me.columnabo_dvd_credit = MyBase.Columns("abo_dvd_credit")
            Me.columnnext_discount = MyBase.Columns("next_discount")
            Me.columncredit0_auto_reconduct = MyBase.Columns("credit0_auto_reconduct")
            Me.columnabo_auto_stop_next_reconduction = MyBase.Columns("abo_auto_stop_next_reconduction")
            Me.columnbanner = MyBase.Columns("banner")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnactivation_id = New System.Data.DataColumn("activation_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_id)
            Me.columnactivation_code = New System.Data.DataColumn("activation_code", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_code)
            Me.columnactivation_group = New System.Data.DataColumn("activation_group", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_group)
            Me.columnactivation_group_id = New System.Data.DataColumn("activation_group_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_group_id)
            Me.columnactivation_pack = New System.Data.DataColumn("activation_pack", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_pack)
            Me.columnactivation_code_creation_date = New System.Data.DataColumn("activation_code_creation_date", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_code_creation_date)
            Me.columnactivation_code_validto_date = New System.Data.DataColumn("activation_code_validto_date", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_code_validto_date)
            Me.columnactivation_products_id = New System.Data.DataColumn("activation_products_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_products_id)
            Me.columnactivation_validity_month = New System.Data.DataColumn("activation_validity_month", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_validity_month)
            Me.columnactivation_validity_type = New System.Data.DataColumn("activation_validity_type", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_validity_type)
            Me.columnactivation_validity_value = New System.Data.DataColumn("activation_validity_value", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_validity_value)
            Me.columnactivation_waranty = New System.Data.DataColumn("activation_waranty", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_waranty)
            Me.columncustomers_id = New System.Data.DataColumn("customers_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnactivation_date = New System.Data.DataColumn("activation_date", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_date)
            Me.columncomment = New System.Data.DataColumn("comment", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnabo_dvd_credit = New System.Data.DataColumn("abo_dvd_credit", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_dvd_credit)
            Me.columnnext_discount = New System.Data.DataColumn("next_discount", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnext_discount)
            Me.columncredit0_auto_reconduct = New System.Data.DataColumn("credit0_auto_reconduct", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredit0_auto_reconduct)
            Me.columnabo_auto_stop_next_reconduction = New System.Data.DataColumn("abo_auto_stop_next_reconduction", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_auto_stop_next_reconduction)
            Me.columnbanner = New System.Data.DataColumn("banner", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbanner)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnactivation_id}, true))
            Me.columnactivation_id.AllowDBNull = false
            Me.columnactivation_id.Unique = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newactivation_codeRow() As activation_codeRow
            Return CType(Me.NewRow,activation_codeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New activation_codeRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(activation_codeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.activation_codeRowChangedEvent) Is Nothing) Then
                RaiseEvent activation_codeRowChanged(Me, New activation_codeRowChangeEvent(CType(e.Row,activation_codeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.activation_codeRowChangingEvent) Is Nothing) Then
                RaiseEvent activation_codeRowChanging(Me, New activation_codeRowChangeEvent(CType(e.Row,activation_codeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.activation_codeRowDeletedEvent) Is Nothing) Then
                RaiseEvent activation_codeRowDeleted(Me, New activation_codeRowChangeEvent(CType(e.Row,activation_codeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.activation_codeRowDeletingEvent) Is Nothing) Then
                RaiseEvent activation_codeRowDeleting(Me, New activation_codeRowChangeEvent(CType(e.Row,activation_codeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeactivation_codeRow(ByVal row As activation_codeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMarketting = New dsMarketting
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "activation_codeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class activation_groupDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnactivation_group_id As System.Data.DataColumn
        
        Private columnactivation_group_name As System.Data.DataColumn
        
        Private columnincluded_partner_file As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "activation_group"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_group_idColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_group_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_group_nameColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_group_name
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property included_partner_fileColumn() As System.Data.DataColumn
            Get
                Return Me.columnincluded_partner_file
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As activation_groupRow
            Get
                Return CType(Me.Rows(index),activation_groupRow)
            End Get
        End Property
        
        Public Event activation_groupRowChanging As activation_groupRowChangeEventHandler
        
        Public Event activation_groupRowChanged As activation_groupRowChangeEventHandler
        
        Public Event activation_groupRowDeleting As activation_groupRowChangeEventHandler
        
        Public Event activation_groupRowDeleted As activation_groupRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addactivation_groupRow(ByVal row As activation_groupRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addactivation_groupRow(ByVal activation_group_id As Integer, ByVal activation_group_name As String, ByVal included_partner_file As String) As activation_groupRow
            Dim rowactivation_groupRow As activation_groupRow = CType(Me.NewRow,activation_groupRow)
            rowactivation_groupRow.ItemArray = New Object() {activation_group_id, activation_group_name, included_partner_file}
            Me.Rows.Add(rowactivation_groupRow)
            Return rowactivation_groupRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByactivation_group_id(ByVal activation_group_id As Integer) As activation_groupRow
            Return CType(Me.Rows.Find(New Object() {activation_group_id}),activation_groupRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As activation_groupDataTable = CType(MyBase.Clone,activation_groupDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New activation_groupDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnactivation_group_id = MyBase.Columns("activation_group_id")
            Me.columnactivation_group_name = MyBase.Columns("activation_group_name")
            Me.columnincluded_partner_file = MyBase.Columns("included_partner_file")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnactivation_group_id = New System.Data.DataColumn("activation_group_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_group_id)
            Me.columnactivation_group_name = New System.Data.DataColumn("activation_group_name", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_group_name)
            Me.columnincluded_partner_file = New System.Data.DataColumn("included_partner_file", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnincluded_partner_file)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnactivation_group_id}, true))
            Me.columnactivation_group_id.AllowDBNull = false
            Me.columnactivation_group_id.Unique = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newactivation_groupRow() As activation_groupRow
            Return CType(Me.NewRow,activation_groupRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New activation_groupRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(activation_groupRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.activation_groupRowChangedEvent) Is Nothing) Then
                RaiseEvent activation_groupRowChanged(Me, New activation_groupRowChangeEvent(CType(e.Row,activation_groupRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.activation_groupRowChangingEvent) Is Nothing) Then
                RaiseEvent activation_groupRowChanging(Me, New activation_groupRowChangeEvent(CType(e.Row,activation_groupRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.activation_groupRowDeletedEvent) Is Nothing) Then
                RaiseEvent activation_groupRowDeleted(Me, New activation_groupRowChangeEvent(CType(e.Row,activation_groupRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.activation_groupRowDeletingEvent) Is Nothing) Then
                RaiseEvent activation_groupRowDeleting(Me, New activation_groupRowChangeEvent(CType(e.Row,activation_groupRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeactivation_groupRow(ByVal row As activation_groupRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMarketting = New dsMarketting
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "activation_groupDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class activation_validity_typeDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnvalidity_type_id As System.Data.DataColumn
        
        Private columnvalidity_type_explained As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "activation_validity_type"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property validity_type_idColumn() As System.Data.DataColumn
            Get
                Return Me.columnvalidity_type_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property validity_type_explainedColumn() As System.Data.DataColumn
            Get
                Return Me.columnvalidity_type_explained
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As activation_validity_typeRow
            Get
                Return CType(Me.Rows(index),activation_validity_typeRow)
            End Get
        End Property
        
        Public Event activation_validity_typeRowChanging As activation_validity_typeRowChangeEventHandler
        
        Public Event activation_validity_typeRowChanged As activation_validity_typeRowChangeEventHandler
        
        Public Event activation_validity_typeRowDeleting As activation_validity_typeRowChangeEventHandler
        
        Public Event activation_validity_typeRowDeleted As activation_validity_typeRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addactivation_validity_typeRow(ByVal row As activation_validity_typeRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addactivation_validity_typeRow(ByVal validity_type_id As Integer, ByVal validity_type_explained As String) As activation_validity_typeRow
            Dim rowactivation_validity_typeRow As activation_validity_typeRow = CType(Me.NewRow,activation_validity_typeRow)
            rowactivation_validity_typeRow.ItemArray = New Object() {validity_type_id, validity_type_explained}
            Me.Rows.Add(rowactivation_validity_typeRow)
            Return rowactivation_validity_typeRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByvalidity_type_id(ByVal validity_type_id As Integer) As activation_validity_typeRow
            Return CType(Me.Rows.Find(New Object() {validity_type_id}),activation_validity_typeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As activation_validity_typeDataTable = CType(MyBase.Clone,activation_validity_typeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New activation_validity_typeDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnvalidity_type_id = MyBase.Columns("validity_type_id")
            Me.columnvalidity_type_explained = MyBase.Columns("validity_type_explained")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnvalidity_type_id = New System.Data.DataColumn("validity_type_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalidity_type_id)
            Me.columnvalidity_type_explained = New System.Data.DataColumn("validity_type_explained", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalidity_type_explained)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnvalidity_type_id}, true))
            Me.columnvalidity_type_id.AllowDBNull = false
            Me.columnvalidity_type_id.Unique = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newactivation_validity_typeRow() As activation_validity_typeRow
            Return CType(Me.NewRow,activation_validity_typeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New activation_validity_typeRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(activation_validity_typeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.activation_validity_typeRowChangedEvent) Is Nothing) Then
                RaiseEvent activation_validity_typeRowChanged(Me, New activation_validity_typeRowChangeEvent(CType(e.Row,activation_validity_typeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.activation_validity_typeRowChangingEvent) Is Nothing) Then
                RaiseEvent activation_validity_typeRowChanging(Me, New activation_validity_typeRowChangeEvent(CType(e.Row,activation_validity_typeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.activation_validity_typeRowDeletedEvent) Is Nothing) Then
                RaiseEvent activation_validity_typeRowDeleted(Me, New activation_validity_typeRowChangeEvent(CType(e.Row,activation_validity_typeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.activation_validity_typeRowDeletingEvent) Is Nothing) Then
                RaiseEvent activation_validity_typeRowDeleting(Me, New activation_validity_typeRowChangeEvent(CType(e.Row,activation_validity_typeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeactivation_validity_typeRow(ByVal row As activation_validity_typeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMarketting = New dsMarketting
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "activation_validity_typeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class activation_code_view1DataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnactivation_code_id As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "activation_code_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_code_idColumn() As System.Data.DataColumn
            Get
                Return Me.columnactivation_code_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As activation_code_view1Row
            Get
                Return CType(Me.Rows(index),activation_code_view1Row)
            End Get
        End Property
        
        Public Event activation_code_view1RowChanging As activation_code_view1RowChangeEventHandler
        
        Public Event activation_code_view1RowChanged As activation_code_view1RowChangeEventHandler
        
        Public Event activation_code_view1RowDeleting As activation_code_view1RowChangeEventHandler
        
        Public Event activation_code_view1RowDeleted As activation_code_view1RowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addactivation_code_view1Row(ByVal row As activation_code_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addactivation_code_view1Row(ByVal activation_code_id As Integer) As activation_code_view1Row
            Dim rowactivation_code_view1Row As activation_code_view1Row = CType(Me.NewRow,activation_code_view1Row)
            rowactivation_code_view1Row.ItemArray = New Object() {activation_code_id}
            Me.Rows.Add(rowactivation_code_view1Row)
            Return rowactivation_code_view1Row
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As activation_code_view1DataTable = CType(MyBase.Clone,activation_code_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New activation_code_view1DataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnactivation_code_id = MyBase.Columns("activation_code_id")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnactivation_code_id = New System.Data.DataColumn("activation_code_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_code_id)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newactivation_code_view1Row() As activation_code_view1Row
            Return CType(Me.NewRow,activation_code_view1Row)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New activation_code_view1Row(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(activation_code_view1Row)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.activation_code_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent activation_code_view1RowChanged(Me, New activation_code_view1RowChangeEvent(CType(e.Row,activation_code_view1Row), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.activation_code_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent activation_code_view1RowChanging(Me, New activation_code_view1RowChangeEvent(CType(e.Row,activation_code_view1Row), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.activation_code_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent activation_code_view1RowDeleted(Me, New activation_code_view1RowChangeEvent(CType(e.Row,activation_code_view1Row), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.activation_code_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent activation_code_view1RowDeleting(Me, New activation_code_view1RowChangeEvent(CType(e.Row,activation_code_view1Row), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeactivation_code_view1Row(ByVal row As activation_code_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMarketting = New dsMarketting
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "activation_code_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class discount_code_view1DataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columndiscount_code_id As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "discount_code_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_code_idColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_code_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As discount_code_view1Row
            Get
                Return CType(Me.Rows(index),discount_code_view1Row)
            End Get
        End Property
        
        Public Event discount_code_view1RowChanging As discount_code_view1RowChangeEventHandler
        
        Public Event discount_code_view1RowChanged As discount_code_view1RowChangeEventHandler
        
        Public Event discount_code_view1RowDeleting As discount_code_view1RowChangeEventHandler
        
        Public Event discount_code_view1RowDeleted As discount_code_view1RowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddiscount_code_view1Row(ByVal row As discount_code_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddiscount_code_view1Row(ByVal discount_code_id As Integer) As discount_code_view1Row
            Dim rowdiscount_code_view1Row As discount_code_view1Row = CType(Me.NewRow,discount_code_view1Row)
            rowdiscount_code_view1Row.ItemArray = New Object() {discount_code_id}
            Me.Rows.Add(rowdiscount_code_view1Row)
            Return rowdiscount_code_view1Row
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As discount_code_view1DataTable = CType(MyBase.Clone,discount_code_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New discount_code_view1DataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndiscount_code_id = MyBase.Columns("discount_code_id")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndiscount_code_id = New System.Data.DataColumn("discount_code_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code_id)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdiscount_code_view1Row() As discount_code_view1Row
            Return CType(Me.NewRow,discount_code_view1Row)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New discount_code_view1Row(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(discount_code_view1Row)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.discount_code_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent discount_code_view1RowChanged(Me, New discount_code_view1RowChangeEvent(CType(e.Row,discount_code_view1Row), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.discount_code_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent discount_code_view1RowChanging(Me, New discount_code_view1RowChangeEvent(CType(e.Row,discount_code_view1Row), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.discount_code_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent discount_code_view1RowDeleted(Me, New discount_code_view1RowChangeEvent(CType(e.Row,discount_code_view1Row), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.discount_code_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent discount_code_view1RowDeleting(Me, New discount_code_view1RowChangeEvent(CType(e.Row,discount_code_view1Row), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removediscount_code_view1Row(ByVal row As discount_code_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMarketting = New dsMarketting
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "discount_code_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class discount_typeDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columndiscount_type As System.Data.DataColumn
        
        Private columndiscount_explained As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "discount_type"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_typeColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_type
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_explainedColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_explained
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As discount_typeRow
            Get
                Return CType(Me.Rows(index),discount_typeRow)
            End Get
        End Property
        
        Public Event discount_typeRowChanging As discount_typeRowChangeEventHandler
        
        Public Event discount_typeRowChanged As discount_typeRowChangeEventHandler
        
        Public Event discount_typeRowDeleting As discount_typeRowChangeEventHandler
        
        Public Event discount_typeRowDeleted As discount_typeRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddiscount_typeRow(ByVal row As discount_typeRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddiscount_typeRow(ByVal discount_type As Integer, ByVal discount_explained As String) As discount_typeRow
            Dim rowdiscount_typeRow As discount_typeRow = CType(Me.NewRow,discount_typeRow)
            rowdiscount_typeRow.ItemArray = New Object() {discount_type, discount_explained}
            Me.Rows.Add(rowdiscount_typeRow)
            Return rowdiscount_typeRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBydiscount_type(ByVal discount_type As Integer) As discount_typeRow
            Return CType(Me.Rows.Find(New Object() {discount_type}),discount_typeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As discount_typeDataTable = CType(MyBase.Clone,discount_typeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New discount_typeDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndiscount_type = MyBase.Columns("discount_type")
            Me.columndiscount_explained = MyBase.Columns("discount_explained")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndiscount_type = New System.Data.DataColumn("discount_type", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_type)
            Me.columndiscount_explained = New System.Data.DataColumn("discount_explained", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_explained)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columndiscount_type}, true))
            Me.columndiscount_type.AllowDBNull = false
            Me.columndiscount_type.Unique = true
            Me.columndiscount_explained.MaxLength = 65535
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdiscount_typeRow() As discount_typeRow
            Return CType(Me.NewRow,discount_typeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New discount_typeRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(discount_typeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.discount_typeRowChangedEvent) Is Nothing) Then
                RaiseEvent discount_typeRowChanged(Me, New discount_typeRowChangeEvent(CType(e.Row,discount_typeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.discount_typeRowChangingEvent) Is Nothing) Then
                RaiseEvent discount_typeRowChanging(Me, New discount_typeRowChangeEvent(CType(e.Row,discount_typeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.discount_typeRowDeletedEvent) Is Nothing) Then
                RaiseEvent discount_typeRowDeleted(Me, New discount_typeRowChangeEvent(CType(e.Row,discount_typeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.discount_typeRowDeletingEvent) Is Nothing) Then
                RaiseEvent discount_typeRowDeleting(Me, New discount_typeRowChangeEvent(CType(e.Row,discount_typeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removediscount_typeRow(ByVal row As discount_typeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMarketting = New dsMarketting
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "discount_typeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class discount_abo_validityto_typeDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columndiscount_abo_validityto_type_id As System.Data.DataColumn
        
        Private columndiscount_abo_validityto_type_name As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "discount_abo_validityto_type"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_abo_validityto_type_idColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_abo_validityto_type_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_abo_validityto_type_nameColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_abo_validityto_type_name
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As discount_abo_validityto_typeRow
            Get
                Return CType(Me.Rows(index),discount_abo_validityto_typeRow)
            End Get
        End Property
        
        Public Event discount_abo_validityto_typeRowChanging As discount_abo_validityto_typeRowChangeEventHandler
        
        Public Event discount_abo_validityto_typeRowChanged As discount_abo_validityto_typeRowChangeEventHandler
        
        Public Event discount_abo_validityto_typeRowDeleting As discount_abo_validityto_typeRowChangeEventHandler
        
        Public Event discount_abo_validityto_typeRowDeleted As discount_abo_validityto_typeRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddiscount_abo_validityto_typeRow(ByVal row As discount_abo_validityto_typeRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddiscount_abo_validityto_typeRow(ByVal discount_abo_validityto_type_id As Integer, ByVal discount_abo_validityto_type_name As String) As discount_abo_validityto_typeRow
            Dim rowdiscount_abo_validityto_typeRow As discount_abo_validityto_typeRow = CType(Me.NewRow,discount_abo_validityto_typeRow)
            rowdiscount_abo_validityto_typeRow.ItemArray = New Object() {discount_abo_validityto_type_id, discount_abo_validityto_type_name}
            Me.Rows.Add(rowdiscount_abo_validityto_typeRow)
            Return rowdiscount_abo_validityto_typeRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBydiscount_abo_validityto_type_id(ByVal discount_abo_validityto_type_id As Integer) As discount_abo_validityto_typeRow
            Return CType(Me.Rows.Find(New Object() {discount_abo_validityto_type_id}),discount_abo_validityto_typeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As discount_abo_validityto_typeDataTable = CType(MyBase.Clone,discount_abo_validityto_typeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New discount_abo_validityto_typeDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndiscount_abo_validityto_type_id = MyBase.Columns("discount_abo_validityto_type_id")
            Me.columndiscount_abo_validityto_type_name = MyBase.Columns("discount_abo_validityto_type_name")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndiscount_abo_validityto_type_id = New System.Data.DataColumn("discount_abo_validityto_type_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_abo_validityto_type_id)
            Me.columndiscount_abo_validityto_type_name = New System.Data.DataColumn("discount_abo_validityto_type_name", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_abo_validityto_type_name)
            Me.Constraints.Add(New System.Data.UniqueConstraint("discount_abo_validityto_typeKey1", New System.Data.DataColumn() {Me.columndiscount_abo_validityto_type_id}, true))
            Me.columndiscount_abo_validityto_type_id.AllowDBNull = false
            Me.columndiscount_abo_validityto_type_id.Unique = true
            Me.columndiscount_abo_validityto_type_name.MaxLength = 255
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdiscount_abo_validityto_typeRow() As discount_abo_validityto_typeRow
            Return CType(Me.NewRow,discount_abo_validityto_typeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New discount_abo_validityto_typeRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(discount_abo_validityto_typeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.discount_abo_validityto_typeRowChangedEvent) Is Nothing) Then
                RaiseEvent discount_abo_validityto_typeRowChanged(Me, New discount_abo_validityto_typeRowChangeEvent(CType(e.Row,discount_abo_validityto_typeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.discount_abo_validityto_typeRowChangingEvent) Is Nothing) Then
                RaiseEvent discount_abo_validityto_typeRowChanging(Me, New discount_abo_validityto_typeRowChangeEvent(CType(e.Row,discount_abo_validityto_typeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.discount_abo_validityto_typeRowDeletedEvent) Is Nothing) Then
                RaiseEvent discount_abo_validityto_typeRowDeleted(Me, New discount_abo_validityto_typeRowChangeEvent(CType(e.Row,discount_abo_validityto_typeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.discount_abo_validityto_typeRowDeletingEvent) Is Nothing) Then
                RaiseEvent discount_abo_validityto_typeRowDeleting(Me, New discount_abo_validityto_typeRowChangeEvent(CType(e.Row,discount_abo_validityto_typeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removediscount_abo_validityto_typeRow(ByVal row As discount_abo_validityto_typeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMarketting = New dsMarketting
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "discount_abo_validityto_typeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class productsDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnproducts_id As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "products"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As productsRow
            Get
                Return CType(Me.Rows(index),productsRow)
            End Get
        End Property
        
        Public Event productsRowChanging As productsRowChangeEventHandler
        
        Public Event productsRowChanged As productsRowChangeEventHandler
        
        Public Event productsRowDeleting As productsRowChangeEventHandler
        
        Public Event productsRowDeleted As productsRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddproductsRow(ByVal row As productsRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddproductsRow() As productsRow
            Dim rowproductsRow As productsRow = CType(Me.NewRow,productsRow)
            rowproductsRow.ItemArray = New Object() {Nothing}
            Me.Rows.Add(rowproductsRow)
            Return rowproductsRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproducts_id(ByVal products_id As Integer) As productsRow
            Return CType(Me.Rows.Find(New Object() {products_id}),productsRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As productsDataTable = CType(MyBase.Clone,productsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New productsDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New System.Data.DataColumn("products_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnproducts_id}, true))
            Me.columnproducts_id.AutoIncrement = true
            Me.columnproducts_id.AllowDBNull = false
            Me.columnproducts_id.Unique = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewproductsRow() As productsRow
            Return CType(Me.NewRow,productsRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New productsRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(productsRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.productsRowChangedEvent) Is Nothing) Then
                RaiseEvent productsRowChanged(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.productsRowChangingEvent) Is Nothing) Then
                RaiseEvent productsRowChanging(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.productsRowDeletedEvent) Is Nothing) Then
                RaiseEvent productsRowDeleted(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.productsRowDeletingEvent) Is Nothing) Then
                RaiseEvent productsRowDeleting(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveproductsRow(ByVal row As productsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMarketting = New dsMarketting
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "productsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class discount_codeDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columndiscount_code_id As System.Data.DataColumn
        
        Private columndiscount_code As System.Data.DataColumn
        
        Private columndiscount_type As System.Data.DataColumn
        
        Private columndiscount_value As System.Data.DataColumn
        
        Private columndiscount_limit As System.Data.DataColumn
        
        Private columndiscount_commitment As System.Data.DataColumn
        
        Private columndiscount_status As System.Data.DataColumn
        
        Private columndiscount_text_fr As System.Data.DataColumn
        
        Private columndiscount_text_nl As System.Data.DataColumn
        
        Private columndiscount_text_en As System.Data.DataColumn
        
        Private columndiscount_abo_validityto_type As System.Data.DataColumn
        
        Private columndiscount_abo_validityto_value As System.Data.DataColumn
        
        Private columncomment As System.Data.DataColumn
        
        Private columndiscount_nbr_month_before_reuse As System.Data.DataColumn
        
        Private columndiscount_recurring_nbr_of_month As System.Data.DataColumn
        
        Private columnbypass_discountuse As System.Data.DataColumn
        
        Private columndiscount_validityto As System.Data.DataColumn
        
        Private columnpayable As System.Data.DataColumn
        
        Private columnabo_dvd_credit As System.Data.DataColumn
        
        Private columnnext_discount As System.Data.DataColumn
        
        Private columncredit0_auto_reconduct As System.Data.DataColumn
        
        Private columnlanding_page As System.Data.DataColumn
        
        Private columnlanding_page_php As System.Data.DataColumn
        
        Private columnlisting_products_allowed As System.Data.DataColumn
        
        Private columnabo_auto_stop_next_reconduction As System.Data.DataColumn
        
        Private columngoto_step As System.Data.DataColumn
        
        Private columnbanner As System.Data.DataColumn
        
        Private columnFooter As System.Data.DataColumn
        
        Private columnfree_upgrade_allowed As System.Data.DataColumn
        
        Private columngroup_id As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "discount_code"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_code_idColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_code_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_codeColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_code
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_typeColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_type
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_valueColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_value
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_limitColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_limit
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_commitmentColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_commitment
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_statusColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_status
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_text_frColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_text_fr
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_text_nlColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_text_nl
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_text_enColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_text_en
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_abo_validityto_typeColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_abo_validityto_type
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_abo_validityto_valueColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_abo_validityto_value
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_nbr_month_before_reuseColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_nbr_month_before_reuse
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_recurring_nbr_of_monthColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_recurring_nbr_of_month
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bypass_discountuseColumn() As System.Data.DataColumn
            Get
                Return Me.columnbypass_discountuse
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_validitytoColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_validityto
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payableColumn() As System.Data.DataColumn
            Get
                Return Me.columnpayable
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_dvd_creditColumn() As System.Data.DataColumn
            Get
                Return Me.columnabo_dvd_credit
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property next_discountColumn() As System.Data.DataColumn
            Get
                Return Me.columnnext_discount
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credit0_auto_reconductColumn() As System.Data.DataColumn
            Get
                Return Me.columncredit0_auto_reconduct
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property landing_pageColumn() As System.Data.DataColumn
            Get
                Return Me.columnlanding_page
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property landing_page_phpColumn() As System.Data.DataColumn
            Get
                Return Me.columnlanding_page_php
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property listing_products_allowedColumn() As System.Data.DataColumn
            Get
                Return Me.columnlisting_products_allowed
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_auto_stop_next_reconductionColumn() As System.Data.DataColumn
            Get
                Return Me.columnabo_auto_stop_next_reconduction
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property goto_stepColumn() As System.Data.DataColumn
            Get
                Return Me.columngoto_step
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bannerColumn() As System.Data.DataColumn
            Get
                Return Me.columnbanner
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FooterColumn() As System.Data.DataColumn
            Get
                Return Me.columnFooter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property free_upgrade_allowedColumn() As System.Data.DataColumn
            Get
                Return Me.columnfree_upgrade_allowed
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property group_idColumn() As System.Data.DataColumn
            Get
                Return Me.columngroup_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As discount_codeRow
            Get
                Return CType(Me.Rows(index),discount_codeRow)
            End Get
        End Property
        
        Public Event discount_codeRowChanging As discount_codeRowChangeEventHandler
        
        Public Event discount_codeRowChanged As discount_codeRowChangeEventHandler
        
        Public Event discount_codeRowDeleting As discount_codeRowChangeEventHandler
        
        Public Event discount_codeRowDeleted As discount_codeRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddiscount_codeRow(ByVal row As discount_codeRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddiscount_codeRow( _
                    ByVal discount_code As String,  _
                    ByVal discount_type As Integer,  _
                    ByVal discount_value As Decimal,  _
                    ByVal discount_limit As Integer,  _
                    ByVal discount_commitment As Integer,  _
                    ByVal discount_status As Integer,  _
                    ByVal discount_text_fr As String,  _
                    ByVal discount_text_nl As String,  _
                    ByVal discount_text_en As String,  _
                    ByVal discount_abo_validityto_type As Integer,  _
                    ByVal discount_abo_validityto_value As Integer,  _
                    ByVal comment As String,  _
                    ByVal discount_nbr_month_before_reuse As Integer,  _
                    ByVal discount_recurring_nbr_of_month As Integer,  _
                    ByVal bypass_discountuse As Integer,  _
                    ByVal discount_validityto As Date,  _
                    ByVal payable As Integer,  _
                    ByVal abo_dvd_credit As Integer,  _
                    ByVal next_discount As Integer,  _
                    ByVal credit0_auto_reconduct As Integer,  _
                    ByVal landing_page As Integer,  _
                    ByVal landing_page_php As String,  _
                    ByVal listing_products_allowed As String,  _
                    ByVal abo_auto_stop_next_reconduction As Integer,  _
                    ByVal goto_step As Integer,  _
                    ByVal banner As String,  _
                    ByVal Footer As String,  _
                    ByVal free_upgrade_allowed As Integer,  _
                    ByVal group_id As Integer) As discount_codeRow
            Dim rowdiscount_codeRow As discount_codeRow = CType(Me.NewRow,discount_codeRow)
            rowdiscount_codeRow.ItemArray = New Object() {Nothing, discount_code, discount_type, discount_value, discount_limit, discount_commitment, discount_status, discount_text_fr, discount_text_nl, discount_text_en, discount_abo_validityto_type, discount_abo_validityto_value, comment, discount_nbr_month_before_reuse, discount_recurring_nbr_of_month, bypass_discountuse, discount_validityto, payable, abo_dvd_credit, next_discount, credit0_auto_reconduct, landing_page, landing_page_php, listing_products_allowed, abo_auto_stop_next_reconduction, goto_step, banner, Footer, free_upgrade_allowed, group_id}
            Me.Rows.Add(rowdiscount_codeRow)
            Return rowdiscount_codeRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBydiscount_code_id(ByVal discount_code_id As Integer) As discount_codeRow
            Return CType(Me.Rows.Find(New Object() {discount_code_id}),discount_codeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As discount_codeDataTable = CType(MyBase.Clone,discount_codeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New discount_codeDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndiscount_code_id = MyBase.Columns("discount_code_id")
            Me.columndiscount_code = MyBase.Columns("discount_code")
            Me.columndiscount_type = MyBase.Columns("discount_type")
            Me.columndiscount_value = MyBase.Columns("discount_value")
            Me.columndiscount_limit = MyBase.Columns("discount_limit")
            Me.columndiscount_commitment = MyBase.Columns("discount_commitment")
            Me.columndiscount_status = MyBase.Columns("discount_status")
            Me.columndiscount_text_fr = MyBase.Columns("discount_text_fr")
            Me.columndiscount_text_nl = MyBase.Columns("discount_text_nl")
            Me.columndiscount_text_en = MyBase.Columns("discount_text_en")
            Me.columndiscount_abo_validityto_type = MyBase.Columns("discount_abo_validityto_type")
            Me.columndiscount_abo_validityto_value = MyBase.Columns("discount_abo_validityto_value")
            Me.columncomment = MyBase.Columns("comment")
            Me.columndiscount_nbr_month_before_reuse = MyBase.Columns("discount_nbr_month_before_reuse")
            Me.columndiscount_recurring_nbr_of_month = MyBase.Columns("discount_recurring_nbr_of_month")
            Me.columnbypass_discountuse = MyBase.Columns("bypass_discountuse")
            Me.columndiscount_validityto = MyBase.Columns("discount_validityto")
            Me.columnpayable = MyBase.Columns("payable")
            Me.columnabo_dvd_credit = MyBase.Columns("abo_dvd_credit")
            Me.columnnext_discount = MyBase.Columns("next_discount")
            Me.columncredit0_auto_reconduct = MyBase.Columns("credit0_auto_reconduct")
            Me.columnlanding_page = MyBase.Columns("landing_page")
            Me.columnlanding_page_php = MyBase.Columns("landing_page_php")
            Me.columnlisting_products_allowed = MyBase.Columns("listing_products_allowed")
            Me.columnabo_auto_stop_next_reconduction = MyBase.Columns("abo_auto_stop_next_reconduction")
            Me.columngoto_step = MyBase.Columns("goto_step")
            Me.columnbanner = MyBase.Columns("banner")
            Me.columnFooter = MyBase.Columns("Footer")
            Me.columnfree_upgrade_allowed = MyBase.Columns("free_upgrade_allowed")
            Me.columngroup_id = MyBase.Columns("group_id")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndiscount_code_id = New System.Data.DataColumn("discount_code_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code_id)
            Me.columndiscount_code = New System.Data.DataColumn("discount_code", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code)
            Me.columndiscount_type = New System.Data.DataColumn("discount_type", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_type)
            Me.columndiscount_value = New System.Data.DataColumn("discount_value", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_value)
            Me.columndiscount_limit = New System.Data.DataColumn("discount_limit", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_limit)
            Me.columndiscount_commitment = New System.Data.DataColumn("discount_commitment", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_commitment)
            Me.columndiscount_status = New System.Data.DataColumn("discount_status", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_status)
            Me.columndiscount_text_fr = New System.Data.DataColumn("discount_text_fr", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_text_fr)
            Me.columndiscount_text_nl = New System.Data.DataColumn("discount_text_nl", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_text_nl)
            Me.columndiscount_text_en = New System.Data.DataColumn("discount_text_en", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_text_en)
            Me.columndiscount_abo_validityto_type = New System.Data.DataColumn("discount_abo_validityto_type", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_abo_validityto_type)
            Me.columndiscount_abo_validityto_value = New System.Data.DataColumn("discount_abo_validityto_value", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_abo_validityto_value)
            Me.columncomment = New System.Data.DataColumn("comment", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columndiscount_nbr_month_before_reuse = New System.Data.DataColumn("discount_nbr_month_before_reuse", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_nbr_month_before_reuse)
            Me.columndiscount_recurring_nbr_of_month = New System.Data.DataColumn("discount_recurring_nbr_of_month", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_recurring_nbr_of_month)
            Me.columnbypass_discountuse = New System.Data.DataColumn("bypass_discountuse", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbypass_discountuse)
            Me.columndiscount_validityto = New System.Data.DataColumn("discount_validityto", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_validityto)
            Me.columnpayable = New System.Data.DataColumn("payable", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayable)
            Me.columnabo_dvd_credit = New System.Data.DataColumn("abo_dvd_credit", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_dvd_credit)
            Me.columnnext_discount = New System.Data.DataColumn("next_discount", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnext_discount)
            Me.columncredit0_auto_reconduct = New System.Data.DataColumn("credit0_auto_reconduct", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredit0_auto_reconduct)
            Me.columnlanding_page = New System.Data.DataColumn("landing_page", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanding_page)
            Me.columnlanding_page_php = New System.Data.DataColumn("landing_page_php", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanding_page_php)
            Me.columnlisting_products_allowed = New System.Data.DataColumn("listing_products_allowed", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlisting_products_allowed)
            Me.columnabo_auto_stop_next_reconduction = New System.Data.DataColumn("abo_auto_stop_next_reconduction", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_auto_stop_next_reconduction)
            Me.columngoto_step = New System.Data.DataColumn("goto_step", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngoto_step)
            Me.columnbanner = New System.Data.DataColumn("banner", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbanner)
            Me.columnFooter = New System.Data.DataColumn("Footer", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFooter)
            Me.columnfree_upgrade_allowed = New System.Data.DataColumn("free_upgrade_allowed", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfree_upgrade_allowed)
            Me.columngroup_id = New System.Data.DataColumn("group_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngroup_id)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columndiscount_code}, false))
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint2", New System.Data.DataColumn() {Me.columndiscount_code_id}, true))
            Me.columndiscount_code_id.AutoIncrement = true
            Me.columndiscount_code_id.AllowDBNull = false
            Me.columndiscount_code_id.Unique = true
            Me.columndiscount_code.AllowDBNull = false
            Me.columndiscount_code.Unique = true
            Me.columndiscount_code.MaxLength = 50
            Me.columndiscount_type.AllowDBNull = false
            Me.columndiscount_value.AllowDBNull = false
            Me.columndiscount_limit.AllowDBNull = false
            Me.columndiscount_commitment.AllowDBNull = false
            Me.columndiscount_status.AllowDBNull = false
            Me.columndiscount_text_fr.AllowDBNull = false
            Me.columndiscount_text_fr.MaxLength = 255
            Me.columndiscount_text_nl.AllowDBNull = false
            Me.columndiscount_text_nl.MaxLength = 255
            Me.columndiscount_text_en.AllowDBNull = false
            Me.columndiscount_text_en.MaxLength = 255
            Me.columndiscount_abo_validityto_type.AllowDBNull = false
            Me.columndiscount_abo_validityto_value.AllowDBNull = false
            Me.columncomment.AllowDBNull = false
            Me.columncomment.MaxLength = 65535
            Me.columndiscount_nbr_month_before_reuse.AllowDBNull = false
            Me.columndiscount_recurring_nbr_of_month.AllowDBNull = false
            Me.columnbypass_discountuse.AllowDBNull = false
            Me.columnpayable.AllowDBNull = false
            Me.columnabo_dvd_credit.AllowDBNull = false
            Me.columnnext_discount.AllowDBNull = false
            Me.columncredit0_auto_reconduct.AllowDBNull = false
            Me.columnlanding_page.AllowDBNull = false
            Me.columnlanding_page_php.MaxLength = 50
            Me.columnlisting_products_allowed.MaxLength = 50
            Me.columnabo_auto_stop_next_reconduction.AllowDBNull = false
            Me.columngoto_step.AllowDBNull = false
            Me.columnbanner.MaxLength = 30
            Me.columnFooter.AllowDBNull = false
            Me.columnFooter.MaxLength = 25
            Me.columnfree_upgrade_allowed.AllowDBNull = false
            Me.columngroup_id.AllowDBNull = false
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdiscount_codeRow() As discount_codeRow
            Return CType(Me.NewRow,discount_codeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New discount_codeRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(discount_codeRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.discount_codeRowChangedEvent) Is Nothing) Then
                RaiseEvent discount_codeRowChanged(Me, New discount_codeRowChangeEvent(CType(e.Row,discount_codeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.discount_codeRowChangingEvent) Is Nothing) Then
                RaiseEvent discount_codeRowChanging(Me, New discount_codeRowChangeEvent(CType(e.Row,discount_codeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.discount_codeRowDeletedEvent) Is Nothing) Then
                RaiseEvent discount_codeRowDeleted(Me, New discount_codeRowChangeEvent(CType(e.Row,discount_codeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.discount_codeRowDeletingEvent) Is Nothing) Then
                RaiseEvent discount_codeRowDeleting(Me, New discount_codeRowChangeEvent(CType(e.Row,discount_codeRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removediscount_codeRow(ByVal row As discount_codeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMarketting = New dsMarketting
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "discount_codeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class discount_code_comboDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columndiscount_code_id As System.Data.DataColumn
        
        Private columndiscount_code As System.Data.DataColumn
        
        Private columndiscount_type As System.Data.DataColumn
        
        Private columndiscount_value As System.Data.DataColumn
        
        Private columndiscount_limit As System.Data.DataColumn
        
        Private columndiscount_commitment As System.Data.DataColumn
        
        Private columndiscount_status As System.Data.DataColumn
        
        Private columndiscount_text_fr As System.Data.DataColumn
        
        Private columndiscount_text_nl As System.Data.DataColumn
        
        Private columndiscount_text_en As System.Data.DataColumn
        
        Private columndiscount_abo_validityto_type As System.Data.DataColumn
        
        Private columndiscount_abo_validityto_value As System.Data.DataColumn
        
        Private columncomment As System.Data.DataColumn
        
        Private columndiscount_nbr_month_before_reuse As System.Data.DataColumn
        
        Private columndiscount_recurring_nbr_of_month As System.Data.DataColumn
        
        Private columnbypass_discountuse As System.Data.DataColumn
        
        Private columndiscount_validityto As System.Data.DataColumn
        
        Private columnpayable As System.Data.DataColumn
        
        Private columnabo_dvd_credit As System.Data.DataColumn
        
        Private columnnext_discount As System.Data.DataColumn
        
        Private columncredit0_auto_reconduct As System.Data.DataColumn
        
        Private columnlanding_page As System.Data.DataColumn
        
        Private columnlanding_page_php As System.Data.DataColumn
        
        Private columnlisting_products_allowed As System.Data.DataColumn
        
        Private columnabo_auto_stop_next_reconduction As System.Data.DataColumn
        
        Private columngoto_step As System.Data.DataColumn
        
        Private columnbanner As System.Data.DataColumn
        
        Private columnFooter As System.Data.DataColumn
        
        Private columnfree_upgrade_allowed As System.Data.DataColumn
        
        Private columngroup_id As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "discount_code_combo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_code_idColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_code_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_codeColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_code
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_typeColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_type
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_valueColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_value
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_limitColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_limit
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_commitmentColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_commitment
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_statusColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_status
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_text_frColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_text_fr
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_text_nlColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_text_nl
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_text_enColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_text_en
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_abo_validityto_typeColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_abo_validityto_type
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_abo_validityto_valueColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_abo_validityto_value
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_nbr_month_before_reuseColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_nbr_month_before_reuse
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_recurring_nbr_of_monthColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_recurring_nbr_of_month
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bypass_discountuseColumn() As System.Data.DataColumn
            Get
                Return Me.columnbypass_discountuse
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_validitytoColumn() As System.Data.DataColumn
            Get
                Return Me.columndiscount_validityto
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payableColumn() As System.Data.DataColumn
            Get
                Return Me.columnpayable
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_dvd_creditColumn() As System.Data.DataColumn
            Get
                Return Me.columnabo_dvd_credit
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property next_discountColumn() As System.Data.DataColumn
            Get
                Return Me.columnnext_discount
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credit0_auto_reconductColumn() As System.Data.DataColumn
            Get
                Return Me.columncredit0_auto_reconduct
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property landing_pageColumn() As System.Data.DataColumn
            Get
                Return Me.columnlanding_page
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property landing_page_phpColumn() As System.Data.DataColumn
            Get
                Return Me.columnlanding_page_php
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property listing_products_allowedColumn() As System.Data.DataColumn
            Get
                Return Me.columnlisting_products_allowed
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_auto_stop_next_reconductionColumn() As System.Data.DataColumn
            Get
                Return Me.columnabo_auto_stop_next_reconduction
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property goto_stepColumn() As System.Data.DataColumn
            Get
                Return Me.columngoto_step
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bannerColumn() As System.Data.DataColumn
            Get
                Return Me.columnbanner
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FooterColumn() As System.Data.DataColumn
            Get
                Return Me.columnFooter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property free_upgrade_allowedColumn() As System.Data.DataColumn
            Get
                Return Me.columnfree_upgrade_allowed
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property group_idColumn() As System.Data.DataColumn
            Get
                Return Me.columngroup_id
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As discount_code_comboRow
            Get
                Return CType(Me.Rows(index),discount_code_comboRow)
            End Get
        End Property
        
        Public Event discount_code_comboRowChanging As discount_code_comboRowChangeEventHandler
        
        Public Event discount_code_comboRowChanged As discount_code_comboRowChangeEventHandler
        
        Public Event discount_code_comboRowDeleting As discount_code_comboRowChangeEventHandler
        
        Public Event discount_code_comboRowDeleted As discount_code_comboRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddiscount_code_comboRow(ByVal row As discount_code_comboRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddiscount_code_comboRow( _
                    ByVal discount_code As String,  _
                    ByVal discount_type As Integer,  _
                    ByVal discount_value As Decimal,  _
                    ByVal discount_limit As Integer,  _
                    ByVal discount_commitment As Integer,  _
                    ByVal discount_status As Integer,  _
                    ByVal discount_text_fr As String,  _
                    ByVal discount_text_nl As String,  _
                    ByVal discount_text_en As String,  _
                    ByVal discount_abo_validityto_type As Integer,  _
                    ByVal discount_abo_validityto_value As Integer,  _
                    ByVal comment As String,  _
                    ByVal discount_nbr_month_before_reuse As Integer,  _
                    ByVal discount_recurring_nbr_of_month As Integer,  _
                    ByVal bypass_discountuse As Integer,  _
                    ByVal discount_validityto As Date,  _
                    ByVal payable As Integer,  _
                    ByVal abo_dvd_credit As Integer,  _
                    ByVal next_discount As Integer,  _
                    ByVal credit0_auto_reconduct As Integer,  _
                    ByVal landing_page As Integer,  _
                    ByVal landing_page_php As String,  _
                    ByVal listing_products_allowed As String,  _
                    ByVal abo_auto_stop_next_reconduction As Integer,  _
                    ByVal goto_step As Integer,  _
                    ByVal banner As String,  _
                    ByVal Footer As String,  _
                    ByVal free_upgrade_allowed As Integer,  _
                    ByVal group_id As Integer) As discount_code_comboRow
            Dim rowdiscount_code_comboRow As discount_code_comboRow = CType(Me.NewRow,discount_code_comboRow)
            rowdiscount_code_comboRow.ItemArray = New Object() {Nothing, discount_code, discount_type, discount_value, discount_limit, discount_commitment, discount_status, discount_text_fr, discount_text_nl, discount_text_en, discount_abo_validityto_type, discount_abo_validityto_value, comment, discount_nbr_month_before_reuse, discount_recurring_nbr_of_month, bypass_discountuse, discount_validityto, payable, abo_dvd_credit, next_discount, credit0_auto_reconduct, landing_page, landing_page_php, listing_products_allowed, abo_auto_stop_next_reconduction, goto_step, banner, Footer, free_upgrade_allowed, group_id}
            Me.Rows.Add(rowdiscount_code_comboRow)
            Return rowdiscount_code_comboRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBydiscount_code_id(ByVal discount_code_id As Integer) As discount_code_comboRow
            Return CType(Me.Rows.Find(New Object() {discount_code_id}),discount_code_comboRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As discount_code_comboDataTable = CType(MyBase.Clone,discount_code_comboDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New discount_code_comboDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndiscount_code_id = MyBase.Columns("discount_code_id")
            Me.columndiscount_code = MyBase.Columns("discount_code")
            Me.columndiscount_type = MyBase.Columns("discount_type")
            Me.columndiscount_value = MyBase.Columns("discount_value")
            Me.columndiscount_limit = MyBase.Columns("discount_limit")
            Me.columndiscount_commitment = MyBase.Columns("discount_commitment")
            Me.columndiscount_status = MyBase.Columns("discount_status")
            Me.columndiscount_text_fr = MyBase.Columns("discount_text_fr")
            Me.columndiscount_text_nl = MyBase.Columns("discount_text_nl")
            Me.columndiscount_text_en = MyBase.Columns("discount_text_en")
            Me.columndiscount_abo_validityto_type = MyBase.Columns("discount_abo_validityto_type")
            Me.columndiscount_abo_validityto_value = MyBase.Columns("discount_abo_validityto_value")
            Me.columncomment = MyBase.Columns("comment")
            Me.columndiscount_nbr_month_before_reuse = MyBase.Columns("discount_nbr_month_before_reuse")
            Me.columndiscount_recurring_nbr_of_month = MyBase.Columns("discount_recurring_nbr_of_month")
            Me.columnbypass_discountuse = MyBase.Columns("bypass_discountuse")
            Me.columndiscount_validityto = MyBase.Columns("discount_validityto")
            Me.columnpayable = MyBase.Columns("payable")
            Me.columnabo_dvd_credit = MyBase.Columns("abo_dvd_credit")
            Me.columnnext_discount = MyBase.Columns("next_discount")
            Me.columncredit0_auto_reconduct = MyBase.Columns("credit0_auto_reconduct")
            Me.columnlanding_page = MyBase.Columns("landing_page")
            Me.columnlanding_page_php = MyBase.Columns("landing_page_php")
            Me.columnlisting_products_allowed = MyBase.Columns("listing_products_allowed")
            Me.columnabo_auto_stop_next_reconduction = MyBase.Columns("abo_auto_stop_next_reconduction")
            Me.columngoto_step = MyBase.Columns("goto_step")
            Me.columnbanner = MyBase.Columns("banner")
            Me.columnFooter = MyBase.Columns("Footer")
            Me.columnfree_upgrade_allowed = MyBase.Columns("free_upgrade_allowed")
            Me.columngroup_id = MyBase.Columns("group_id")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndiscount_code_id = New System.Data.DataColumn("discount_code_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code_id)
            Me.columndiscount_code = New System.Data.DataColumn("discount_code", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code)
            Me.columndiscount_type = New System.Data.DataColumn("discount_type", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_type)
            Me.columndiscount_value = New System.Data.DataColumn("discount_value", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_value)
            Me.columndiscount_limit = New System.Data.DataColumn("discount_limit", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_limit)
            Me.columndiscount_commitment = New System.Data.DataColumn("discount_commitment", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_commitment)
            Me.columndiscount_status = New System.Data.DataColumn("discount_status", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_status)
            Me.columndiscount_text_fr = New System.Data.DataColumn("discount_text_fr", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_text_fr)
            Me.columndiscount_text_nl = New System.Data.DataColumn("discount_text_nl", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_text_nl)
            Me.columndiscount_text_en = New System.Data.DataColumn("discount_text_en", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_text_en)
            Me.columndiscount_abo_validityto_type = New System.Data.DataColumn("discount_abo_validityto_type", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_abo_validityto_type)
            Me.columndiscount_abo_validityto_value = New System.Data.DataColumn("discount_abo_validityto_value", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_abo_validityto_value)
            Me.columncomment = New System.Data.DataColumn("comment", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columndiscount_nbr_month_before_reuse = New System.Data.DataColumn("discount_nbr_month_before_reuse", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_nbr_month_before_reuse)
            Me.columndiscount_recurring_nbr_of_month = New System.Data.DataColumn("discount_recurring_nbr_of_month", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_recurring_nbr_of_month)
            Me.columnbypass_discountuse = New System.Data.DataColumn("bypass_discountuse", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbypass_discountuse)
            Me.columndiscount_validityto = New System.Data.DataColumn("discount_validityto", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_validityto)
            Me.columnpayable = New System.Data.DataColumn("payable", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayable)
            Me.columnabo_dvd_credit = New System.Data.DataColumn("abo_dvd_credit", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_dvd_credit)
            Me.columnnext_discount = New System.Data.DataColumn("next_discount", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnext_discount)
            Me.columncredit0_auto_reconduct = New System.Data.DataColumn("credit0_auto_reconduct", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredit0_auto_reconduct)
            Me.columnlanding_page = New System.Data.DataColumn("landing_page", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanding_page)
            Me.columnlanding_page_php = New System.Data.DataColumn("landing_page_php", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanding_page_php)
            Me.columnlisting_products_allowed = New System.Data.DataColumn("listing_products_allowed", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlisting_products_allowed)
            Me.columnabo_auto_stop_next_reconduction = New System.Data.DataColumn("abo_auto_stop_next_reconduction", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_auto_stop_next_reconduction)
            Me.columngoto_step = New System.Data.DataColumn("goto_step", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngoto_step)
            Me.columnbanner = New System.Data.DataColumn("banner", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbanner)
            Me.columnFooter = New System.Data.DataColumn("Footer", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFooter)
            Me.columnfree_upgrade_allowed = New System.Data.DataColumn("free_upgrade_allowed", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfree_upgrade_allowed)
            Me.columngroup_id = New System.Data.DataColumn("group_id", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngroup_id)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columndiscount_code}, false))
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint2", New System.Data.DataColumn() {Me.columndiscount_code_id}, true))
            Me.columndiscount_code_id.AutoIncrement = true
            Me.columndiscount_code_id.AllowDBNull = false
            Me.columndiscount_code_id.Unique = true
            Me.columndiscount_code.AllowDBNull = false
            Me.columndiscount_code.Unique = true
            Me.columndiscount_code.MaxLength = 50
            Me.columndiscount_type.AllowDBNull = false
            Me.columndiscount_value.AllowDBNull = false
            Me.columndiscount_limit.AllowDBNull = false
            Me.columndiscount_commitment.AllowDBNull = false
            Me.columndiscount_status.AllowDBNull = false
            Me.columndiscount_text_fr.AllowDBNull = false
            Me.columndiscount_text_fr.MaxLength = 255
            Me.columndiscount_text_nl.AllowDBNull = false
            Me.columndiscount_text_nl.MaxLength = 255
            Me.columndiscount_text_en.AllowDBNull = false
            Me.columndiscount_text_en.MaxLength = 255
            Me.columndiscount_abo_validityto_type.AllowDBNull = false
            Me.columndiscount_abo_validityto_value.AllowDBNull = false
            Me.columncomment.AllowDBNull = false
            Me.columncomment.MaxLength = 65535
            Me.columndiscount_nbr_month_before_reuse.AllowDBNull = false
            Me.columndiscount_recurring_nbr_of_month.AllowDBNull = false
            Me.columnbypass_discountuse.AllowDBNull = false
            Me.columnpayable.AllowDBNull = false
            Me.columnabo_dvd_credit.AllowDBNull = false
            Me.columnnext_discount.AllowDBNull = false
            Me.columncredit0_auto_reconduct.AllowDBNull = false
            Me.columnlanding_page.AllowDBNull = false
            Me.columnlanding_page_php.MaxLength = 50
            Me.columnlisting_products_allowed.MaxLength = 50
            Me.columnabo_auto_stop_next_reconduction.AllowDBNull = false
            Me.columngoto_step.AllowDBNull = false
            Me.columnbanner.MaxLength = 30
            Me.columnFooter.AllowDBNull = false
            Me.columnFooter.MaxLength = 25
            Me.columnfree_upgrade_allowed.AllowDBNull = false
            Me.columngroup_id.AllowDBNull = false
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdiscount_code_comboRow() As discount_code_comboRow
            Return CType(Me.NewRow,discount_code_comboRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New discount_code_comboRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(discount_code_comboRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.discount_code_comboRowChangedEvent) Is Nothing) Then
                RaiseEvent discount_code_comboRowChanged(Me, New discount_code_comboRowChangeEvent(CType(e.Row,discount_code_comboRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.discount_code_comboRowChangingEvent) Is Nothing) Then
                RaiseEvent discount_code_comboRowChanging(Me, New discount_code_comboRowChangeEvent(CType(e.Row,discount_code_comboRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.discount_code_comboRowDeletedEvent) Is Nothing) Then
                RaiseEvent discount_code_comboRowDeleted(Me, New discount_code_comboRowChangeEvent(CType(e.Row,discount_code_comboRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.discount_code_comboRowDeletingEvent) Is Nothing) Then
                RaiseEvent discount_code_comboRowDeleting(Me, New discount_code_comboRowChangeEvent(CType(e.Row,discount_code_comboRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removediscount_code_comboRow(ByVal row As discount_code_comboRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsMarketting = New dsMarketting
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "discount_code_comboDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class activation_codeRow
        Inherits System.Data.DataRow
        
        Private tableactivation_code As activation_codeDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableactivation_code = CType(Me.Table,activation_codeDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_id() As Integer
            Get
                Return CType(Me(Me.tableactivation_code.activation_idColumn),Integer)
            End Get
            Set
                Me(Me.tableactivation_code.activation_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_code() As String
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.activation_codeColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_code' in table 'activation_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.activation_codeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_group() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.activation_groupColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_group' in table 'activation_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.activation_groupColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_group_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.activation_group_idColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_group_id' in table 'activation_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.activation_group_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_pack() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.activation_packColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_pack' in table 'activation_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.activation_packColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_code_creation_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.activation_code_creation_dateColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_code_creation_date' in table 'activation_code' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.activation_code_creation_dateColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_code_validto_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.activation_code_validto_dateColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_code_validto_date' in table 'activation_code' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.activation_code_validto_dateColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.activation_products_idColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_products_id' in table 'activation_code' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.activation_products_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_validity_month() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.activation_validity_monthColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_validity_month' in table 'activation_code' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.activation_validity_monthColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_validity_type() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.activation_validity_typeColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_validity_type' in table 'activation_code' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.activation_validity_typeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_validity_value() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.activation_validity_valueColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_validity_value' in table 'activation_code' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.activation_validity_valueColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_waranty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.activation_warantyColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_waranty' in table 'activation_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.activation_warantyColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.customers_idColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'customers_id' in table 'activation_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.customers_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.activation_dateColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_date' in table 'activation_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.activation_dateColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.commentColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'comment' in table 'activation_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.commentColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_dvd_credit() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.abo_dvd_creditColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'abo_dvd_credit' in table 'activation_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.abo_dvd_creditColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property next_discount() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.next_discountColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'next_discount' in table 'activation_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.next_discountColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credit0_auto_reconduct() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.credit0_auto_reconductColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'credit0_auto_reconduct' in table 'activation_code' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.credit0_auto_reconductColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_auto_stop_next_reconduction() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.abo_auto_stop_next_reconductionColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'abo_auto_stop_next_reconduction' in table 'activation_code'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.abo_auto_stop_next_reconductionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property banner() As String
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code.bannerColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'banner' in table 'activation_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code.bannerColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_codeNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.activation_codeColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_codeNull()
            Me(Me.tableactivation_code.activation_codeColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_groupNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.activation_groupColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_groupNull()
            Me(Me.tableactivation_code.activation_groupColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_group_idNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.activation_group_idColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_group_idNull()
            Me(Me.tableactivation_code.activation_group_idColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_packNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.activation_packColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_packNull()
            Me(Me.tableactivation_code.activation_packColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_code_creation_dateNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.activation_code_creation_dateColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_code_creation_dateNull()
            Me(Me.tableactivation_code.activation_code_creation_dateColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_code_validto_dateNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.activation_code_validto_dateColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_code_validto_dateNull()
            Me(Me.tableactivation_code.activation_code_validto_dateColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_products_idNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.activation_products_idColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_products_idNull()
            Me(Me.tableactivation_code.activation_products_idColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_validity_monthNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.activation_validity_monthColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_validity_monthNull()
            Me(Me.tableactivation_code.activation_validity_monthColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_validity_typeNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.activation_validity_typeColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_validity_typeNull()
            Me(Me.tableactivation_code.activation_validity_typeColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_validity_valueNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.activation_validity_valueColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_validity_valueNull()
            Me(Me.tableactivation_code.activation_validity_valueColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_warantyNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.activation_warantyColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_warantyNull()
            Me(Me.tableactivation_code.activation_warantyColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.customers_idColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableactivation_code.customers_idColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_dateNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.activation_dateColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_dateNull()
            Me(Me.tableactivation_code.activation_dateColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscommentNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.commentColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcommentNull()
            Me(Me.tableactivation_code.commentColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_dvd_creditNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.abo_dvd_creditColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_dvd_creditNull()
            Me(Me.tableactivation_code.abo_dvd_creditColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnext_discountNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.next_discountColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnext_discountNull()
            Me(Me.tableactivation_code.next_discountColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscredit0_auto_reconductNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.credit0_auto_reconductColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcredit0_auto_reconductNull()
            Me(Me.tableactivation_code.credit0_auto_reconductColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_auto_stop_next_reconductionNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.abo_auto_stop_next_reconductionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_auto_stop_next_reconductionNull()
            Me(Me.tableactivation_code.abo_auto_stop_next_reconductionColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbannerNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code.bannerColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbannerNull()
            Me(Me.tableactivation_code.bannerColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class activation_groupRow
        Inherits System.Data.DataRow
        
        Private tableactivation_group As activation_groupDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableactivation_group = CType(Me.Table,activation_groupDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_group_id() As Integer
            Get
                Return CType(Me(Me.tableactivation_group.activation_group_idColumn),Integer)
            End Get
            Set
                Me(Me.tableactivation_group.activation_group_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_group_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableactivation_group.activation_group_nameColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_group_name' in table 'activation_group' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_group.activation_group_nameColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property included_partner_file() As String
            Get
                Try 
                    Return CType(Me(Me.tableactivation_group.included_partner_fileColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'included_partner_file' in table 'activation_group' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_group.included_partner_fileColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_group_nameNull() As Boolean
            Return Me.IsNull(Me.tableactivation_group.activation_group_nameColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_group_nameNull()
            Me(Me.tableactivation_group.activation_group_nameColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isincluded_partner_fileNull() As Boolean
            Return Me.IsNull(Me.tableactivation_group.included_partner_fileColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setincluded_partner_fileNull()
            Me(Me.tableactivation_group.included_partner_fileColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class activation_validity_typeRow
        Inherits System.Data.DataRow
        
        Private tableactivation_validity_type As activation_validity_typeDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableactivation_validity_type = CType(Me.Table,activation_validity_typeDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property validity_type_id() As Integer
            Get
                Return CType(Me(Me.tableactivation_validity_type.validity_type_idColumn),Integer)
            End Get
            Set
                Me(Me.tableactivation_validity_type.validity_type_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property validity_type_explained() As String
            Get
                Try 
                    Return CType(Me(Me.tableactivation_validity_type.validity_type_explainedColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'validity_type_explained' in table 'activation_validity_type"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_validity_type.validity_type_explainedColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isvalidity_type_explainedNull() As Boolean
            Return Me.IsNull(Me.tableactivation_validity_type.validity_type_explainedColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setvalidity_type_explainedNull()
            Me(Me.tableactivation_validity_type.validity_type_explainedColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class activation_code_view1Row
        Inherits System.Data.DataRow
        
        Private tableactivation_code_view1 As activation_code_view1DataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableactivation_code_view1 = CType(Me.Table,activation_code_view1DataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_code_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableactivation_code_view1.activation_code_idColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'activation_code_id' in table 'activation_code_view1' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableactivation_code_view1.activation_code_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_code_idNull() As Boolean
            Return Me.IsNull(Me.tableactivation_code_view1.activation_code_idColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_code_idNull()
            Me(Me.tableactivation_code_view1.activation_code_idColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class discount_code_view1Row
        Inherits System.Data.DataRow
        
        Private tablediscount_code_view1 As discount_code_view1DataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablediscount_code_view1 = CType(Me.Table,discount_code_view1DataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablediscount_code_view1.discount_code_idColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'discount_code_id' in table 'discount_code_view1' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablediscount_code_view1.discount_code_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_code_idNull() As Boolean
            Return Me.IsNull(Me.tablediscount_code_view1.discount_code_idColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_code_idNull()
            Me(Me.tablediscount_code_view1.discount_code_idColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class discount_typeRow
        Inherits System.Data.DataRow
        
        Private tablediscount_type As discount_typeDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablediscount_type = CType(Me.Table,discount_typeDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_type() As Integer
            Get
                Return CType(Me(Me.tablediscount_type.discount_typeColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_type.discount_typeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_explained() As String
            Get
                Try 
                    Return CType(Me(Me.tablediscount_type.discount_explainedColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'discount_explained' in table 'discount_type' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablediscount_type.discount_explainedColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_explainedNull() As Boolean
            Return Me.IsNull(Me.tablediscount_type.discount_explainedColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_explainedNull()
            Me(Me.tablediscount_type.discount_explainedColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class discount_abo_validityto_typeRow
        Inherits System.Data.DataRow
        
        Private tablediscount_abo_validityto_type As discount_abo_validityto_typeDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablediscount_abo_validityto_type = CType(Me.Table,discount_abo_validityto_typeDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_abo_validityto_type_id() As Integer
            Get
                Return CType(Me(Me.tablediscount_abo_validityto_type.discount_abo_validityto_type_idColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_abo_validityto_type.discount_abo_validityto_type_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_abo_validityto_type_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablediscount_abo_validityto_type.discount_abo_validityto_type_nameColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'discount_abo_validityto_type_name' in table 'discount_abo_v"& _ 
                            "alidityto_type' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablediscount_abo_validityto_type.discount_abo_validityto_type_nameColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_abo_validityto_type_nameNull() As Boolean
            Return Me.IsNull(Me.tablediscount_abo_validityto_type.discount_abo_validityto_type_nameColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_abo_validityto_type_nameNull()
            Me(Me.tablediscount_abo_validityto_type.discount_abo_validityto_type_nameColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class productsRow
        Inherits System.Data.DataRow
        
        Private tableproducts As productsDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproducts = CType(Me.Table,productsDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_idColumn) = value
            End Set
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class discount_codeRow
        Inherits System.Data.DataRow
        
        Private tablediscount_code As discount_codeDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablediscount_code = CType(Me.Table,discount_codeDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code_id() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_code_idColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_code_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code() As String
            Get
                Return CType(Me(Me.tablediscount_code.discount_codeColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code.discount_codeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_type() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_typeColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_typeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_value() As Decimal
            Get
                Return CType(Me(Me.tablediscount_code.discount_valueColumn),Decimal)
            End Get
            Set
                Me(Me.tablediscount_code.discount_valueColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_limit() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_limitColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_limitColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_commitment() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_commitmentColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_commitmentColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_status() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_statusColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_statusColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_text_fr() As String
            Get
                Return CType(Me(Me.tablediscount_code.discount_text_frColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code.discount_text_frColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_text_nl() As String
            Get
                Return CType(Me(Me.tablediscount_code.discount_text_nlColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code.discount_text_nlColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_text_en() As String
            Get
                Return CType(Me(Me.tablediscount_code.discount_text_enColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code.discount_text_enColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_abo_validityto_type() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_abo_validityto_typeColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_abo_validityto_typeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_abo_validityto_value() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_abo_validityto_valueColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_abo_validityto_valueColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Return CType(Me(Me.tablediscount_code.commentColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code.commentColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_nbr_month_before_reuse() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_nbr_month_before_reuseColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_nbr_month_before_reuseColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_recurring_nbr_of_month() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_recurring_nbr_of_monthColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_recurring_nbr_of_monthColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bypass_discountuse() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.bypass_discountuseColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.bypass_discountuseColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tablediscount_code.discount_validitytoColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'discount_validityto' in table 'discount_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablediscount_code.discount_validitytoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payable() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.payableColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.payableColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_dvd_credit() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.abo_dvd_creditColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.abo_dvd_creditColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property next_discount() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.next_discountColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.next_discountColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credit0_auto_reconduct() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.credit0_auto_reconductColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.credit0_auto_reconductColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property landing_page() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.landing_pageColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.landing_pageColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property landing_page_php() As String
            Get
                Try 
                    Return CType(Me(Me.tablediscount_code.landing_page_phpColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'landing_page_php' in table 'discount_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablediscount_code.landing_page_phpColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property listing_products_allowed() As String
            Get
                Try 
                    Return CType(Me(Me.tablediscount_code.listing_products_allowedColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'listing_products_allowed' in table 'discount_code' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablediscount_code.listing_products_allowedColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_auto_stop_next_reconduction() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.abo_auto_stop_next_reconductionColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.abo_auto_stop_next_reconductionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property goto_step() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.goto_stepColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.goto_stepColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property banner() As String
            Get
                Try 
                    Return CType(Me(Me.tablediscount_code.bannerColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'banner' in table 'discount_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablediscount_code.bannerColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Footer() As String
            Get
                Return CType(Me(Me.tablediscount_code.FooterColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code.FooterColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property free_upgrade_allowed() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.free_upgrade_allowedColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.free_upgrade_allowedColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property group_id() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.group_idColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.group_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_validitytoNull() As Boolean
            Return Me.IsNull(Me.tablediscount_code.discount_validitytoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_validitytoNull()
            Me(Me.tablediscount_code.discount_validitytoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islanding_page_phpNull() As Boolean
            Return Me.IsNull(Me.tablediscount_code.landing_page_phpColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlanding_page_phpNull()
            Me(Me.tablediscount_code.landing_page_phpColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islisting_products_allowedNull() As Boolean
            Return Me.IsNull(Me.tablediscount_code.listing_products_allowedColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlisting_products_allowedNull()
            Me(Me.tablediscount_code.listing_products_allowedColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbannerNull() As Boolean
            Return Me.IsNull(Me.tablediscount_code.bannerColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbannerNull()
            Me(Me.tablediscount_code.bannerColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class discount_code_comboRow
        Inherits System.Data.DataRow
        
        Private tablediscount_code_combo As discount_code_comboDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablediscount_code_combo = CType(Me.Table,discount_code_comboDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code_id() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_code_idColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_code_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code() As String
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_codeColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_codeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_type() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_typeColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_typeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_value() As Decimal
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_valueColumn),Decimal)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_valueColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_limit() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_limitColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_limitColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_commitment() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_commitmentColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_commitmentColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_status() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_statusColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_statusColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_text_fr() As String
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_text_frColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_text_frColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_text_nl() As String
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_text_nlColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_text_nlColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_text_en() As String
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_text_enColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_text_enColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_abo_validityto_type() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_abo_validityto_typeColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_abo_validityto_typeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_abo_validityto_value() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_abo_validityto_valueColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_abo_validityto_valueColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Return CType(Me(Me.tablediscount_code_combo.commentColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code_combo.commentColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_nbr_month_before_reuse() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_nbr_month_before_reuseColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_nbr_month_before_reuseColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_recurring_nbr_of_month() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.discount_recurring_nbr_of_monthColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_recurring_nbr_of_monthColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bypass_discountuse() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.bypass_discountuseColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.bypass_discountuseColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tablediscount_code_combo.discount_validitytoColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'discount_validityto' in table 'discount_code_combo' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablediscount_code_combo.discount_validitytoColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payable() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.payableColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.payableColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_dvd_credit() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.abo_dvd_creditColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.abo_dvd_creditColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property next_discount() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.next_discountColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.next_discountColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credit0_auto_reconduct() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.credit0_auto_reconductColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.credit0_auto_reconductColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property landing_page() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.landing_pageColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.landing_pageColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property landing_page_php() As String
            Get
                Try 
                    Return CType(Me(Me.tablediscount_code_combo.landing_page_phpColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'landing_page_php' in table 'discount_code_combo' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablediscount_code_combo.landing_page_phpColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property listing_products_allowed() As String
            Get
                Try 
                    Return CType(Me(Me.tablediscount_code_combo.listing_products_allowedColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'listing_products_allowed' in table 'discount_code_combo' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablediscount_code_combo.listing_products_allowedColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_auto_stop_next_reconduction() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.abo_auto_stop_next_reconductionColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.abo_auto_stop_next_reconductionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property goto_step() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.goto_stepColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.goto_stepColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property banner() As String
            Get
                Try 
                    Return CType(Me(Me.tablediscount_code_combo.bannerColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'banner' in table 'discount_code_combo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablediscount_code_combo.bannerColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Footer() As String
            Get
                Return CType(Me(Me.tablediscount_code_combo.FooterColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code_combo.FooterColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property free_upgrade_allowed() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.free_upgrade_allowedColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.free_upgrade_allowedColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property group_id() As Integer
            Get
                Return CType(Me(Me.tablediscount_code_combo.group_idColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code_combo.group_idColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_validitytoNull() As Boolean
            Return Me.IsNull(Me.tablediscount_code_combo.discount_validitytoColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_validitytoNull()
            Me(Me.tablediscount_code_combo.discount_validitytoColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islanding_page_phpNull() As Boolean
            Return Me.IsNull(Me.tablediscount_code_combo.landing_page_phpColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlanding_page_phpNull()
            Me(Me.tablediscount_code_combo.landing_page_phpColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islisting_products_allowedNull() As Boolean
            Return Me.IsNull(Me.tablediscount_code_combo.listing_products_allowedColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlisting_products_allowedNull()
            Me(Me.tablediscount_code_combo.listing_products_allowedColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbannerNull() As Boolean
            Return Me.IsNull(Me.tablediscount_code_combo.bannerColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbannerNull()
            Me(Me.tablediscount_code_combo.bannerColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class activation_codeRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As activation_codeRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As activation_codeRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As activation_codeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class activation_groupRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As activation_groupRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As activation_groupRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As activation_groupRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class activation_validity_typeRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As activation_validity_typeRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As activation_validity_typeRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As activation_validity_typeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class activation_code_view1RowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As activation_code_view1Row
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As activation_code_view1Row, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As activation_code_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class discount_code_view1RowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As discount_code_view1Row
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As discount_code_view1Row, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As discount_code_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class discount_typeRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As discount_typeRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As discount_typeRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As discount_typeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class discount_abo_validityto_typeRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As discount_abo_validityto_typeRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As discount_abo_validityto_typeRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As discount_abo_validityto_typeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class productsRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As productsRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As productsRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As productsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class discount_codeRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As discount_codeRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As discount_codeRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As discount_codeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class discount_code_comboRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As discount_code_comboRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As discount_code_comboRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As discount_code_comboRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
