/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v6.2, Version=6.2.4.0, Culture=neutral, PublicKeyToken=79868b8147b5eae4</AssemblyFullName>
///   <AssemblyLocation>C:\WINDOWS\assembly\GAC_MSIL\DevExpress.XtraReports.v6.2\6.2.4.0__79868b8147b5eae4\DevExpress.XtraReports.v6.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>en-US</Localization>
///   <References>
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\DevExpress.XtraReports.v6.2\6.2.4.0__79868b8147b5eae4\DevExpress.XtraReports.v6.2.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\DevExpress.XtraPrinting.v6.2\6.2.4.0__79868b8147b5eae4\DevExpress.XtraPrinting.v6.2.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\DevExpress.Utils.v6.2\6.2.4.0__79868b8147b5eae4\DevExpress.Utils.v6.2.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\DevExpress.XtraEditors.v6.2\6.2.4.0__79868b8147b5eae4\DevExpress.XtraEditors.v6.2.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\DevExpress.Data.v6.2\6.2.4.0__79868b8147b5eae4\DevExpress.Data.v6.2.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\DevExpress.XtraBars.v6.2\6.2.4.0__79868b8147b5eae4\DevExpress.XtraBars.v6.2.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\DevExpress.XtraNavBar.v6.2\6.2.4.0__79868b8147b5eae4\DevExpress.XtraNavBar.v6.2.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\DevExpress.XtraCharts.v6.2\6.2.4.0__79868b8147b5eae4\DevExpress.XtraCharts.v6.2.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\DevExpress.XtraRichTextEdit.v6.2\6.2.4.0__79868b8147b5eae4\DevExpress.XtraRichTextEdit.v6.2.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class xtraReport1 : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.PageHeaderBand PageHeader;
        private DevExpress.XtraReports.UI.XRLabel xrLabel33;
        private System.Data.DataSet dataSet1;
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel xrLabel32;
        private DevExpress.XtraReports.UI.XRLabel xrLabel31;
        private DevExpress.XtraReports.UI.XRLabel xrLabel30;
        private DevExpress.XtraReports.UI.XRLabel xrLabel29;
        private DevExpress.XtraReports.UI.XRLabel xrLabel28;
        private DevExpress.XtraReports.UI.XRLabel xrLabel27;
        private DevExpress.XtraReports.UI.XRLabel xrLabel26;
        private DevExpress.XtraReports.UI.XRLabel xrLabel25;
        private DevExpress.XtraReports.UI.XRLabel xrLabel24;
        private DevExpress.XtraReports.UI.XRLabel xrLabel23;
        private DevExpress.XtraReports.UI.XRLabel xrLabel22;
        private DevExpress.XtraReports.UI.XRLabel xrLabel21;
        private DevExpress.XtraReports.UI.XRLabel xrLabel20;
        private DevExpress.XtraReports.UI.XRLabel xrLabel19;
        private DevExpress.XtraReports.UI.XRCheckBox xrCheckBox2;
        private DevExpress.XtraReports.UI.XRCheckBox xrCheckBox1;
        private DevExpress.XtraReports.UI.XRLabel xrLabel18;
        private DevExpress.XtraReports.UI.XRLabel xrLabel17;
        private DevExpress.XtraReports.UI.XRLabel xrLabel16;
        private DevExpress.XtraReports.UI.XRLabel xrLabel15;
        private DevExpress.XtraReports.UI.XRLabel xrLabel14;
        private DevExpress.XtraReports.UI.XRLabel xrLabel13;
        private DevExpress.XtraReports.UI.XRLabel xrLabel12;
        private DevExpress.XtraReports.UI.XRLabel xrLabel11;
        private DevExpress.XtraReports.UI.XRLabel xrLabel10;
        private DevExpress.XtraReports.UI.XRLabel xrLabel9;
        private DevExpress.XtraReports.UI.XRLabel xrLabel8;
        private DevExpress.XtraReports.UI.XRLabel xrLabel7;
        private DevExpress.XtraReports.UI.XRLabel xrLabel6;
        private DevExpress.XtraReports.UI.XRLabel xrLabel5;
        private DevExpress.XtraReports.UI.XRLabel xrLabel4;
        private DevExpress.XtraReports.UI.XRLabel xrLabel3;
        private DevExpress.XtraReports.UI.XRLabel xrLabel2;
        private DevExpress.XtraReports.UI.XRLabel xrLabel1;
        private System.Resources.ResourceManager _resources;
        public xtraReport1() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = @"zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            this.PageHeader = new DevExpress.XtraReports.UI.PageHeaderBand();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.xrLabel33 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel32 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel31 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel30 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel29 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel28 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel27 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel26 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel25 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel24 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel23 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel22 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel21 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel20 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel19 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrCheckBox2 = new DevExpress.XtraReports.UI.XRCheckBox();
            this.xrCheckBox1 = new DevExpress.XtraReports.UI.XRCheckBox();
            this.xrLabel18 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel17 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel16 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel15 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel14 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel13 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel12 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel11 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel10 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel9 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel8 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel7 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel6 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel5 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel4 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel3 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel2 = new DevExpress.XtraReports.UI.XRLabel();
            this.xrLabel1 = new DevExpress.XtraReports.UI.XRLabel();
            this.dataSet1 = new XtraReportSerialization.dataSet1();
            ((System.ComponentModel.ISupportInitialize)(this.dataSet1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // PageHeader
            // 
            this.PageHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.xrLabel33});
            this.PageHeader.Height = 81;
            this.PageHeader.Name = "PageHeader";
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.xrLabel32,
                        this.xrLabel31,
                        this.xrLabel30,
                        this.xrLabel29,
                        this.xrLabel28,
                        this.xrLabel27,
                        this.xrLabel26,
                        this.xrLabel25,
                        this.xrLabel24,
                        this.xrLabel23,
                        this.xrLabel22,
                        this.xrLabel21,
                        this.xrLabel20,
                        this.xrLabel19,
                        this.xrCheckBox2,
                        this.xrCheckBox1,
                        this.xrLabel18,
                        this.xrLabel17,
                        this.xrLabel16,
                        this.xrLabel15,
                        this.xrLabel14,
                        this.xrLabel13,
                        this.xrLabel12,
                        this.xrLabel11,
                        this.xrLabel10,
                        this.xrLabel9,
                        this.xrLabel8,
                        this.xrLabel7,
                        this.xrLabel6,
                        this.xrLabel5,
                        this.xrLabel4,
                        this.xrLabel3,
                        this.xrLabel2,
                        this.xrLabel1});
            this.Detail.Height = 364;
            this.Detail.Name = "Detail";
            // 
            // xrLabel33
            // 
            this.xrLabel33.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "GeneralAddress.Name", "")});
            this.xrLabel33.Font = new System.Drawing.Font("Times New Roman", 14F, ((System.Drawing.FontStyle)((System.Drawing.FontStyle.Bold | System.Drawing.FontStyle.Underline))));
            this.xrLabel33.Location = new System.Drawing.Point(217, 17);
            this.xrLabel33.Name = "xrLabel33";
            this.xrLabel33.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel33.ParentStyleUsing.UseFont = false;
            this.xrLabel33.Size = new System.Drawing.Size(200, 34);
            this.xrLabel33.Text = "xrLabel33";
            this.xrLabel33.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            // 
            // xrLabel32
            // 
            this.xrLabel32.Location = new System.Drawing.Point(342, 225);
            this.xrLabel32.Name = "xrLabel32";
            this.xrLabel32.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel32.Size = new System.Drawing.Size(100, 25);
            this.xrLabel32.Text = "TAX ID";
            // 
            // xrLabel31
            // 
            this.xrLabel31.Location = new System.Drawing.Point(342, 192);
            this.xrLabel31.Name = "xrLabel31";
            this.xrLabel31.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel31.Size = new System.Drawing.Size(100, 25);
            this.xrLabel31.Text = "SWIFT Code";
            // 
            // xrLabel30
            // 
            this.xrLabel30.Location = new System.Drawing.Point(342, 167);
            this.xrLabel30.Name = "xrLabel30";
            this.xrLabel30.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel30.Size = new System.Drawing.Size(100, 25);
            this.xrLabel30.Text = "IBAN Code";
            // 
            // xrLabel29
            // 
            this.xrLabel29.Location = new System.Drawing.Point(342, 142);
            this.xrLabel29.Name = "xrLabel29";
            this.xrLabel29.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel29.Size = new System.Drawing.Size(100, 25);
            this.xrLabel29.Text = "Bank Acct";
            // 
            // xrLabel28
            // 
            this.xrLabel28.Location = new System.Drawing.Point(17, 292);
            this.xrLabel28.Name = "xrLabel28";
            this.xrLabel28.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel28.Size = new System.Drawing.Size(100, 25);
            this.xrLabel28.Text = "Pay Method";
            // 
            // xrLabel27
            // 
            this.xrLabel27.Location = new System.Drawing.Point(17, 217);
            this.xrLabel27.Name = "xrLabel27";
            this.xrLabel27.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel27.Size = new System.Drawing.Size(100, 25);
            this.xrLabel27.Text = "Credit Level";
            // 
            // xrLabel26
            // 
            this.xrLabel26.Location = new System.Drawing.Point(17, 192);
            this.xrLabel26.Name = "xrLabel26";
            this.xrLabel26.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel26.Size = new System.Drawing.Size(100, 25);
            this.xrLabel26.Text = "Credit Type";
            // 
            // xrLabel25
            // 
            this.xrLabel25.Location = new System.Drawing.Point(17, 167);
            this.xrLabel25.Name = "xrLabel25";
            this.xrLabel25.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel25.Size = new System.Drawing.Size(100, 25);
            this.xrLabel25.Text = "Credit Term";
            // 
            // xrLabel24
            // 
            this.xrLabel24.Location = new System.Drawing.Point(17, 142);
            this.xrLabel24.Name = "xrLabel24";
            this.xrLabel24.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel24.Size = new System.Drawing.Size(100, 25);
            this.xrLabel24.Text = "Credit Limit";
            // 
            // xrLabel23
            // 
            this.xrLabel23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "CRMCustomerView1.TaxCode1", "")});
            this.xrLabel23.Location = new System.Drawing.Point(442, 225);
            this.xrLabel23.Name = "xrLabel23";
            this.xrLabel23.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel23.Size = new System.Drawing.Size(100, 25);
            this.xrLabel23.Text = "xrLabel23";
            // 
            // xrLabel22
            // 
            this.xrLabel22.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "CRMCustomerView1.PayMethod", "")});
            this.xrLabel22.Location = new System.Drawing.Point(117, 292);
            this.xrLabel22.Name = "xrLabel22";
            this.xrLabel22.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel22.Size = new System.Drawing.Size(166, 25);
            this.xrLabel22.Text = "xrLabel22";
            // 
            // xrLabel21
            // 
            this.xrLabel21.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "CRMCustomerView1.SwiftCode", "")});
            this.xrLabel21.Location = new System.Drawing.Point(442, 192);
            this.xrLabel21.Name = "xrLabel21";
            this.xrLabel21.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel21.Size = new System.Drawing.Size(100, 25);
            this.xrLabel21.Text = "xrLabel21";
            // 
            // xrLabel20
            // 
            this.xrLabel20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "CRMCustomerView1.IBANCode", "")});
            this.xrLabel20.Location = new System.Drawing.Point(442, 167);
            this.xrLabel20.Name = "xrLabel20";
            this.xrLabel20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel20.Size = new System.Drawing.Size(100, 25);
            this.xrLabel20.Text = "xrLabel20";
            // 
            // xrLabel19
            // 
            this.xrLabel19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "CRMCustomerView1.BankAcct", "")});
            this.xrLabel19.Location = new System.Drawing.Point(442, 142);
            this.xrLabel19.Name = "xrLabel19";
            this.xrLabel19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel19.Size = new System.Drawing.Size(100, 25);
            this.xrLabel19.Text = "xrLabel19";
            // 
            // xrCheckBox2
            // 
            this.xrCheckBox2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("CheckState", this.dataSet1, "CRMCustomerView1.CreditBlockShip", "")});
            this.xrCheckBox2.Location = new System.Drawing.Point(117, 267);
            this.xrCheckBox2.Name = "xrCheckBox2";
            this.xrCheckBox2.Size = new System.Drawing.Size(166, 25);
            this.xrCheckBox2.Text = "Credit Block Shipping";
            // 
            // xrCheckBox1
            // 
            this.xrCheckBox1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("CheckState", this.dataSet1, "CRMCustomerView1.CreditBlockSO", "")});
            this.xrCheckBox1.Location = new System.Drawing.Point(117, 242);
            this.xrCheckBox1.Name = "xrCheckBox1";
            this.xrCheckBox1.Size = new System.Drawing.Size(166, 25);
            this.xrCheckBox1.Text = "Credit Blcok SO";
            // 
            // xrLabel18
            // 
            this.xrLabel18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "CRMCustomerView1.CreditLevel", "")});
            this.xrLabel18.Location = new System.Drawing.Point(117, 217);
            this.xrLabel18.Name = "xrLabel18";
            this.xrLabel18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel18.Size = new System.Drawing.Size(166, 25);
            this.xrLabel18.Text = "xrLabel18";
            // 
            // xrLabel17
            // 
            this.xrLabel17.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "CRMCustomerView1.CreditType", "")});
            this.xrLabel17.Location = new System.Drawing.Point(117, 192);
            this.xrLabel17.Name = "xrLabel17";
            this.xrLabel17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel17.Size = new System.Drawing.Size(166, 25);
            this.xrLabel17.Text = "xrLabel17";
            // 
            // xrLabel16
            // 
            this.xrLabel16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "CRMCustomerView1.CreditTerm", "")});
            this.xrLabel16.Location = new System.Drawing.Point(117, 167);
            this.xrLabel16.Name = "xrLabel16";
            this.xrLabel16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel16.Size = new System.Drawing.Size(166, 25);
            this.xrLabel16.Text = "xrLabel16";
            // 
            // xrLabel15
            // 
            this.xrLabel15.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "CRMCustomerView1.CreditLimit", "")});
            this.xrLabel15.Location = new System.Drawing.Point(117, 142);
            this.xrLabel15.Name = "xrLabel15";
            this.xrLabel15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel15.Size = new System.Drawing.Size(166, 25);
            this.xrLabel15.Text = "xrLabel15";
            // 
            // xrLabel14
            // 
            this.xrLabel14.Location = new System.Drawing.Point(342, 83);
            this.xrLabel14.Name = "xrLabel14";
            this.xrLabel14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel14.Size = new System.Drawing.Size(100, 25);
            this.xrLabel14.Text = "Language";
            // 
            // xrLabel13
            // 
            this.xrLabel13.Location = new System.Drawing.Point(342, 58);
            this.xrLabel13.Name = "xrLabel13";
            this.xrLabel13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel13.Size = new System.Drawing.Size(100, 25);
            this.xrLabel13.Text = "Web Site";
            // 
            // xrLabel12
            // 
            this.xrLabel12.Location = new System.Drawing.Point(342, 8);
            this.xrLabel12.Name = "xrLabel12";
            this.xrLabel12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel12.Size = new System.Drawing.Size(100, 25);
            this.xrLabel12.Text = "Phone";
            // 
            // xrLabel11
            // 
            this.xrLabel11.Location = new System.Drawing.Point(342, 33);
            this.xrLabel11.Name = "xrLabel11";
            this.xrLabel11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel11.Size = new System.Drawing.Size(100, 25);
            this.xrLabel11.Text = "E-Mail";
            // 
            // xrLabel10
            // 
            this.xrLabel10.Location = new System.Drawing.Point(8, 8);
            this.xrLabel10.Name = "xrLabel10";
            this.xrLabel10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel10.Size = new System.Drawing.Size(100, 25);
            this.xrLabel10.Text = "Name / Address";
            // 
            // xrLabel9
            // 
            this.xrLabel9.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "GeneralAddress.WebSite", "")});
            this.xrLabel9.Location = new System.Drawing.Point(442, 58);
            this.xrLabel9.Name = "xrLabel9";
            this.xrLabel9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel9.Size = new System.Drawing.Size(200, 25);
            this.xrLabel9.Text = "xrLabel9";
            // 
            // xrLabel8
            // 
            this.xrLabel8.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "GeneralAddress.Lang", "")});
            this.xrLabel8.Location = new System.Drawing.Point(442, 83);
            this.xrLabel8.Name = "xrLabel8";
            this.xrLabel8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel8.Size = new System.Drawing.Size(200, 25);
            this.xrLabel8.Text = "xrLabel8";
            // 
            // xrLabel7
            // 
            this.xrLabel7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "GeneralAddress.EMail1", "")});
            this.xrLabel7.Location = new System.Drawing.Point(442, 33);
            this.xrLabel7.Name = "xrLabel7";
            this.xrLabel7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel7.Size = new System.Drawing.Size(200, 25);
            this.xrLabel7.Text = "xrLabel7";
            // 
            // xrLabel6
            // 
            this.xrLabel6.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "GeneralAddress.Phone1", "")});
            this.xrLabel6.Location = new System.Drawing.Point(442, 8);
            this.xrLabel6.Name = "xrLabel6";
            this.xrLabel6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel6.Size = new System.Drawing.Size(200, 25);
            this.xrLabel6.Text = "xrLabel6";
            // 
            // xrLabel5
            // 
            this.xrLabel5.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "GeneralAddress.Country", "")});
            this.xrLabel5.Location = new System.Drawing.Point(225, 83);
            this.xrLabel5.Name = "xrLabel5";
            this.xrLabel5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel5.Size = new System.Drawing.Size(100, 25);
            this.xrLabel5.Text = "xrLabel5";
            // 
            // xrLabel4
            // 
            this.xrLabel4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "GeneralAddress.ZIP", "")});
            this.xrLabel4.Location = new System.Drawing.Point(117, 83);
            this.xrLabel4.Name = "xrLabel4";
            this.xrLabel4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel4.Size = new System.Drawing.Size(100, 25);
            this.xrLabel4.Text = "xrLabel4";
            // 
            // xrLabel3
            // 
            this.xrLabel3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "GeneralAddress.Address2", "")});
            this.xrLabel3.Location = new System.Drawing.Point(117, 58);
            this.xrLabel3.Name = "xrLabel3";
            this.xrLabel3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel3.Size = new System.Drawing.Size(209, 25);
            this.xrLabel3.Text = "xrLabel3";
            // 
            // xrLabel2
            // 
            this.xrLabel2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "GeneralAddress.Address1", "")});
            this.xrLabel2.Location = new System.Drawing.Point(117, 33);
            this.xrLabel2.Name = "xrLabel2";
            this.xrLabel2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel2.Size = new System.Drawing.Size(209, 25);
            this.xrLabel2.Text = "xrLabel2";
            // 
            // xrLabel1
            // 
            this.xrLabel1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", this.dataSet1, "GeneralAddress.Name", "")});
            this.xrLabel1.Location = new System.Drawing.Point(117, 8);
            this.xrLabel1.Name = "xrLabel1";
            this.xrLabel1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.xrLabel1.Size = new System.Drawing.Size(209, 25);
            this.xrLabel1.Text = "xrLabel1";
            // 
            // dataSet1
            // 
            this.dataSet1.DataSetName = "dataSet1";
            // 
            // xtraReport1
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.PageHeader,
                        this.Detail});
            this.DataSource = this.dataSet1;
            this.Name = "xtraReport1";
            this.PageHeight = 1100;
            this.PageWidth = 850;
            ((System.ComponentModel.ISupportInitialize)(this.dataSet1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    using System;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("dataSet1")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dataSet1 : System.Data.DataSet {
        private GeneralAddressDataTable tableGeneralAddress;
        private CRMCustomerView1DataTable tableCRMCustomerView1;
        private CRMContactView1DataTable tableCRMContactView1;
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dataSet1() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dataSet1(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GeneralAddress"] != null)) {
                    base.Tables.Add(new GeneralAddressDataTable(ds.Tables["GeneralAddress"]));
                }
                if ((ds.Tables["CRMCustomerView1"] != null)) {
                    base.Tables.Add(new CRMCustomerView1DataTable(ds.Tables["CRMCustomerView1"]));
                }
                if ((ds.Tables["CRMContactView1"] != null)) {
                    base.Tables.Add(new CRMContactView1DataTable(ds.Tables["CRMContactView1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GeneralAddressDataTable GeneralAddress {
            get {
                return this.tableGeneralAddress;
            }
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CRMCustomerView1DataTable CRMCustomerView1 {
            get {
                return this.tableCRMCustomerView1;
            }
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CRMContactView1DataTable CRMContactView1 {
            get {
                return this.tableCRMContactView1;
            }
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            dataSet1 cln = ((dataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GeneralAddress"] != null)) {
                    base.Tables.Add(new GeneralAddressDataTable(ds.Tables["GeneralAddress"]));
                }
                if ((ds.Tables["CRMCustomerView1"] != null)) {
                    base.Tables.Add(new CRMCustomerView1DataTable(ds.Tables["CRMCustomerView1"]));
                }
                if ((ds.Tables["CRMContactView1"] != null)) {
                    base.Tables.Add(new CRMContactView1DataTable(ds.Tables["CRMContactView1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGeneralAddress = ((GeneralAddressDataTable)(base.Tables["GeneralAddress"]));
            if ((initTable == true)) {
                if ((this.tableGeneralAddress != null)) {
                    this.tableGeneralAddress.InitVars();
                }
            }
            this.tableCRMCustomerView1 = ((CRMCustomerView1DataTable)(base.Tables["CRMCustomerView1"]));
            if ((initTable == true)) {
                if ((this.tableCRMCustomerView1 != null)) {
                    this.tableCRMCustomerView1.InitVars();
                }
            }
            this.tableCRMContactView1 = ((CRMContactView1DataTable)(base.Tables["CRMContactView1"]));
            if ((initTable == true)) {
                if ((this.tableCRMContactView1 != null)) {
                    this.tableCRMContactView1.InitVars();
                }
            }
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dataSet1";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGeneralAddress = new GeneralAddressDataTable();
            base.Tables.Add(this.tableGeneralAddress);
            this.tableCRMCustomerView1 = new CRMCustomerView1DataTable();
            base.Tables.Add(this.tableCRMCustomerView1);
            this.tableCRMContactView1 = new CRMContactView1DataTable();
            base.Tables.Add(this.tableCRMContactView1);
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGeneralAddress() {
            return false;
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCRMCustomerView1() {
            return false;
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCRMContactView1() {
            return false;
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            dataSet1 ds = new dataSet1();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        public delegate void GeneralAddressRowChangeEventHandler(object sender, GeneralAddressRowChangeEvent e);
        public delegate void CRMCustomerView1RowChangeEventHandler(object sender, CRMCustomerView1RowChangeEvent e);
        public delegate void CRMContactView1RowChangeEventHandler(object sender, CRMContactView1RowChangeEvent e);
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GeneralAddressDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            private System.Data.DataColumn columnAddrID;
            private System.Data.DataColumn columnName;
            private System.Data.DataColumn columnFirstName;
            private System.Data.DataColumn columnDescription;
            private System.Data.DataColumn columnAddress1;
            private System.Data.DataColumn columnAddress2;
            private System.Data.DataColumn columnZIP;
            private System.Data.DataColumn columnCity;
            private System.Data.DataColumn columnCountry;
            private System.Data.DataColumn columnPersonYN;
            private System.Data.DataColumn columnEntityYN;
            private System.Data.DataColumn columnBankYN;
            private System.Data.DataColumn columnEmployeeYN;
            private System.Data.DataColumn columnCustomerYN;
            private System.Data.DataColumn columnSupplierYN;
            private System.Data.DataColumn columnLang;
            private System.Data.DataColumn columnPhone1;
            private System.Data.DataColumn columnPhone2;
            private System.Data.DataColumn columnPhone3;
            private System.Data.DataColumn columnFax1;
            private System.Data.DataColumn columnFax2;
            private System.Data.DataColumn columnFax3;
            private System.Data.DataColumn columnEMail1;
            private System.Data.DataColumn columnEMail2;
            private System.Data.DataColumn columnEMail3;
            private System.Data.DataColumn columnWebSite;
            private System.Data.DataColumn columnEntityID;
            private System.Data.DataColumn columnBankID;
            private System.Data.DataColumn columnEmployeeID;
            private System.Data.DataColumn columnCustomerID;
            private System.Data.DataColumn columnSupplierID;
            private System.Data.DataColumn columnTitle;
            private System.Data.DataColumn columnGender;
            private System.Data.DataColumn columnJobTitle;
            private System.Data.DataColumn columnManagerID;
            private System.Data.DataColumn columnAssistantID;
            private System.Data.DataColumn columnCompanyID;
            private System.Data.DataColumn columnCountryCode;
            private System.Data.DataColumn columnRegion;
            private System.Data.DataColumn columnLocYN;
            private System.Data.DataColumn columnLocID;
            private System.Data.DataColumn columnTaxNbr1;
            private System.Data.DataColumn columnTaxNbr2;
            private System.Data.DataColumn columnTaxNbr3;
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralAddressDataTable() {
                this.TableName = "GeneralAddress";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GeneralAddressDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GeneralAddressDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddrIDColumn {
                get {
                    return this.columnAddrID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ZIPColumn {
                get {
                    return this.columnZIP;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PersonYNColumn {
                get {
                    return this.columnPersonYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EntityYNColumn {
                get {
                    return this.columnEntityYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BankYNColumn {
                get {
                    return this.columnBankYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EmployeeYNColumn {
                get {
                    return this.columnEmployeeYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CustomerYNColumn {
                get {
                    return this.columnCustomerYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SupplierYNColumn {
                get {
                    return this.columnSupplierYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LangColumn {
                get {
                    return this.columnLang;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Phone2Column {
                get {
                    return this.columnPhone2;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Phone3Column {
                get {
                    return this.columnPhone3;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Fax1Column {
                get {
                    return this.columnFax1;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Fax2Column {
                get {
                    return this.columnFax2;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Fax3Column {
                get {
                    return this.columnFax3;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMail1Column {
                get {
                    return this.columnEMail1;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMail2Column {
                get {
                    return this.columnEMail2;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMail3Column {
                get {
                    return this.columnEMail3;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WebSiteColumn {
                get {
                    return this.columnWebSite;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EntityIDColumn {
                get {
                    return this.columnEntityID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SupplierIDColumn {
                get {
                    return this.columnSupplierID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JobTitleColumn {
                get {
                    return this.columnJobTitle;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ManagerIDColumn {
                get {
                    return this.columnManagerID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AssistantIDColumn {
                get {
                    return this.columnAssistantID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CountryCodeColumn {
                get {
                    return this.columnCountryCode;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocYNColumn {
                get {
                    return this.columnLocYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocIDColumn {
                get {
                    return this.columnLocID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TaxNbr1Column {
                get {
                    return this.columnTaxNbr1;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TaxNbr2Column {
                get {
                    return this.columnTaxNbr2;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TaxNbr3Column {
                get {
                    return this.columnTaxNbr3;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralAddressRow this[int index] {
                get {
                    return ((GeneralAddressRow)(this.Rows[index]));
                }
            }
            public event GeneralAddressRowChangeEventHandler GeneralAddressRowChanging;
            public event GeneralAddressRowChangeEventHandler GeneralAddressRowChanged;
            public event GeneralAddressRowChangeEventHandler GeneralAddressRowDeleting;
            public event GeneralAddressRowChangeEventHandler GeneralAddressRowDeleted;
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGeneralAddressRow(GeneralAddressRow row) {
                this.Rows.Add(row);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralAddressRow AddGeneralAddressRow(
                        int AddrID, 
                        string Name, 
                        string FirstName, 
                        string Description, 
                        string Address1, 
                        string Address2, 
                        string ZIP, 
                        string City, 
                        string Country, 
                        int PersonYN, 
                        bool EntityYN, 
                        bool BankYN, 
                        bool EmployeeYN, 
                        bool CustomerYN, 
                        bool SupplierYN, 
                        string Lang, 
                        string Phone1, 
                        string Phone2, 
                        string Phone3, 
                        string Fax1, 
                        string Fax2, 
                        string Fax3, 
                        string EMail1, 
                        string EMail2, 
                        string EMail3, 
                        string WebSite, 
                        int EntityID, 
                        int BankID, 
                        int EmployeeID, 
                        int CustomerID, 
                        int SupplierID, 
                        int Title, 
                        int Gender, 
                        string JobTitle, 
                        int ManagerID, 
                        int AssistantID, 
                        int CompanyID, 
                        string CountryCode, 
                        string _Region, 
                        bool LocYN, 
                        int LocID, 
                        string TaxNbr1, 
                        string TaxNbr2, 
                        string TaxNbr3) {
                GeneralAddressRow rowGeneralAddressRow = ((GeneralAddressRow)(this.NewRow()));
                rowGeneralAddressRow.ItemArray = new object[] {
                        AddrID,
                        Name,
                        FirstName,
                        Description,
                        Address1,
                        Address2,
                        ZIP,
                        City,
                        Country,
                        PersonYN,
                        EntityYN,
                        BankYN,
                        EmployeeYN,
                        CustomerYN,
                        SupplierYN,
                        Lang,
                        Phone1,
                        Phone2,
                        Phone3,
                        Fax1,
                        Fax2,
                        Fax3,
                        EMail1,
                        EMail2,
                        EMail3,
                        WebSite,
                        EntityID,
                        BankID,
                        EmployeeID,
                        CustomerID,
                        SupplierID,
                        Title,
                        Gender,
                        JobTitle,
                        ManagerID,
                        AssistantID,
                        CompanyID,
                        CountryCode,
                        _Region,
                        LocYN,
                        LocID,
                        TaxNbr1,
                        TaxNbr2,
                        TaxNbr3};
                this.Rows.Add(rowGeneralAddressRow);
                return rowGeneralAddressRow;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralAddressRow FindByAddrID(int AddrID) {
                return ((GeneralAddressRow)(this.Rows.Find(new object[] {
                            AddrID})));
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                GeneralAddressDataTable cln = ((GeneralAddressDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new GeneralAddressDataTable();
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAddrID = base.Columns["AddrID"];
                this.columnName = base.Columns["Name"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnDescription = base.Columns["Description"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnZIP = base.Columns["ZIP"];
                this.columnCity = base.Columns["City"];
                this.columnCountry = base.Columns["Country"];
                this.columnPersonYN = base.Columns["PersonYN"];
                this.columnEntityYN = base.Columns["EntityYN"];
                this.columnBankYN = base.Columns["BankYN"];
                this.columnEmployeeYN = base.Columns["EmployeeYN"];
                this.columnCustomerYN = base.Columns["CustomerYN"];
                this.columnSupplierYN = base.Columns["SupplierYN"];
                this.columnLang = base.Columns["Lang"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnPhone2 = base.Columns["Phone2"];
                this.columnPhone3 = base.Columns["Phone3"];
                this.columnFax1 = base.Columns["Fax1"];
                this.columnFax2 = base.Columns["Fax2"];
                this.columnFax3 = base.Columns["Fax3"];
                this.columnEMail1 = base.Columns["EMail1"];
                this.columnEMail2 = base.Columns["EMail2"];
                this.columnEMail3 = base.Columns["EMail3"];
                this.columnWebSite = base.Columns["WebSite"];
                this.columnEntityID = base.Columns["EntityID"];
                this.columnBankID = base.Columns["BankID"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnSupplierID = base.Columns["SupplierID"];
                this.columnTitle = base.Columns["Title"];
                this.columnGender = base.Columns["Gender"];
                this.columnJobTitle = base.Columns["JobTitle"];
                this.columnManagerID = base.Columns["ManagerID"];
                this.columnAssistantID = base.Columns["AssistantID"];
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnCountryCode = base.Columns["CountryCode"];
                this.columnRegion = base.Columns["Region"];
                this.columnLocYN = base.Columns["LocYN"];
                this.columnLocID = base.Columns["LocID"];
                this.columnTaxNbr1 = base.Columns["TaxNbr1"];
                this.columnTaxNbr2 = base.Columns["TaxNbr2"];
                this.columnTaxNbr3 = base.Columns["TaxNbr3"];
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAddrID = new System.Data.DataColumn("AddrID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrID);
                this.columnName = new System.Data.DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnFirstName = new System.Data.DataColumn("FirstName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnDescription = new System.Data.DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnAddress1 = new System.Data.DataColumn("Address1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new System.Data.DataColumn("Address2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnZIP = new System.Data.DataColumn("ZIP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIP);
                this.columnCity = new System.Data.DataColumn("City", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnCountry = new System.Data.DataColumn("Country", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnPersonYN = new System.Data.DataColumn("PersonYN", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonYN);
                this.columnEntityYN = new System.Data.DataColumn("EntityYN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntityYN);
                this.columnBankYN = new System.Data.DataColumn("BankYN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankYN);
                this.columnEmployeeYN = new System.Data.DataColumn("EmployeeYN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeYN);
                this.columnCustomerYN = new System.Data.DataColumn("CustomerYN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerYN);
                this.columnSupplierYN = new System.Data.DataColumn("SupplierYN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierYN);
                this.columnLang = new System.Data.DataColumn("Lang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLang);
                this.columnPhone1 = new System.Data.DataColumn("Phone1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnPhone2 = new System.Data.DataColumn("Phone2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone2);
                this.columnPhone3 = new System.Data.DataColumn("Phone3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone3);
                this.columnFax1 = new System.Data.DataColumn("Fax1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax1);
                this.columnFax2 = new System.Data.DataColumn("Fax2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax2);
                this.columnFax3 = new System.Data.DataColumn("Fax3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax3);
                this.columnEMail1 = new System.Data.DataColumn("EMail1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail1);
                this.columnEMail2 = new System.Data.DataColumn("EMail2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail2);
                this.columnEMail3 = new System.Data.DataColumn("EMail3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail3);
                this.columnWebSite = new System.Data.DataColumn("WebSite", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebSite);
                this.columnEntityID = new System.Data.DataColumn("EntityID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntityID);
                this.columnBankID = new System.Data.DataColumn("BankID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnEmployeeID = new System.Data.DataColumn("EmployeeID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnCustomerID = new System.Data.DataColumn("CustomerID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnSupplierID = new System.Data.DataColumn("SupplierID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierID);
                this.columnTitle = new System.Data.DataColumn("Title", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnGender = new System.Data.DataColumn("Gender", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnJobTitle = new System.Data.DataColumn("JobTitle", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobTitle);
                this.columnManagerID = new System.Data.DataColumn("ManagerID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagerID);
                this.columnAssistantID = new System.Data.DataColumn("AssistantID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssistantID);
                this.columnCompanyID = new System.Data.DataColumn("CompanyID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnCountryCode = new System.Data.DataColumn("CountryCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryCode);
                this.columnRegion = new System.Data.DataColumn("Region", typeof(string), null, System.Data.MappingType.Element);
                this.columnRegion.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_Region");
                this.columnRegion.ExtendedProperties.Add("Generator_UserColumnName", "Region");
                base.Columns.Add(this.columnRegion);
                this.columnLocYN = new System.Data.DataColumn("LocYN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocYN);
                this.columnLocID = new System.Data.DataColumn("LocID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocID);
                this.columnTaxNbr1 = new System.Data.DataColumn("TaxNbr1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxNbr1);
                this.columnTaxNbr2 = new System.Data.DataColumn("TaxNbr2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxNbr2);
                this.columnTaxNbr3 = new System.Data.DataColumn("TaxNbr3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxNbr3);
                this.Constraints.Add(new System.Data.UniqueConstraint("dsCRMKey5", new System.Data.DataColumn[] {
                                this.columnAddrID}, true));
                this.columnAddrID.AllowDBNull = false;
                this.columnAddrID.Unique = true;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralAddressRow NewGeneralAddressRow() {
                return ((GeneralAddressRow)(this.NewRow()));
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new GeneralAddressRow(builder);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(GeneralAddressRow);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GeneralAddressRowChanged != null)) {
                    this.GeneralAddressRowChanged(this, new GeneralAddressRowChangeEvent(((GeneralAddressRow)(e.Row)), e.Action));
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GeneralAddressRowChanging != null)) {
                    this.GeneralAddressRowChanging(this, new GeneralAddressRowChangeEvent(((GeneralAddressRow)(e.Row)), e.Action));
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GeneralAddressRowDeleted != null)) {
                    this.GeneralAddressRowDeleted(this, new GeneralAddressRowChangeEvent(((GeneralAddressRow)(e.Row)), e.Action));
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GeneralAddressRowDeleting != null)) {
                    this.GeneralAddressRowDeleting(this, new GeneralAddressRowChangeEvent(((GeneralAddressRow)(e.Row)), e.Action));
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGeneralAddressRow(GeneralAddressRow row) {
                this.Rows.Remove(row);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dataSet1 ds = new dataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GeneralAddressDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CRMCustomerView1DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            private System.Data.DataColumn columnCustomerID;
            private System.Data.DataColumn columnAddrID;
            private System.Data.DataColumn columnIncoTerm;
            private System.Data.DataColumn columnCurrCode;
            private System.Data.DataColumn columnGLAcctID;
            private System.Data.DataColumn columnGLEscompteAcctID;
            private System.Data.DataColumn columnCreditLimit;
            private System.Data.DataColumn columnCreditTypeID;
            private System.Data.DataColumn columnCreditLevelID;
            private System.Data.DataColumn columnCreditBlockSO;
            private System.Data.DataColumn columnCreditBlockShip;
            private System.Data.DataColumn columnBankAcct;
            private System.Data.DataColumn columnIBANCode;
            private System.Data.DataColumn columnSwiftCode;
            private System.Data.DataColumn columnPayTermID;
            private System.Data.DataColumn columnPayMethodID;
            private System.Data.DataColumn columnTaxCode1;
            private System.Data.DataColumn columnTaxCode2;
            private System.Data.DataColumn columnInvoicingTypeID;
            private System.Data.DataColumn columnCreditLevel;
            private System.Data.DataColumn columnCreditType;
            private System.Data.DataColumn columnPayMethod;
            private System.Data.DataColumn columnCreditTerm;
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRMCustomerView1DataTable() {
                this.TableName = "CRMCustomerView1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CRMCustomerView1DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CRMCustomerView1DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddrIDColumn {
                get {
                    return this.columnAddrID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IncoTermColumn {
                get {
                    return this.columnIncoTerm;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CurrCodeColumn {
                get {
                    return this.columnCurrCode;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GLAcctIDColumn {
                get {
                    return this.columnGLAcctID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GLEscompteAcctIDColumn {
                get {
                    return this.columnGLEscompteAcctID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreditLimitColumn {
                get {
                    return this.columnCreditLimit;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreditTypeIDColumn {
                get {
                    return this.columnCreditTypeID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreditLevelIDColumn {
                get {
                    return this.columnCreditLevelID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreditBlockSOColumn {
                get {
                    return this.columnCreditBlockSO;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreditBlockShipColumn {
                get {
                    return this.columnCreditBlockShip;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BankAcctColumn {
                get {
                    return this.columnBankAcct;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IBANCodeColumn {
                get {
                    return this.columnIBANCode;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SwiftCodeColumn {
                get {
                    return this.columnSwiftCode;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PayTermIDColumn {
                get {
                    return this.columnPayTermID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PayMethodIDColumn {
                get {
                    return this.columnPayMethodID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TaxCode1Column {
                get {
                    return this.columnTaxCode1;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TaxCode2Column {
                get {
                    return this.columnTaxCode2;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InvoicingTypeIDColumn {
                get {
                    return this.columnInvoicingTypeID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreditLevelColumn {
                get {
                    return this.columnCreditLevel;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreditTypeColumn {
                get {
                    return this.columnCreditType;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PayMethodColumn {
                get {
                    return this.columnPayMethod;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreditTermColumn {
                get {
                    return this.columnCreditTerm;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRMCustomerView1Row this[int index] {
                get {
                    return ((CRMCustomerView1Row)(this.Rows[index]));
                }
            }
            public event CRMCustomerView1RowChangeEventHandler CRMCustomerView1RowChanging;
            public event CRMCustomerView1RowChangeEventHandler CRMCustomerView1RowChanged;
            public event CRMCustomerView1RowChangeEventHandler CRMCustomerView1RowDeleting;
            public event CRMCustomerView1RowChangeEventHandler CRMCustomerView1RowDeleted;
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCRMCustomerView1Row(CRMCustomerView1Row row) {
                this.Rows.Add(row);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRMCustomerView1Row AddCRMCustomerView1Row(
                        int CustomerID, 
                        int AddrID, 
                        string IncoTerm, 
                        string CurrCode, 
                        int GLAcctID, 
                        int GLEscompteAcctID, 
                        decimal CreditLimit, 
                        int CreditTypeID, 
                        int CreditLevelID, 
                        bool CreditBlockSO, 
                        bool CreditBlockShip, 
                        string BankAcct, 
                        string IBANCode, 
                        string SwiftCode, 
                        int PayTermID, 
                        int PayMethodID, 
                        string TaxCode1, 
                        string TaxCode2, 
                        int InvoicingTypeID, 
                        string CreditLevel, 
                        string CreditType, 
                        string PayMethod, 
                        string CreditTerm) {
                CRMCustomerView1Row rowCRMCustomerView1Row = ((CRMCustomerView1Row)(this.NewRow()));
                rowCRMCustomerView1Row.ItemArray = new object[] {
                        CustomerID,
                        AddrID,
                        IncoTerm,
                        CurrCode,
                        GLAcctID,
                        GLEscompteAcctID,
                        CreditLimit,
                        CreditTypeID,
                        CreditLevelID,
                        CreditBlockSO,
                        CreditBlockShip,
                        BankAcct,
                        IBANCode,
                        SwiftCode,
                        PayTermID,
                        PayMethodID,
                        TaxCode1,
                        TaxCode2,
                        InvoicingTypeID,
                        CreditLevel,
                        CreditType,
                        PayMethod,
                        CreditTerm};
                this.Rows.Add(rowCRMCustomerView1Row);
                return rowCRMCustomerView1Row;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CRMCustomerView1DataTable cln = ((CRMCustomerView1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CRMCustomerView1DataTable();
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnAddrID = base.Columns["AddrID"];
                this.columnIncoTerm = base.Columns["IncoTerm"];
                this.columnCurrCode = base.Columns["CurrCode"];
                this.columnGLAcctID = base.Columns["GLAcctID"];
                this.columnGLEscompteAcctID = base.Columns["GLEscompteAcctID"];
                this.columnCreditLimit = base.Columns["CreditLimit"];
                this.columnCreditTypeID = base.Columns["CreditTypeID"];
                this.columnCreditLevelID = base.Columns["CreditLevelID"];
                this.columnCreditBlockSO = base.Columns["CreditBlockSO"];
                this.columnCreditBlockShip = base.Columns["CreditBlockShip"];
                this.columnBankAcct = base.Columns["BankAcct"];
                this.columnIBANCode = base.Columns["IBANCode"];
                this.columnSwiftCode = base.Columns["SwiftCode"];
                this.columnPayTermID = base.Columns["PayTermID"];
                this.columnPayMethodID = base.Columns["PayMethodID"];
                this.columnTaxCode1 = base.Columns["TaxCode1"];
                this.columnTaxCode2 = base.Columns["TaxCode2"];
                this.columnInvoicingTypeID = base.Columns["InvoicingTypeID"];
                this.columnCreditLevel = base.Columns["CreditLevel"];
                this.columnCreditType = base.Columns["CreditType"];
                this.columnPayMethod = base.Columns["PayMethod"];
                this.columnCreditTerm = base.Columns["CreditTerm"];
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerID = new System.Data.DataColumn("CustomerID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnAddrID = new System.Data.DataColumn("AddrID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrID);
                this.columnIncoTerm = new System.Data.DataColumn("IncoTerm", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncoTerm);
                this.columnCurrCode = new System.Data.DataColumn("CurrCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrCode);
                this.columnGLAcctID = new System.Data.DataColumn("GLAcctID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLAcctID);
                this.columnGLEscompteAcctID = new System.Data.DataColumn("GLEscompteAcctID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLEscompteAcctID);
                this.columnCreditLimit = new System.Data.DataColumn("CreditLimit", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditLimit);
                this.columnCreditTypeID = new System.Data.DataColumn("CreditTypeID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditTypeID);
                this.columnCreditLevelID = new System.Data.DataColumn("CreditLevelID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditLevelID);
                this.columnCreditBlockSO = new System.Data.DataColumn("CreditBlockSO", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditBlockSO);
                this.columnCreditBlockShip = new System.Data.DataColumn("CreditBlockShip", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditBlockShip);
                this.columnBankAcct = new System.Data.DataColumn("BankAcct", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAcct);
                this.columnIBANCode = new System.Data.DataColumn("IBANCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIBANCode);
                this.columnSwiftCode = new System.Data.DataColumn("SwiftCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwiftCode);
                this.columnPayTermID = new System.Data.DataColumn("PayTermID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayTermID);
                this.columnPayMethodID = new System.Data.DataColumn("PayMethodID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayMethodID);
                this.columnTaxCode1 = new System.Data.DataColumn("TaxCode1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxCode1);
                this.columnTaxCode2 = new System.Data.DataColumn("TaxCode2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxCode2);
                this.columnInvoicingTypeID = new System.Data.DataColumn("InvoicingTypeID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicingTypeID);
                this.columnCreditLevel = new System.Data.DataColumn("CreditLevel", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditLevel);
                this.columnCreditType = new System.Data.DataColumn("CreditType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditType);
                this.columnPayMethod = new System.Data.DataColumn("PayMethod", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayMethod);
                this.columnCreditTerm = new System.Data.DataColumn("CreditTerm", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditTerm);
                this.columnCustomerID.AllowDBNull = false;
                this.columnIncoTerm.MaxLength = 3;
                this.columnCurrCode.MaxLength = 3;
                this.columnBankAcct.MaxLength = 50;
                this.columnIBANCode.MaxLength = 50;
                this.columnSwiftCode.MaxLength = 50;
                this.columnTaxCode1.MaxLength = 50;
                this.columnTaxCode2.MaxLength = 50;
                this.columnCreditLevel.MaxLength = 50;
                this.columnCreditType.MaxLength = 50;
                this.columnPayMethod.MaxLength = 50;
                this.columnCreditTerm.MaxLength = 50;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRMCustomerView1Row NewCRMCustomerView1Row() {
                return ((CRMCustomerView1Row)(this.NewRow()));
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CRMCustomerView1Row(builder);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CRMCustomerView1Row);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CRMCustomerView1RowChanged != null)) {
                    this.CRMCustomerView1RowChanged(this, new CRMCustomerView1RowChangeEvent(((CRMCustomerView1Row)(e.Row)), e.Action));
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CRMCustomerView1RowChanging != null)) {
                    this.CRMCustomerView1RowChanging(this, new CRMCustomerView1RowChangeEvent(((CRMCustomerView1Row)(e.Row)), e.Action));
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CRMCustomerView1RowDeleted != null)) {
                    this.CRMCustomerView1RowDeleted(this, new CRMCustomerView1RowChangeEvent(((CRMCustomerView1Row)(e.Row)), e.Action));
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CRMCustomerView1RowDeleting != null)) {
                    this.CRMCustomerView1RowDeleting(this, new CRMCustomerView1RowChangeEvent(((CRMCustomerView1Row)(e.Row)), e.Action));
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCRMCustomerView1Row(CRMCustomerView1Row row) {
                this.Rows.Remove(row);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dataSet1 ds = new dataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CRMCustomerView1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CRMContactView1DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            private System.Data.DataColumn columnAddrID;
            private System.Data.DataColumn columnName;
            private System.Data.DataColumn columnFirstName;
            private System.Data.DataColumn columnDescription;
            private System.Data.DataColumn columnAddress1;
            private System.Data.DataColumn columnAddress2;
            private System.Data.DataColumn columnZIP;
            private System.Data.DataColumn columnCity;
            private System.Data.DataColumn columnContactType;
            private System.Data.DataColumn columnEntityYN;
            private System.Data.DataColumn columnBankYN;
            private System.Data.DataColumn columnEmployeeYN;
            private System.Data.DataColumn columnCustomerYN;
            private System.Data.DataColumn columnSupplierYN;
            private System.Data.DataColumn columnLang;
            private System.Data.DataColumn columnPhone1;
            private System.Data.DataColumn columnPhone2;
            private System.Data.DataColumn columnPhone3;
            private System.Data.DataColumn columnFax1;
            private System.Data.DataColumn columnFax2;
            private System.Data.DataColumn columnFax3;
            private System.Data.DataColumn columnEMail1;
            private System.Data.DataColumn columnEMail2;
            private System.Data.DataColumn columnEMail3;
            private System.Data.DataColumn columnWebSite;
            private System.Data.DataColumn columnEmployeeID;
            private System.Data.DataColumn columnEmployee_Startdate;
            private System.Data.DataColumn columnEmployee_EndDate;
            private System.Data.DataColumn columnEmployee_DepartmentID;
            private System.Data.DataColumn columnTitle;
            private System.Data.DataColumn columnGender;
            private System.Data.DataColumn columnJobTitle;
            private System.Data.DataColumn columnManager_FirstName;
            private System.Data.DataColumn columnManager_LastName;
            private System.Data.DataColumn columnManager_Phone;
            private System.Data.DataColumn columnManager_Fax;
            private System.Data.DataColumn columnManager_EMail;
            private System.Data.DataColumn columnManager_WebSite;
            private System.Data.DataColumn columnAssistannt_FirstName;
            private System.Data.DataColumn columnAssistannt_LastName;
            private System.Data.DataColumn columnAssistannt_Phone;
            private System.Data.DataColumn columnAssistannt_Fax;
            private System.Data.DataColumn columnAssistannt_EMail;
            private System.Data.DataColumn columnAssistannt_WebSite;
            private System.Data.DataColumn columnCompany_Name;
            private System.Data.DataColumn columnCompany_City;
            private System.Data.DataColumn columnCompany_Country;
            private System.Data.DataColumn columnCompany_Phone;
            private System.Data.DataColumn columnCompany_Fax;
            private System.Data.DataColumn columnCompany_EMail;
            private System.Data.DataColumn columnCompany_WebSite;
            private System.Data.DataColumn columnEntityID;
            private System.Data.DataColumn columnPersonYN;
            private System.Data.DataColumn columnLocYN;
            private System.Data.DataColumn columnCountryCode;
            private System.Data.DataColumn columnCtryEUCode;
            private System.Data.DataColumn columnCtryIntrastatCode;
            private System.Data.DataColumn columnAddrFormat;
            private System.Data.DataColumn columnAddrContactFormat;
            private System.Data.DataColumn columnCtryISOCode;
            private System.Data.DataColumn columnAddrFormatDesc;
            private System.Data.DataColumn columnAddrContactFormatDesc;
            private System.Data.DataColumn columnRegion;
            private System.Data.DataColumn columnCountry;
            private System.Data.DataColumn columnFullNameFirstName;
            private System.Data.DataColumn columnFullFirstNameName;
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRMContactView1DataTable() {
                this.TableName = "CRMContactView1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CRMContactView1DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CRMContactView1DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddrIDColumn {
                get {
                    return this.columnAddrID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ZIPColumn {
                get {
                    return this.columnZIP;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ContactTypeColumn {
                get {
                    return this.columnContactType;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EntityYNColumn {
                get {
                    return this.columnEntityYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BankYNColumn {
                get {
                    return this.columnBankYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EmployeeYNColumn {
                get {
                    return this.columnEmployeeYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CustomerYNColumn {
                get {
                    return this.columnCustomerYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SupplierYNColumn {
                get {
                    return this.columnSupplierYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LangColumn {
                get {
                    return this.columnLang;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Phone2Column {
                get {
                    return this.columnPhone2;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Phone3Column {
                get {
                    return this.columnPhone3;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Fax1Column {
                get {
                    return this.columnFax1;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Fax2Column {
                get {
                    return this.columnFax2;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Fax3Column {
                get {
                    return this.columnFax3;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMail1Column {
                get {
                    return this.columnEMail1;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMail2Column {
                get {
                    return this.columnEMail2;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMail3Column {
                get {
                    return this.columnEMail3;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WebSiteColumn {
                get {
                    return this.columnWebSite;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Employee_StartdateColumn {
                get {
                    return this.columnEmployee_Startdate;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Employee_EndDateColumn {
                get {
                    return this.columnEmployee_EndDate;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Employee_DepartmentIDColumn {
                get {
                    return this.columnEmployee_DepartmentID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JobTitleColumn {
                get {
                    return this.columnJobTitle;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manager_FirstNameColumn {
                get {
                    return this.columnManager_FirstName;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manager_LastNameColumn {
                get {
                    return this.columnManager_LastName;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manager_PhoneColumn {
                get {
                    return this.columnManager_Phone;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manager_FaxColumn {
                get {
                    return this.columnManager_Fax;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manager_EMailColumn {
                get {
                    return this.columnManager_EMail;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Manager_WebSiteColumn {
                get {
                    return this.columnManager_WebSite;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Assistannt_FirstNameColumn {
                get {
                    return this.columnAssistannt_FirstName;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Assistannt_LastNameColumn {
                get {
                    return this.columnAssistannt_LastName;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Assistannt_PhoneColumn {
                get {
                    return this.columnAssistannt_Phone;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Assistannt_FaxColumn {
                get {
                    return this.columnAssistannt_Fax;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Assistannt_EMailColumn {
                get {
                    return this.columnAssistannt_EMail;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Assistannt_WebSiteColumn {
                get {
                    return this.columnAssistannt_WebSite;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Company_NameColumn {
                get {
                    return this.columnCompany_Name;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Company_CityColumn {
                get {
                    return this.columnCompany_City;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Company_CountryColumn {
                get {
                    return this.columnCompany_Country;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Company_PhoneColumn {
                get {
                    return this.columnCompany_Phone;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Company_FaxColumn {
                get {
                    return this.columnCompany_Fax;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Company_EMailColumn {
                get {
                    return this.columnCompany_EMail;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Company_WebSiteColumn {
                get {
                    return this.columnCompany_WebSite;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EntityIDColumn {
                get {
                    return this.columnEntityID;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PersonYNColumn {
                get {
                    return this.columnPersonYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LocYNColumn {
                get {
                    return this.columnLocYN;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CountryCodeColumn {
                get {
                    return this.columnCountryCode;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CtryEUCodeColumn {
                get {
                    return this.columnCtryEUCode;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CtryIntrastatCodeColumn {
                get {
                    return this.columnCtryIntrastatCode;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddrFormatColumn {
                get {
                    return this.columnAddrFormat;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddrContactFormatColumn {
                get {
                    return this.columnAddrContactFormat;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CtryISOCodeColumn {
                get {
                    return this.columnCtryISOCode;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddrFormatDescColumn {
                get {
                    return this.columnAddrFormatDesc;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AddrContactFormatDescColumn {
                get {
                    return this.columnAddrContactFormatDesc;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FullNameFirstNameColumn {
                get {
                    return this.columnFullNameFirstName;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FullFirstNameNameColumn {
                get {
                    return this.columnFullFirstNameName;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRMContactView1Row this[int index] {
                get {
                    return ((CRMContactView1Row)(this.Rows[index]));
                }
            }
            public event CRMContactView1RowChangeEventHandler CRMContactView1RowChanging;
            public event CRMContactView1RowChangeEventHandler CRMContactView1RowChanged;
            public event CRMContactView1RowChangeEventHandler CRMContactView1RowDeleting;
            public event CRMContactView1RowChangeEventHandler CRMContactView1RowDeleted;
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCRMContactView1Row(CRMContactView1Row row) {
                this.Rows.Add(row);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRMContactView1Row AddCRMContactView1Row(
                        int AddrID, 
                        string Name, 
                        string FirstName, 
                        string Description, 
                        string Address1, 
                        string Address2, 
                        string ZIP, 
                        string City, 
                        string ContactType, 
                        bool EntityYN, 
                        bool BankYN, 
                        bool EmployeeYN, 
                        bool CustomerYN, 
                        bool SupplierYN, 
                        string Lang, 
                        string Phone1, 
                        string Phone2, 
                        string Phone3, 
                        string Fax1, 
                        string Fax2, 
                        string Fax3, 
                        string EMail1, 
                        string EMail2, 
                        string EMail3, 
                        string WebSite, 
                        int EmployeeID, 
                        System.DateTime Employee_Startdate, 
                        System.DateTime Employee_EndDate, 
                        int Employee_DepartmentID, 
                        string Title, 
                        string Gender, 
                        string JobTitle, 
                        string Manager_FirstName, 
                        string Manager_LastName, 
                        string Manager_Phone, 
                        string Manager_Fax, 
                        string Manager_EMail, 
                        string Manager_WebSite, 
                        string Assistannt_FirstName, 
                        string Assistannt_LastName, 
                        string Assistannt_Phone, 
                        string Assistannt_Fax, 
                        string Assistannt_EMail, 
                        string Assistannt_WebSite, 
                        string Company_Name, 
                        string Company_City, 
                        string Company_Country, 
                        string Company_Phone, 
                        string Company_Fax, 
                        string Company_EMail, 
                        string Company_WebSite, 
                        int EntityID, 
                        int PersonYN, 
                        bool LocYN, 
                        string CountryCode, 
                        string CtryEUCode, 
                        string CtryIntrastatCode, 
                        int AddrFormat, 
                        int AddrContactFormat, 
                        string CtryISOCode, 
                        string AddrFormatDesc, 
                        string AddrContactFormatDesc, 
                        string _Region, 
                        string Country, 
                        string FullNameFirstName, 
                        string FullFirstNameName) {
                CRMContactView1Row rowCRMContactView1Row = ((CRMContactView1Row)(this.NewRow()));
                rowCRMContactView1Row.ItemArray = new object[] {
                        AddrID,
                        Name,
                        FirstName,
                        Description,
                        Address1,
                        Address2,
                        ZIP,
                        City,
                        ContactType,
                        EntityYN,
                        BankYN,
                        EmployeeYN,
                        CustomerYN,
                        SupplierYN,
                        Lang,
                        Phone1,
                        Phone2,
                        Phone3,
                        Fax1,
                        Fax2,
                        Fax3,
                        EMail1,
                        EMail2,
                        EMail3,
                        WebSite,
                        EmployeeID,
                        Employee_Startdate,
                        Employee_EndDate,
                        Employee_DepartmentID,
                        Title,
                        Gender,
                        JobTitle,
                        Manager_FirstName,
                        Manager_LastName,
                        Manager_Phone,
                        Manager_Fax,
                        Manager_EMail,
                        Manager_WebSite,
                        Assistannt_FirstName,
                        Assistannt_LastName,
                        Assistannt_Phone,
                        Assistannt_Fax,
                        Assistannt_EMail,
                        Assistannt_WebSite,
                        Company_Name,
                        Company_City,
                        Company_Country,
                        Company_Phone,
                        Company_Fax,
                        Company_EMail,
                        Company_WebSite,
                        EntityID,
                        PersonYN,
                        LocYN,
                        CountryCode,
                        CtryEUCode,
                        CtryIntrastatCode,
                        AddrFormat,
                        AddrContactFormat,
                        CtryISOCode,
                        AddrFormatDesc,
                        AddrContactFormatDesc,
                        _Region,
                        Country,
                        FullNameFirstName,
                        FullFirstNameName};
                this.Rows.Add(rowCRMContactView1Row);
                return rowCRMContactView1Row;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CRMContactView1DataTable cln = ((CRMContactView1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CRMContactView1DataTable();
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAddrID = base.Columns["AddrID"];
                this.columnName = base.Columns["Name"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnDescription = base.Columns["Description"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnZIP = base.Columns["ZIP"];
                this.columnCity = base.Columns["City"];
                this.columnContactType = base.Columns["ContactType"];
                this.columnEntityYN = base.Columns["EntityYN"];
                this.columnBankYN = base.Columns["BankYN"];
                this.columnEmployeeYN = base.Columns["EmployeeYN"];
                this.columnCustomerYN = base.Columns["CustomerYN"];
                this.columnSupplierYN = base.Columns["SupplierYN"];
                this.columnLang = base.Columns["Lang"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnPhone2 = base.Columns["Phone2"];
                this.columnPhone3 = base.Columns["Phone3"];
                this.columnFax1 = base.Columns["Fax1"];
                this.columnFax2 = base.Columns["Fax2"];
                this.columnFax3 = base.Columns["Fax3"];
                this.columnEMail1 = base.Columns["EMail1"];
                this.columnEMail2 = base.Columns["EMail2"];
                this.columnEMail3 = base.Columns["EMail3"];
                this.columnWebSite = base.Columns["WebSite"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnEmployee_Startdate = base.Columns["Employee_Startdate"];
                this.columnEmployee_EndDate = base.Columns["Employee_EndDate"];
                this.columnEmployee_DepartmentID = base.Columns["Employee_DepartmentID"];
                this.columnTitle = base.Columns["Title"];
                this.columnGender = base.Columns["Gender"];
                this.columnJobTitle = base.Columns["JobTitle"];
                this.columnManager_FirstName = base.Columns["Manager_FirstName"];
                this.columnManager_LastName = base.Columns["Manager_LastName"];
                this.columnManager_Phone = base.Columns["Manager_Phone"];
                this.columnManager_Fax = base.Columns["Manager_Fax"];
                this.columnManager_EMail = base.Columns["Manager_EMail"];
                this.columnManager_WebSite = base.Columns["Manager_WebSite"];
                this.columnAssistannt_FirstName = base.Columns["Assistannt_FirstName"];
                this.columnAssistannt_LastName = base.Columns["Assistannt_LastName"];
                this.columnAssistannt_Phone = base.Columns["Assistannt_Phone"];
                this.columnAssistannt_Fax = base.Columns["Assistannt_Fax"];
                this.columnAssistannt_EMail = base.Columns["Assistannt_EMail"];
                this.columnAssistannt_WebSite = base.Columns["Assistannt_WebSite"];
                this.columnCompany_Name = base.Columns["Company_Name"];
                this.columnCompany_City = base.Columns["Company_City"];
                this.columnCompany_Country = base.Columns["Company_Country"];
                this.columnCompany_Phone = base.Columns["Company_Phone"];
                this.columnCompany_Fax = base.Columns["Company_Fax"];
                this.columnCompany_EMail = base.Columns["Company_EMail"];
                this.columnCompany_WebSite = base.Columns["Company_WebSite"];
                this.columnEntityID = base.Columns["EntityID"];
                this.columnPersonYN = base.Columns["PersonYN"];
                this.columnLocYN = base.Columns["LocYN"];
                this.columnCountryCode = base.Columns["CountryCode"];
                this.columnCtryEUCode = base.Columns["CtryEUCode"];
                this.columnCtryIntrastatCode = base.Columns["CtryIntrastatCode"];
                this.columnAddrFormat = base.Columns["AddrFormat"];
                this.columnAddrContactFormat = base.Columns["AddrContactFormat"];
                this.columnCtryISOCode = base.Columns["CtryISOCode"];
                this.columnAddrFormatDesc = base.Columns["AddrFormatDesc"];
                this.columnAddrContactFormatDesc = base.Columns["AddrContactFormatDesc"];
                this.columnRegion = base.Columns["Region"];
                this.columnCountry = base.Columns["Country"];
                this.columnFullNameFirstName = base.Columns["FullNameFirstName"];
                this.columnFullFirstNameName = base.Columns["FullFirstNameName"];
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAddrID = new System.Data.DataColumn("AddrID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrID);
                this.columnName = new System.Data.DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnFirstName = new System.Data.DataColumn("FirstName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnDescription = new System.Data.DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnAddress1 = new System.Data.DataColumn("Address1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new System.Data.DataColumn("Address2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnZIP = new System.Data.DataColumn("ZIP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIP);
                this.columnCity = new System.Data.DataColumn("City", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnContactType = new System.Data.DataColumn("ContactType", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactType);
                this.columnEntityYN = new System.Data.DataColumn("EntityYN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntityYN);
                this.columnBankYN = new System.Data.DataColumn("BankYN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankYN);
                this.columnEmployeeYN = new System.Data.DataColumn("EmployeeYN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeYN);
                this.columnCustomerYN = new System.Data.DataColumn("CustomerYN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerYN);
                this.columnSupplierYN = new System.Data.DataColumn("SupplierYN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierYN);
                this.columnLang = new System.Data.DataColumn("Lang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLang);
                this.columnPhone1 = new System.Data.DataColumn("Phone1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnPhone2 = new System.Data.DataColumn("Phone2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone2);
                this.columnPhone3 = new System.Data.DataColumn("Phone3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone3);
                this.columnFax1 = new System.Data.DataColumn("Fax1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax1);
                this.columnFax2 = new System.Data.DataColumn("Fax2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax2);
                this.columnFax3 = new System.Data.DataColumn("Fax3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax3);
                this.columnEMail1 = new System.Data.DataColumn("EMail1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail1);
                this.columnEMail2 = new System.Data.DataColumn("EMail2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail2);
                this.columnEMail3 = new System.Data.DataColumn("EMail3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail3);
                this.columnWebSite = new System.Data.DataColumn("WebSite", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebSite);
                this.columnEmployeeID = new System.Data.DataColumn("EmployeeID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnEmployee_Startdate = new System.Data.DataColumn("Employee_Startdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployee_Startdate);
                this.columnEmployee_EndDate = new System.Data.DataColumn("Employee_EndDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployee_EndDate);
                this.columnEmployee_DepartmentID = new System.Data.DataColumn("Employee_DepartmentID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployee_DepartmentID);
                this.columnTitle = new System.Data.DataColumn("Title", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnGender = new System.Data.DataColumn("Gender", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnJobTitle = new System.Data.DataColumn("JobTitle", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobTitle);
                this.columnManager_FirstName = new System.Data.DataColumn("Manager_FirstName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManager_FirstName);
                this.columnManager_LastName = new System.Data.DataColumn("Manager_LastName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManager_LastName);
                this.columnManager_Phone = new System.Data.DataColumn("Manager_Phone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManager_Phone);
                this.columnManager_Fax = new System.Data.DataColumn("Manager_Fax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManager_Fax);
                this.columnManager_EMail = new System.Data.DataColumn("Manager_EMail", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManager_EMail);
                this.columnManager_WebSite = new System.Data.DataColumn("Manager_WebSite", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManager_WebSite);
                this.columnAssistannt_FirstName = new System.Data.DataColumn("Assistannt_FirstName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssistannt_FirstName);
                this.columnAssistannt_LastName = new System.Data.DataColumn("Assistannt_LastName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssistannt_LastName);
                this.columnAssistannt_Phone = new System.Data.DataColumn("Assistannt_Phone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssistannt_Phone);
                this.columnAssistannt_Fax = new System.Data.DataColumn("Assistannt_Fax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssistannt_Fax);
                this.columnAssistannt_EMail = new System.Data.DataColumn("Assistannt_EMail", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssistannt_EMail);
                this.columnAssistannt_WebSite = new System.Data.DataColumn("Assistannt_WebSite", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssistannt_WebSite);
                this.columnCompany_Name = new System.Data.DataColumn("Company_Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_Name);
                this.columnCompany_City = new System.Data.DataColumn("Company_City", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_City);
                this.columnCompany_Country = new System.Data.DataColumn("Company_Country", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_Country);
                this.columnCompany_Phone = new System.Data.DataColumn("Company_Phone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_Phone);
                this.columnCompany_Fax = new System.Data.DataColumn("Company_Fax", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_Fax);
                this.columnCompany_EMail = new System.Data.DataColumn("Company_EMail", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_EMail);
                this.columnCompany_WebSite = new System.Data.DataColumn("Company_WebSite", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_WebSite);
                this.columnEntityID = new System.Data.DataColumn("EntityID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntityID);
                this.columnPersonYN = new System.Data.DataColumn("PersonYN", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonYN);
                this.columnLocYN = new System.Data.DataColumn("LocYN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocYN);
                this.columnCountryCode = new System.Data.DataColumn("CountryCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryCode);
                this.columnCtryEUCode = new System.Data.DataColumn("CtryEUCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCtryEUCode);
                this.columnCtryIntrastatCode = new System.Data.DataColumn("CtryIntrastatCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCtryIntrastatCode);
                this.columnAddrFormat = new System.Data.DataColumn("AddrFormat", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrFormat);
                this.columnAddrContactFormat = new System.Data.DataColumn("AddrContactFormat", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrContactFormat);
                this.columnCtryISOCode = new System.Data.DataColumn("CtryISOCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCtryISOCode);
                this.columnAddrFormatDesc = new System.Data.DataColumn("AddrFormatDesc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrFormatDesc);
                this.columnAddrContactFormatDesc = new System.Data.DataColumn("AddrContactFormatDesc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrContactFormatDesc);
                this.columnRegion = new System.Data.DataColumn("Region", typeof(string), null, System.Data.MappingType.Element);
                this.columnRegion.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_Region");
                this.columnRegion.ExtendedProperties.Add("Generator_UserColumnName", "Region");
                base.Columns.Add(this.columnRegion);
                this.columnCountry = new System.Data.DataColumn("Country", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnFullNameFirstName = new System.Data.DataColumn("FullNameFirstName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullNameFirstName);
                this.columnFullFirstNameName = new System.Data.DataColumn("FullFirstNameName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullFirstNameName);
                this.columnAddrID.AllowDBNull = false;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRMContactView1Row NewCRMContactView1Row() {
                return ((CRMContactView1Row)(this.NewRow()));
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CRMContactView1Row(builder);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CRMContactView1Row);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CRMContactView1RowChanged != null)) {
                    this.CRMContactView1RowChanged(this, new CRMContactView1RowChangeEvent(((CRMContactView1Row)(e.Row)), e.Action));
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CRMContactView1RowChanging != null)) {
                    this.CRMContactView1RowChanging(this, new CRMContactView1RowChangeEvent(((CRMContactView1Row)(e.Row)), e.Action));
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CRMContactView1RowDeleted != null)) {
                    this.CRMContactView1RowDeleted(this, new CRMContactView1RowChangeEvent(((CRMContactView1Row)(e.Row)), e.Action));
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CRMContactView1RowDeleting != null)) {
                    this.CRMContactView1RowDeleting(this, new CRMContactView1RowChangeEvent(((CRMContactView1Row)(e.Row)), e.Action));
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCRMContactView1Row(CRMContactView1Row row) {
                this.Rows.Remove(row);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dataSet1 ds = new dataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CRMContactView1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GeneralAddressRow : System.Data.DataRow {
            private GeneralAddressDataTable tableGeneralAddress;
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GeneralAddressRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGeneralAddress = ((GeneralAddressDataTable)(this.Table));
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddrID {
                get {
                    return ((int)(this[this.tableGeneralAddress.AddrIDColumn]));
                }
                set {
                    this[this.tableGeneralAddress.AddrIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Name\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.NameColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.FirstNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FirstName\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.FirstNameColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.DescriptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Description\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.DescriptionColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.Address1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address1\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.Address1Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.Address2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address2\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.Address2Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZIP {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.ZIPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ZIP\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.ZIPColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.CityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'City\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.CityColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.CountryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Country\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.CountryColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PersonYN {
                get {
                    try {
                        return ((int)(this[this.tableGeneralAddress.PersonYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PersonYN\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.PersonYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EntityYN {
                get {
                    try {
                        return ((bool)(this[this.tableGeneralAddress.EntityYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EntityYN\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.EntityYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BankYN {
                get {
                    try {
                        return ((bool)(this[this.tableGeneralAddress.BankYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BankYN\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.BankYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EmployeeYN {
                get {
                    try {
                        return ((bool)(this[this.tableGeneralAddress.EmployeeYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EmployeeYN\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.EmployeeYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CustomerYN {
                get {
                    try {
                        return ((bool)(this[this.tableGeneralAddress.CustomerYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CustomerYN\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.CustomerYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SupplierYN {
                get {
                    try {
                        return ((bool)(this[this.tableGeneralAddress.SupplierYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SupplierYN\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.SupplierYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lang {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.LangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Lang\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.LangColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.Phone1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Phone1\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.Phone1Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone2 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.Phone2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Phone2\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.Phone2Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone3 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.Phone3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Phone3\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.Phone3Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax1 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.Fax1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Fax1\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.Fax1Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax2 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.Fax2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Fax2\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.Fax2Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax3 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.Fax3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Fax3\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.Fax3Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMail1 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.EMail1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMail1\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.EMail1Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMail2 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.EMail2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMail2\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.EMail2Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMail3 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.EMail3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMail3\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.EMail3Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WebSite {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.WebSiteColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WebSite\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.WebSiteColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EntityID {
                get {
                    try {
                        return ((int)(this[this.tableGeneralAddress.EntityIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EntityID\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.EntityIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BankID {
                get {
                    try {
                        return ((int)(this[this.tableGeneralAddress.BankIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BankID\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.BankIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    try {
                        return ((int)(this[this.tableGeneralAddress.EmployeeIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EmployeeID\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.EmployeeIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tableGeneralAddress.CustomerIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.CustomerIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierID {
                get {
                    try {
                        return ((int)(this[this.tableGeneralAddress.SupplierIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SupplierID\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.SupplierIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Title {
                get {
                    try {
                        return ((int)(this[this.tableGeneralAddress.TitleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Title\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.TitleColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Gender {
                get {
                    try {
                        return ((int)(this[this.tableGeneralAddress.GenderColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Gender\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.GenderColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobTitle {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.JobTitleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'JobTitle\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.JobTitleColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ManagerID {
                get {
                    try {
                        return ((int)(this[this.tableGeneralAddress.ManagerIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ManagerID\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.ManagerIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssistantID {
                get {
                    try {
                        return ((int)(this[this.tableGeneralAddress.AssistantIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AssistantID\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.AssistantIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyID {
                get {
                    try {
                        return ((int)(this[this.tableGeneralAddress.CompanyIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CompanyID\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.CompanyIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountryCode {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.CountryCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CountryCode\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.CountryCodeColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Region {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.RegionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Region\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.RegionColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LocYN {
                get {
                    try {
                        return ((bool)(this[this.tableGeneralAddress.LocYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LocYN\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.LocYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LocID {
                get {
                    try {
                        return ((int)(this[this.tableGeneralAddress.LocIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LocID\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.LocIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxNbr1 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.TaxNbr1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TaxNbr1\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.TaxNbr1Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxNbr2 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.TaxNbr2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TaxNbr2\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.TaxNbr2Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxNbr3 {
                get {
                    try {
                        return ((string)(this[this.tableGeneralAddress.TaxNbr3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TaxNbr3\' in table \'GeneralAddress\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGeneralAddress.TaxNbr3Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableGeneralAddress.NameColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableGeneralAddress.NameColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableGeneralAddress.FirstNameColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tableGeneralAddress.FirstNameColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableGeneralAddress.DescriptionColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableGeneralAddress.DescriptionColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableGeneralAddress.Address1Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableGeneralAddress.Address1Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableGeneralAddress.Address2Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableGeneralAddress.Address2Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZIPNull() {
                return this.IsNull(this.tableGeneralAddress.ZIPColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZIPNull() {
                this[this.tableGeneralAddress.ZIPColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableGeneralAddress.CityColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableGeneralAddress.CityColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tableGeneralAddress.CountryColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tableGeneralAddress.CountryColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonYNNull() {
                return this.IsNull(this.tableGeneralAddress.PersonYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonYNNull() {
                this[this.tableGeneralAddress.PersonYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntityYNNull() {
                return this.IsNull(this.tableGeneralAddress.EntityYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntityYNNull() {
                this[this.tableGeneralAddress.EntityYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankYNNull() {
                return this.IsNull(this.tableGeneralAddress.BankYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankYNNull() {
                this[this.tableGeneralAddress.BankYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeYNNull() {
                return this.IsNull(this.tableGeneralAddress.EmployeeYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeYNNull() {
                this[this.tableGeneralAddress.EmployeeYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerYNNull() {
                return this.IsNull(this.tableGeneralAddress.CustomerYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerYNNull() {
                this[this.tableGeneralAddress.CustomerYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierYNNull() {
                return this.IsNull(this.tableGeneralAddress.SupplierYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierYNNull() {
                this[this.tableGeneralAddress.SupplierYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLangNull() {
                return this.IsNull(this.tableGeneralAddress.LangColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLangNull() {
                this[this.tableGeneralAddress.LangColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableGeneralAddress.Phone1Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableGeneralAddress.Phone1Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone2Null() {
                return this.IsNull(this.tableGeneralAddress.Phone2Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone2Null() {
                this[this.tableGeneralAddress.Phone2Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone3Null() {
                return this.IsNull(this.tableGeneralAddress.Phone3Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone3Null() {
                this[this.tableGeneralAddress.Phone3Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFax1Null() {
                return this.IsNull(this.tableGeneralAddress.Fax1Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFax1Null() {
                this[this.tableGeneralAddress.Fax1Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFax2Null() {
                return this.IsNull(this.tableGeneralAddress.Fax2Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFax2Null() {
                this[this.tableGeneralAddress.Fax2Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFax3Null() {
                return this.IsNull(this.tableGeneralAddress.Fax3Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFax3Null() {
                this[this.tableGeneralAddress.Fax3Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMail1Null() {
                return this.IsNull(this.tableGeneralAddress.EMail1Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMail1Null() {
                this[this.tableGeneralAddress.EMail1Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMail2Null() {
                return this.IsNull(this.tableGeneralAddress.EMail2Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMail2Null() {
                this[this.tableGeneralAddress.EMail2Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMail3Null() {
                return this.IsNull(this.tableGeneralAddress.EMail3Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMail3Null() {
                this[this.tableGeneralAddress.EMail3Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWebSiteNull() {
                return this.IsNull(this.tableGeneralAddress.WebSiteColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWebSiteNull() {
                this[this.tableGeneralAddress.WebSiteColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntityIDNull() {
                return this.IsNull(this.tableGeneralAddress.EntityIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntityIDNull() {
                this[this.tableGeneralAddress.EntityIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankIDNull() {
                return this.IsNull(this.tableGeneralAddress.BankIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankIDNull() {
                this[this.tableGeneralAddress.BankIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeIDNull() {
                return this.IsNull(this.tableGeneralAddress.EmployeeIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeIDNull() {
                this[this.tableGeneralAddress.EmployeeIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableGeneralAddress.CustomerIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableGeneralAddress.CustomerIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierIDNull() {
                return this.IsNull(this.tableGeneralAddress.SupplierIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierIDNull() {
                this[this.tableGeneralAddress.SupplierIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitleNull() {
                return this.IsNull(this.tableGeneralAddress.TitleColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitleNull() {
                this[this.tableGeneralAddress.TitleColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableGeneralAddress.GenderColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableGeneralAddress.GenderColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobTitleNull() {
                return this.IsNull(this.tableGeneralAddress.JobTitleColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobTitleNull() {
                this[this.tableGeneralAddress.JobTitleColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManagerIDNull() {
                return this.IsNull(this.tableGeneralAddress.ManagerIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManagerIDNull() {
                this[this.tableGeneralAddress.ManagerIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssistantIDNull() {
                return this.IsNull(this.tableGeneralAddress.AssistantIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssistantIDNull() {
                this[this.tableGeneralAddress.AssistantIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyIDNull() {
                return this.IsNull(this.tableGeneralAddress.CompanyIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyIDNull() {
                this[this.tableGeneralAddress.CompanyIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryCodeNull() {
                return this.IsNull(this.tableGeneralAddress.CountryCodeColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryCodeNull() {
                this[this.tableGeneralAddress.CountryCodeColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_RegionNull() {
                return this.IsNull(this.tableGeneralAddress.RegionColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_RegionNull() {
                this[this.tableGeneralAddress.RegionColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocYNNull() {
                return this.IsNull(this.tableGeneralAddress.LocYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocYNNull() {
                this[this.tableGeneralAddress.LocYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocIDNull() {
                return this.IsNull(this.tableGeneralAddress.LocIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocIDNull() {
                this[this.tableGeneralAddress.LocIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNbr1Null() {
                return this.IsNull(this.tableGeneralAddress.TaxNbr1Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNbr1Null() {
                this[this.tableGeneralAddress.TaxNbr1Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNbr2Null() {
                return this.IsNull(this.tableGeneralAddress.TaxNbr2Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNbr2Null() {
                this[this.tableGeneralAddress.TaxNbr2Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNbr3Null() {
                return this.IsNull(this.tableGeneralAddress.TaxNbr3Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNbr3Null() {
                this[this.tableGeneralAddress.TaxNbr3Column] = System.Convert.DBNull;
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CRMCustomerView1Row : System.Data.DataRow {
            private CRMCustomerView1DataTable tableCRMCustomerView1;
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CRMCustomerView1Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCRMCustomerView1 = ((CRMCustomerView1DataTable)(this.Table));
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    return ((int)(this[this.tableCRMCustomerView1.CustomerIDColumn]));
                }
                set {
                    this[this.tableCRMCustomerView1.CustomerIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddrID {
                get {
                    try {
                        return ((int)(this[this.tableCRMCustomerView1.AddrIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AddrID\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.AddrIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IncoTerm {
                get {
                    try {
                        return ((string)(this[this.tableCRMCustomerView1.IncoTermColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IncoTerm\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.IncoTermColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrCode {
                get {
                    try {
                        return ((string)(this[this.tableCRMCustomerView1.CurrCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CurrCode\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.CurrCodeColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GLAcctID {
                get {
                    try {
                        return ((int)(this[this.tableCRMCustomerView1.GLAcctIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GLAcctID\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.GLAcctIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GLEscompteAcctID {
                get {
                    try {
                        return ((int)(this[this.tableCRMCustomerView1.GLEscompteAcctIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GLEscompteAcctID\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.GLEscompteAcctIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CreditLimit {
                get {
                    try {
                        return ((decimal)(this[this.tableCRMCustomerView1.CreditLimitColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreditLimit\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.CreditLimitColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreditTypeID {
                get {
                    try {
                        return ((int)(this[this.tableCRMCustomerView1.CreditTypeIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreditTypeID\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.CreditTypeIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreditLevelID {
                get {
                    try {
                        return ((int)(this[this.tableCRMCustomerView1.CreditLevelIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreditLevelID\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.CreditLevelIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CreditBlockSO {
                get {
                    try {
                        return ((bool)(this[this.tableCRMCustomerView1.CreditBlockSOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreditBlockSO\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.CreditBlockSOColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CreditBlockShip {
                get {
                    try {
                        return ((bool)(this[this.tableCRMCustomerView1.CreditBlockShipColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreditBlockShip\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.CreditBlockShipColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankAcct {
                get {
                    try {
                        return ((string)(this[this.tableCRMCustomerView1.BankAcctColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BankAcct\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.BankAcctColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IBANCode {
                get {
                    try {
                        return ((string)(this[this.tableCRMCustomerView1.IBANCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IBANCode\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.IBANCodeColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SwiftCode {
                get {
                    try {
                        return ((string)(this[this.tableCRMCustomerView1.SwiftCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SwiftCode\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.SwiftCodeColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PayTermID {
                get {
                    try {
                        return ((int)(this[this.tableCRMCustomerView1.PayTermIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PayTermID\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.PayTermIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PayMethodID {
                get {
                    try {
                        return ((int)(this[this.tableCRMCustomerView1.PayMethodIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PayMethodID\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.PayMethodIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxCode1 {
                get {
                    try {
                        return ((string)(this[this.tableCRMCustomerView1.TaxCode1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TaxCode1\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.TaxCode1Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxCode2 {
                get {
                    try {
                        return ((string)(this[this.tableCRMCustomerView1.TaxCode2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TaxCode2\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.TaxCode2Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InvoicingTypeID {
                get {
                    try {
                        return ((int)(this[this.tableCRMCustomerView1.InvoicingTypeIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'InvoicingTypeID\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.InvoicingTypeIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreditLevel {
                get {
                    try {
                        return ((string)(this[this.tableCRMCustomerView1.CreditLevelColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreditLevel\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.CreditLevelColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreditType {
                get {
                    try {
                        return ((string)(this[this.tableCRMCustomerView1.CreditTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreditType\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.CreditTypeColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayMethod {
                get {
                    try {
                        return ((string)(this[this.tableCRMCustomerView1.PayMethodColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PayMethod\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.PayMethodColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreditTerm {
                get {
                    try {
                        return ((string)(this[this.tableCRMCustomerView1.CreditTermColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CreditTerm\' in table \'CRMCustomerView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMCustomerView1.CreditTermColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddrIDNull() {
                return this.IsNull(this.tableCRMCustomerView1.AddrIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddrIDNull() {
                this[this.tableCRMCustomerView1.AddrIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncoTermNull() {
                return this.IsNull(this.tableCRMCustomerView1.IncoTermColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncoTermNull() {
                this[this.tableCRMCustomerView1.IncoTermColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrCodeNull() {
                return this.IsNull(this.tableCRMCustomerView1.CurrCodeColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrCodeNull() {
                this[this.tableCRMCustomerView1.CurrCodeColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLAcctIDNull() {
                return this.IsNull(this.tableCRMCustomerView1.GLAcctIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLAcctIDNull() {
                this[this.tableCRMCustomerView1.GLAcctIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLEscompteAcctIDNull() {
                return this.IsNull(this.tableCRMCustomerView1.GLEscompteAcctIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLEscompteAcctIDNull() {
                this[this.tableCRMCustomerView1.GLEscompteAcctIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditLimitNull() {
                return this.IsNull(this.tableCRMCustomerView1.CreditLimitColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditLimitNull() {
                this[this.tableCRMCustomerView1.CreditLimitColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditTypeIDNull() {
                return this.IsNull(this.tableCRMCustomerView1.CreditTypeIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditTypeIDNull() {
                this[this.tableCRMCustomerView1.CreditTypeIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditLevelIDNull() {
                return this.IsNull(this.tableCRMCustomerView1.CreditLevelIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditLevelIDNull() {
                this[this.tableCRMCustomerView1.CreditLevelIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditBlockSONull() {
                return this.IsNull(this.tableCRMCustomerView1.CreditBlockSOColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditBlockSONull() {
                this[this.tableCRMCustomerView1.CreditBlockSOColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditBlockShipNull() {
                return this.IsNull(this.tableCRMCustomerView1.CreditBlockShipColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditBlockShipNull() {
                this[this.tableCRMCustomerView1.CreditBlockShipColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankAcctNull() {
                return this.IsNull(this.tableCRMCustomerView1.BankAcctColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankAcctNull() {
                this[this.tableCRMCustomerView1.BankAcctColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIBANCodeNull() {
                return this.IsNull(this.tableCRMCustomerView1.IBANCodeColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIBANCodeNull() {
                this[this.tableCRMCustomerView1.IBANCodeColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSwiftCodeNull() {
                return this.IsNull(this.tableCRMCustomerView1.SwiftCodeColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSwiftCodeNull() {
                this[this.tableCRMCustomerView1.SwiftCodeColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayTermIDNull() {
                return this.IsNull(this.tableCRMCustomerView1.PayTermIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayTermIDNull() {
                this[this.tableCRMCustomerView1.PayTermIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayMethodIDNull() {
                return this.IsNull(this.tableCRMCustomerView1.PayMethodIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayMethodIDNull() {
                this[this.tableCRMCustomerView1.PayMethodIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxCode1Null() {
                return this.IsNull(this.tableCRMCustomerView1.TaxCode1Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxCode1Null() {
                this[this.tableCRMCustomerView1.TaxCode1Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxCode2Null() {
                return this.IsNull(this.tableCRMCustomerView1.TaxCode2Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxCode2Null() {
                this[this.tableCRMCustomerView1.TaxCode2Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoicingTypeIDNull() {
                return this.IsNull(this.tableCRMCustomerView1.InvoicingTypeIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoicingTypeIDNull() {
                this[this.tableCRMCustomerView1.InvoicingTypeIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditLevelNull() {
                return this.IsNull(this.tableCRMCustomerView1.CreditLevelColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditLevelNull() {
                this[this.tableCRMCustomerView1.CreditLevelColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditTypeNull() {
                return this.IsNull(this.tableCRMCustomerView1.CreditTypeColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditTypeNull() {
                this[this.tableCRMCustomerView1.CreditTypeColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayMethodNull() {
                return this.IsNull(this.tableCRMCustomerView1.PayMethodColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayMethodNull() {
                this[this.tableCRMCustomerView1.PayMethodColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditTermNull() {
                return this.IsNull(this.tableCRMCustomerView1.CreditTermColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditTermNull() {
                this[this.tableCRMCustomerView1.CreditTermColumn] = System.Convert.DBNull;
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CRMContactView1Row : System.Data.DataRow {
            private CRMContactView1DataTable tableCRMContactView1;
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CRMContactView1Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCRMContactView1 = ((CRMContactView1DataTable)(this.Table));
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddrID {
                get {
                    return ((int)(this[this.tableCRMContactView1.AddrIDColumn]));
                }
                set {
                    this[this.tableCRMContactView1.AddrIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Name\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.NameColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.FirstNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FirstName\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.FirstNameColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.DescriptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Description\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.DescriptionColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Address1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address1\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Address1Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Address2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address2\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Address2Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZIP {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.ZIPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ZIP\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.ZIPColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.CityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'City\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.CityColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactType {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.ContactTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ContactType\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.ContactTypeColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EntityYN {
                get {
                    try {
                        return ((bool)(this[this.tableCRMContactView1.EntityYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EntityYN\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.EntityYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool BankYN {
                get {
                    try {
                        return ((bool)(this[this.tableCRMContactView1.BankYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BankYN\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.BankYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EmployeeYN {
                get {
                    try {
                        return ((bool)(this[this.tableCRMContactView1.EmployeeYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EmployeeYN\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.EmployeeYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CustomerYN {
                get {
                    try {
                        return ((bool)(this[this.tableCRMContactView1.CustomerYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CustomerYN\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.CustomerYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SupplierYN {
                get {
                    try {
                        return ((bool)(this[this.tableCRMContactView1.SupplierYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SupplierYN\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.SupplierYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Lang {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.LangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Lang\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.LangColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Phone1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Phone1\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Phone1Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone2 {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Phone2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Phone2\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Phone2Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone3 {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Phone3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Phone3\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Phone3Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax1 {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Fax1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Fax1\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Fax1Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax2 {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Fax2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Fax2\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Fax2Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax3 {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Fax3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Fax3\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Fax3Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMail1 {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.EMail1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMail1\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.EMail1Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMail2 {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.EMail2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMail2\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.EMail2Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMail3 {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.EMail3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMail3\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.EMail3Column] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WebSite {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.WebSiteColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'WebSite\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.WebSiteColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmployeeID {
                get {
                    try {
                        return ((int)(this[this.tableCRMContactView1.EmployeeIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EmployeeID\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.EmployeeIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Employee_Startdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCRMContactView1.Employee_StartdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Employee_Startdate\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Employee_StartdateColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Employee_EndDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCRMContactView1.Employee_EndDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Employee_EndDate\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Employee_EndDateColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Employee_DepartmentID {
                get {
                    try {
                        return ((int)(this[this.tableCRMContactView1.Employee_DepartmentIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Employee_DepartmentID\' in table \'CRMContactView1\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Employee_DepartmentIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.TitleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Title\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.TitleColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.GenderColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Gender\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.GenderColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobTitle {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.JobTitleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'JobTitle\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.JobTitleColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manager_FirstName {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Manager_FirstNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manager_FirstName\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Manager_FirstNameColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manager_LastName {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Manager_LastNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manager_LastName\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Manager_LastNameColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manager_Phone {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Manager_PhoneColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manager_Phone\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Manager_PhoneColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manager_Fax {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Manager_FaxColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manager_Fax\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Manager_FaxColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manager_EMail {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Manager_EMailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manager_EMail\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Manager_EMailColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Manager_WebSite {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Manager_WebSiteColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Manager_WebSite\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Manager_WebSiteColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Assistannt_FirstName {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Assistannt_FirstNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Assistannt_FirstName\' in table \'CRMContactView1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Assistannt_FirstNameColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Assistannt_LastName {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Assistannt_LastNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Assistannt_LastName\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Assistannt_LastNameColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Assistannt_Phone {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Assistannt_PhoneColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Assistannt_Phone\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Assistannt_PhoneColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Assistannt_Fax {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Assistannt_FaxColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Assistannt_Fax\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Assistannt_FaxColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Assistannt_EMail {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Assistannt_EMailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Assistannt_EMail\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Assistannt_EMailColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Assistannt_WebSite {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Assistannt_WebSiteColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Assistannt_WebSite\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Assistannt_WebSiteColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company_Name {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Company_NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Company_Name\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Company_NameColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company_City {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Company_CityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Company_City\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Company_CityColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company_Country {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Company_CountryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Company_Country\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Company_CountryColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company_Phone {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Company_PhoneColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Company_Phone\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Company_PhoneColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company_Fax {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Company_FaxColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Company_Fax\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Company_FaxColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company_EMail {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Company_EMailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Company_EMail\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Company_EMailColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company_WebSite {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.Company_WebSiteColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Company_WebSite\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.Company_WebSiteColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EntityID {
                get {
                    try {
                        return ((int)(this[this.tableCRMContactView1.EntityIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EntityID\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.EntityIDColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PersonYN {
                get {
                    try {
                        return ((int)(this[this.tableCRMContactView1.PersonYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PersonYN\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.PersonYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LocYN {
                get {
                    try {
                        return ((bool)(this[this.tableCRMContactView1.LocYNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LocYN\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.LocYNColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountryCode {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.CountryCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CountryCode\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.CountryCodeColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CtryEUCode {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.CtryEUCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CtryEUCode\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.CtryEUCodeColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CtryIntrastatCode {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.CtryIntrastatCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CtryIntrastatCode\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.CtryIntrastatCodeColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddrFormat {
                get {
                    try {
                        return ((int)(this[this.tableCRMContactView1.AddrFormatColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AddrFormat\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.AddrFormatColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddrContactFormat {
                get {
                    try {
                        return ((int)(this[this.tableCRMContactView1.AddrContactFormatColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AddrContactFormat\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.AddrContactFormatColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CtryISOCode {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.CtryISOCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CtryISOCode\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.CtryISOCodeColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddrFormatDesc {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.AddrFormatDescColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AddrFormatDesc\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.AddrFormatDescColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddrContactFormatDesc {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.AddrContactFormatDescColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AddrContactFormatDesc\' in table \'CRMContactView1\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.AddrContactFormatDescColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Region {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.RegionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Region\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.RegionColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.CountryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Country\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.CountryColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullNameFirstName {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.FullNameFirstNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FullNameFirstName\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.FullNameFirstNameColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullFirstNameName {
                get {
                    try {
                        return ((string)(this[this.tableCRMContactView1.FullFirstNameNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FullFirstNameName\' in table \'CRMContactView1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCRMContactView1.FullFirstNameNameColumn] = value;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableCRMContactView1.NameColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableCRMContactView1.NameColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableCRMContactView1.FirstNameColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tableCRMContactView1.FirstNameColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableCRMContactView1.DescriptionColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableCRMContactView1.DescriptionColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableCRMContactView1.Address1Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableCRMContactView1.Address1Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableCRMContactView1.Address2Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableCRMContactView1.Address2Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZIPNull() {
                return this.IsNull(this.tableCRMContactView1.ZIPColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZIPNull() {
                this[this.tableCRMContactView1.ZIPColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableCRMContactView1.CityColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableCRMContactView1.CityColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactTypeNull() {
                return this.IsNull(this.tableCRMContactView1.ContactTypeColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactTypeNull() {
                this[this.tableCRMContactView1.ContactTypeColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntityYNNull() {
                return this.IsNull(this.tableCRMContactView1.EntityYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntityYNNull() {
                this[this.tableCRMContactView1.EntityYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankYNNull() {
                return this.IsNull(this.tableCRMContactView1.BankYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankYNNull() {
                this[this.tableCRMContactView1.BankYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeYNNull() {
                return this.IsNull(this.tableCRMContactView1.EmployeeYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeYNNull() {
                this[this.tableCRMContactView1.EmployeeYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerYNNull() {
                return this.IsNull(this.tableCRMContactView1.CustomerYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerYNNull() {
                this[this.tableCRMContactView1.CustomerYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierYNNull() {
                return this.IsNull(this.tableCRMContactView1.SupplierYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierYNNull() {
                this[this.tableCRMContactView1.SupplierYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLangNull() {
                return this.IsNull(this.tableCRMContactView1.LangColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLangNull() {
                this[this.tableCRMContactView1.LangColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableCRMContactView1.Phone1Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableCRMContactView1.Phone1Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone2Null() {
                return this.IsNull(this.tableCRMContactView1.Phone2Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone2Null() {
                this[this.tableCRMContactView1.Phone2Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone3Null() {
                return this.IsNull(this.tableCRMContactView1.Phone3Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone3Null() {
                this[this.tableCRMContactView1.Phone3Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFax1Null() {
                return this.IsNull(this.tableCRMContactView1.Fax1Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFax1Null() {
                this[this.tableCRMContactView1.Fax1Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFax2Null() {
                return this.IsNull(this.tableCRMContactView1.Fax2Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFax2Null() {
                this[this.tableCRMContactView1.Fax2Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFax3Null() {
                return this.IsNull(this.tableCRMContactView1.Fax3Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFax3Null() {
                this[this.tableCRMContactView1.Fax3Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMail1Null() {
                return this.IsNull(this.tableCRMContactView1.EMail1Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMail1Null() {
                this[this.tableCRMContactView1.EMail1Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMail2Null() {
                return this.IsNull(this.tableCRMContactView1.EMail2Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMail2Null() {
                this[this.tableCRMContactView1.EMail2Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMail3Null() {
                return this.IsNull(this.tableCRMContactView1.EMail3Column);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMail3Null() {
                this[this.tableCRMContactView1.EMail3Column] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWebSiteNull() {
                return this.IsNull(this.tableCRMContactView1.WebSiteColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWebSiteNull() {
                this[this.tableCRMContactView1.WebSiteColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeIDNull() {
                return this.IsNull(this.tableCRMContactView1.EmployeeIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeIDNull() {
                this[this.tableCRMContactView1.EmployeeIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployee_StartdateNull() {
                return this.IsNull(this.tableCRMContactView1.Employee_StartdateColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployee_StartdateNull() {
                this[this.tableCRMContactView1.Employee_StartdateColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployee_EndDateNull() {
                return this.IsNull(this.tableCRMContactView1.Employee_EndDateColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployee_EndDateNull() {
                this[this.tableCRMContactView1.Employee_EndDateColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployee_DepartmentIDNull() {
                return this.IsNull(this.tableCRMContactView1.Employee_DepartmentIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployee_DepartmentIDNull() {
                this[this.tableCRMContactView1.Employee_DepartmentIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitleNull() {
                return this.IsNull(this.tableCRMContactView1.TitleColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitleNull() {
                this[this.tableCRMContactView1.TitleColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableCRMContactView1.GenderColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableCRMContactView1.GenderColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobTitleNull() {
                return this.IsNull(this.tableCRMContactView1.JobTitleColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobTitleNull() {
                this[this.tableCRMContactView1.JobTitleColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManager_FirstNameNull() {
                return this.IsNull(this.tableCRMContactView1.Manager_FirstNameColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManager_FirstNameNull() {
                this[this.tableCRMContactView1.Manager_FirstNameColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManager_LastNameNull() {
                return this.IsNull(this.tableCRMContactView1.Manager_LastNameColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManager_LastNameNull() {
                this[this.tableCRMContactView1.Manager_LastNameColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManager_PhoneNull() {
                return this.IsNull(this.tableCRMContactView1.Manager_PhoneColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManager_PhoneNull() {
                this[this.tableCRMContactView1.Manager_PhoneColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManager_FaxNull() {
                return this.IsNull(this.tableCRMContactView1.Manager_FaxColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManager_FaxNull() {
                this[this.tableCRMContactView1.Manager_FaxColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManager_EMailNull() {
                return this.IsNull(this.tableCRMContactView1.Manager_EMailColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManager_EMailNull() {
                this[this.tableCRMContactView1.Manager_EMailColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManager_WebSiteNull() {
                return this.IsNull(this.tableCRMContactView1.Manager_WebSiteColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManager_WebSiteNull() {
                this[this.tableCRMContactView1.Manager_WebSiteColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssistannt_FirstNameNull() {
                return this.IsNull(this.tableCRMContactView1.Assistannt_FirstNameColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssistannt_FirstNameNull() {
                this[this.tableCRMContactView1.Assistannt_FirstNameColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssistannt_LastNameNull() {
                return this.IsNull(this.tableCRMContactView1.Assistannt_LastNameColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssistannt_LastNameNull() {
                this[this.tableCRMContactView1.Assistannt_LastNameColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssistannt_PhoneNull() {
                return this.IsNull(this.tableCRMContactView1.Assistannt_PhoneColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssistannt_PhoneNull() {
                this[this.tableCRMContactView1.Assistannt_PhoneColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssistannt_FaxNull() {
                return this.IsNull(this.tableCRMContactView1.Assistannt_FaxColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssistannt_FaxNull() {
                this[this.tableCRMContactView1.Assistannt_FaxColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssistannt_EMailNull() {
                return this.IsNull(this.tableCRMContactView1.Assistannt_EMailColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssistannt_EMailNull() {
                this[this.tableCRMContactView1.Assistannt_EMailColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssistannt_WebSiteNull() {
                return this.IsNull(this.tableCRMContactView1.Assistannt_WebSiteColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssistannt_WebSiteNull() {
                this[this.tableCRMContactView1.Assistannt_WebSiteColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_NameNull() {
                return this.IsNull(this.tableCRMContactView1.Company_NameColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_NameNull() {
                this[this.tableCRMContactView1.Company_NameColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_CityNull() {
                return this.IsNull(this.tableCRMContactView1.Company_CityColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_CityNull() {
                this[this.tableCRMContactView1.Company_CityColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_CountryNull() {
                return this.IsNull(this.tableCRMContactView1.Company_CountryColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_CountryNull() {
                this[this.tableCRMContactView1.Company_CountryColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_PhoneNull() {
                return this.IsNull(this.tableCRMContactView1.Company_PhoneColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_PhoneNull() {
                this[this.tableCRMContactView1.Company_PhoneColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_FaxNull() {
                return this.IsNull(this.tableCRMContactView1.Company_FaxColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_FaxNull() {
                this[this.tableCRMContactView1.Company_FaxColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_EMailNull() {
                return this.IsNull(this.tableCRMContactView1.Company_EMailColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_EMailNull() {
                this[this.tableCRMContactView1.Company_EMailColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_WebSiteNull() {
                return this.IsNull(this.tableCRMContactView1.Company_WebSiteColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_WebSiteNull() {
                this[this.tableCRMContactView1.Company_WebSiteColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntityIDNull() {
                return this.IsNull(this.tableCRMContactView1.EntityIDColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntityIDNull() {
                this[this.tableCRMContactView1.EntityIDColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonYNNull() {
                return this.IsNull(this.tableCRMContactView1.PersonYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonYNNull() {
                this[this.tableCRMContactView1.PersonYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocYNNull() {
                return this.IsNull(this.tableCRMContactView1.LocYNColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocYNNull() {
                this[this.tableCRMContactView1.LocYNColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryCodeNull() {
                return this.IsNull(this.tableCRMContactView1.CountryCodeColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryCodeNull() {
                this[this.tableCRMContactView1.CountryCodeColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCtryEUCodeNull() {
                return this.IsNull(this.tableCRMContactView1.CtryEUCodeColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCtryEUCodeNull() {
                this[this.tableCRMContactView1.CtryEUCodeColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCtryIntrastatCodeNull() {
                return this.IsNull(this.tableCRMContactView1.CtryIntrastatCodeColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCtryIntrastatCodeNull() {
                this[this.tableCRMContactView1.CtryIntrastatCodeColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddrFormatNull() {
                return this.IsNull(this.tableCRMContactView1.AddrFormatColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddrFormatNull() {
                this[this.tableCRMContactView1.AddrFormatColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddrContactFormatNull() {
                return this.IsNull(this.tableCRMContactView1.AddrContactFormatColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddrContactFormatNull() {
                this[this.tableCRMContactView1.AddrContactFormatColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCtryISOCodeNull() {
                return this.IsNull(this.tableCRMContactView1.CtryISOCodeColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCtryISOCodeNull() {
                this[this.tableCRMContactView1.CtryISOCodeColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddrFormatDescNull() {
                return this.IsNull(this.tableCRMContactView1.AddrFormatDescColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddrFormatDescNull() {
                this[this.tableCRMContactView1.AddrFormatDescColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddrContactFormatDescNull() {
                return this.IsNull(this.tableCRMContactView1.AddrContactFormatDescColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddrContactFormatDescNull() {
                this[this.tableCRMContactView1.AddrContactFormatDescColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_RegionNull() {
                return this.IsNull(this.tableCRMContactView1.RegionColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_RegionNull() {
                this[this.tableCRMContactView1.RegionColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tableCRMContactView1.CountryColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tableCRMContactView1.CountryColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullNameFirstNameNull() {
                return this.IsNull(this.tableCRMContactView1.FullNameFirstNameColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullNameFirstNameNull() {
                this[this.tableCRMContactView1.FullNameFirstNameColumn] = System.Convert.DBNull;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullFirstNameNameNull() {
                return this.IsNull(this.tableCRMContactView1.FullFirstNameNameColumn);
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullFirstNameNameNull() {
                this[this.tableCRMContactView1.FullFirstNameNameColumn] = System.Convert.DBNull;
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GeneralAddressRowChangeEvent : System.EventArgs {
            private GeneralAddressRow eventRow;
            private System.Data.DataRowAction eventAction;
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralAddressRowChangeEvent(GeneralAddressRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GeneralAddressRow Row {
                get {
                    return this.eventRow;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CRMCustomerView1RowChangeEvent : System.EventArgs {
            private CRMCustomerView1Row eventRow;
            private System.Data.DataRowAction eventAction;
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRMCustomerView1RowChangeEvent(CRMCustomerView1Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRMCustomerView1Row Row {
                get {
                    return this.eventRow;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CRMContactView1RowChangeEvent : System.EventArgs {
            private CRMContactView1Row eventRow;
            private System.Data.DataRowAction eventAction;
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRMContactView1RowChangeEvent(CRMContactView1Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CRMContactView1Row Row {
                get {
                    return this.eventRow;
                }
            }
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
