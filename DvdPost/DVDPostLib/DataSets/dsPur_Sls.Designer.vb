'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5446
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsPur_Sls"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsPur_Sls
    Inherits Global.System.Data.DataSet
    
    Private tablePS_Ana As PS_AnaDataTable
    
    Private tablecustomers As customersDataTable
    
    Private tableproducts As productsDataTable
    
    Private tablewishlist As wishlistDataTable
    
    Private tableproducts_dvd As products_dvdDataTable
    
    Private tabletmp1 As tmp1DataTable
    
    Private tableproducts_undertitles_View1 As products_undertitles_View1DataTable
    
    Private tableproducts_languages_View1 As products_languages_View1DataTable
    
    Private tableVIEW_Orders_Ana As VIEW_Orders_AnaDataTable
    
    Private tableVIEW_discount_ana As VIEW_discount_anaDataTable
    
    Private tablediscount_code As discount_codeDataTable
    
    Private tableVIEW_FillCustForMail As VIEW_FillCustForMailDataTable
    
    Private tableabo As aboDataTable
    
    Private tableVIEW_discount_ana1 As VIEW_discount_ana1DataTable
    
    Private tableproducts_browse As products_browseDataTable
    
    Private tableVIEW_Orders_Status_Hist As VIEW_Orders_Status_HistDataTable
    
    Private tableshopping_orders_status As shopping_orders_statusDataTable
    
    Private tableshopping_orders_view1 As shopping_orders_view1DataTable
    
    Private tablesuggestions As suggestionsDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PS_Ana")) Is Nothing) Then
                MyBase.Tables.Add(New PS_AnaDataTable(ds.Tables("PS_Ana")))
            End If
            If (Not (ds.Tables("customers")) Is Nothing) Then
                MyBase.Tables.Add(New customersDataTable(ds.Tables("customers")))
            End If
            If (Not (ds.Tables("products")) Is Nothing) Then
                MyBase.Tables.Add(New productsDataTable(ds.Tables("products")))
            End If
            If (Not (ds.Tables("wishlist")) Is Nothing) Then
                MyBase.Tables.Add(New wishlistDataTable(ds.Tables("wishlist")))
            End If
            If (Not (ds.Tables("products_dvd")) Is Nothing) Then
                MyBase.Tables.Add(New products_dvdDataTable(ds.Tables("products_dvd")))
            End If
            If (Not (ds.Tables("tmp1")) Is Nothing) Then
                MyBase.Tables.Add(New tmp1DataTable(ds.Tables("tmp1")))
            End If
            If (Not (ds.Tables("products_undertitles_View1")) Is Nothing) Then
                MyBase.Tables.Add(New products_undertitles_View1DataTable(ds.Tables("products_undertitles_View1")))
            End If
            If (Not (ds.Tables("products_languages_View1")) Is Nothing) Then
                MyBase.Tables.Add(New products_languages_View1DataTable(ds.Tables("products_languages_View1")))
            End If
            If (Not (ds.Tables("VIEW_Orders_Ana")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_Orders_AnaDataTable(ds.Tables("VIEW_Orders_Ana")))
            End If
            If (Not (ds.Tables("VIEW_discount_ana")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_discount_anaDataTable(ds.Tables("VIEW_discount_ana")))
            End If
            If (Not (ds.Tables("discount_code")) Is Nothing) Then
                MyBase.Tables.Add(New discount_codeDataTable(ds.Tables("discount_code")))
            End If
            If (Not (ds.Tables("VIEW_FillCustForMail")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_FillCustForMailDataTable(ds.Tables("VIEW_FillCustForMail")))
            End If
            If (Not (ds.Tables("abo")) Is Nothing) Then
                MyBase.Tables.Add(New aboDataTable(ds.Tables("abo")))
            End If
            If (Not (ds.Tables("VIEW_discount_ana1")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_discount_ana1DataTable(ds.Tables("VIEW_discount_ana1")))
            End If
            If (Not (ds.Tables("products_browse")) Is Nothing) Then
                MyBase.Tables.Add(New products_browseDataTable(ds.Tables("products_browse")))
            End If
            If (Not (ds.Tables("VIEW_Orders_Status_Hist")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_Orders_Status_HistDataTable(ds.Tables("VIEW_Orders_Status_Hist")))
            End If
            If (Not (ds.Tables("shopping_orders_status")) Is Nothing) Then
                MyBase.Tables.Add(New shopping_orders_statusDataTable(ds.Tables("shopping_orders_status")))
            End If
            If (Not (ds.Tables("shopping_orders_view1")) Is Nothing) Then
                MyBase.Tables.Add(New shopping_orders_view1DataTable(ds.Tables("shopping_orders_view1")))
            End If
            If (Not (ds.Tables("suggestions")) Is Nothing) Then
                MyBase.Tables.Add(New suggestionsDataTable(ds.Tables("suggestions")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PS_Ana() As PS_AnaDataTable
        Get
            Return Me.tablePS_Ana
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property customers() As customersDataTable
        Get
            Return Me.tablecustomers
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property products() As productsDataTable
        Get
            Return Me.tableproducts
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property wishlist() As wishlistDataTable
        Get
            Return Me.tablewishlist
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property products_dvd() As products_dvdDataTable
        Get
            Return Me.tableproducts_dvd
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tmp1() As tmp1DataTable
        Get
            Return Me.tabletmp1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property products_undertitles_View1() As products_undertitles_View1DataTable
        Get
            Return Me.tableproducts_undertitles_View1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property products_languages_View1() As products_languages_View1DataTable
        Get
            Return Me.tableproducts_languages_View1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_Orders_Ana() As VIEW_Orders_AnaDataTable
        Get
            Return Me.tableVIEW_Orders_Ana
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_discount_ana() As VIEW_discount_anaDataTable
        Get
            Return Me.tableVIEW_discount_ana
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property discount_code() As discount_codeDataTable
        Get
            Return Me.tablediscount_code
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_FillCustForMail() As VIEW_FillCustForMailDataTable
        Get
            Return Me.tableVIEW_FillCustForMail
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property abo() As aboDataTable
        Get
            Return Me.tableabo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_discount_ana1() As VIEW_discount_ana1DataTable
        Get
            Return Me.tableVIEW_discount_ana1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property products_browse() As products_browseDataTable
        Get
            Return Me.tableproducts_browse
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_Orders_Status_Hist() As VIEW_Orders_Status_HistDataTable
        Get
            Return Me.tableVIEW_Orders_Status_Hist
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property shopping_orders_status() As shopping_orders_statusDataTable
        Get
            Return Me.tableshopping_orders_status
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property shopping_orders_view1() As shopping_orders_view1DataTable
        Get
            Return Me.tableshopping_orders_view1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property suggestions() As suggestionsDataTable
        Get
            Return Me.tablesuggestions
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsPur_Sls = CType(MyBase.Clone,dsPur_Sls)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("PS_Ana")) Is Nothing) Then
                MyBase.Tables.Add(New PS_AnaDataTable(ds.Tables("PS_Ana")))
            End If
            If (Not (ds.Tables("customers")) Is Nothing) Then
                MyBase.Tables.Add(New customersDataTable(ds.Tables("customers")))
            End If
            If (Not (ds.Tables("products")) Is Nothing) Then
                MyBase.Tables.Add(New productsDataTable(ds.Tables("products")))
            End If
            If (Not (ds.Tables("wishlist")) Is Nothing) Then
                MyBase.Tables.Add(New wishlistDataTable(ds.Tables("wishlist")))
            End If
            If (Not (ds.Tables("products_dvd")) Is Nothing) Then
                MyBase.Tables.Add(New products_dvdDataTable(ds.Tables("products_dvd")))
            End If
            If (Not (ds.Tables("tmp1")) Is Nothing) Then
                MyBase.Tables.Add(New tmp1DataTable(ds.Tables("tmp1")))
            End If
            If (Not (ds.Tables("products_undertitles_View1")) Is Nothing) Then
                MyBase.Tables.Add(New products_undertitles_View1DataTable(ds.Tables("products_undertitles_View1")))
            End If
            If (Not (ds.Tables("products_languages_View1")) Is Nothing) Then
                MyBase.Tables.Add(New products_languages_View1DataTable(ds.Tables("products_languages_View1")))
            End If
            If (Not (ds.Tables("VIEW_Orders_Ana")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_Orders_AnaDataTable(ds.Tables("VIEW_Orders_Ana")))
            End If
            If (Not (ds.Tables("VIEW_discount_ana")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_discount_anaDataTable(ds.Tables("VIEW_discount_ana")))
            End If
            If (Not (ds.Tables("discount_code")) Is Nothing) Then
                MyBase.Tables.Add(New discount_codeDataTable(ds.Tables("discount_code")))
            End If
            If (Not (ds.Tables("VIEW_FillCustForMail")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_FillCustForMailDataTable(ds.Tables("VIEW_FillCustForMail")))
            End If
            If (Not (ds.Tables("abo")) Is Nothing) Then
                MyBase.Tables.Add(New aboDataTable(ds.Tables("abo")))
            End If
            If (Not (ds.Tables("VIEW_discount_ana1")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_discount_ana1DataTable(ds.Tables("VIEW_discount_ana1")))
            End If
            If (Not (ds.Tables("products_browse")) Is Nothing) Then
                MyBase.Tables.Add(New products_browseDataTable(ds.Tables("products_browse")))
            End If
            If (Not (ds.Tables("VIEW_Orders_Status_Hist")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_Orders_Status_HistDataTable(ds.Tables("VIEW_Orders_Status_Hist")))
            End If
            If (Not (ds.Tables("shopping_orders_status")) Is Nothing) Then
                MyBase.Tables.Add(New shopping_orders_statusDataTable(ds.Tables("shopping_orders_status")))
            End If
            If (Not (ds.Tables("shopping_orders_view1")) Is Nothing) Then
                MyBase.Tables.Add(New shopping_orders_view1DataTable(ds.Tables("shopping_orders_view1")))
            End If
            If (Not (ds.Tables("suggestions")) Is Nothing) Then
                MyBase.Tables.Add(New suggestionsDataTable(ds.Tables("suggestions")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePS_Ana = CType(MyBase.Tables("PS_Ana"),PS_AnaDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePS_Ana) Is Nothing) Then
                Me.tablePS_Ana.InitVars
            End If
        End If
        Me.tablecustomers = CType(MyBase.Tables("customers"),customersDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustomers) Is Nothing) Then
                Me.tablecustomers.InitVars
            End If
        End If
        Me.tableproducts = CType(MyBase.Tables("products"),productsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproducts) Is Nothing) Then
                Me.tableproducts.InitVars
            End If
        End If
        Me.tablewishlist = CType(MyBase.Tables("wishlist"),wishlistDataTable)
        If (initTable = true) Then
            If (Not (Me.tablewishlist) Is Nothing) Then
                Me.tablewishlist.InitVars
            End If
        End If
        Me.tableproducts_dvd = CType(MyBase.Tables("products_dvd"),products_dvdDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproducts_dvd) Is Nothing) Then
                Me.tableproducts_dvd.InitVars
            End If
        End If
        Me.tabletmp1 = CType(MyBase.Tables("tmp1"),tmp1DataTable)
        If (initTable = true) Then
            If (Not (Me.tabletmp1) Is Nothing) Then
                Me.tabletmp1.InitVars
            End If
        End If
        Me.tableproducts_undertitles_View1 = CType(MyBase.Tables("products_undertitles_View1"),products_undertitles_View1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableproducts_undertitles_View1) Is Nothing) Then
                Me.tableproducts_undertitles_View1.InitVars
            End If
        End If
        Me.tableproducts_languages_View1 = CType(MyBase.Tables("products_languages_View1"),products_languages_View1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableproducts_languages_View1) Is Nothing) Then
                Me.tableproducts_languages_View1.InitVars
            End If
        End If
        Me.tableVIEW_Orders_Ana = CType(MyBase.Tables("VIEW_Orders_Ana"),VIEW_Orders_AnaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_Orders_Ana) Is Nothing) Then
                Me.tableVIEW_Orders_Ana.InitVars
            End If
        End If
        Me.tableVIEW_discount_ana = CType(MyBase.Tables("VIEW_discount_ana"),VIEW_discount_anaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_discount_ana) Is Nothing) Then
                Me.tableVIEW_discount_ana.InitVars
            End If
        End If
        Me.tablediscount_code = CType(MyBase.Tables("discount_code"),discount_codeDataTable)
        If (initTable = true) Then
            If (Not (Me.tablediscount_code) Is Nothing) Then
                Me.tablediscount_code.InitVars
            End If
        End If
        Me.tableVIEW_FillCustForMail = CType(MyBase.Tables("VIEW_FillCustForMail"),VIEW_FillCustForMailDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_FillCustForMail) Is Nothing) Then
                Me.tableVIEW_FillCustForMail.InitVars
            End If
        End If
        Me.tableabo = CType(MyBase.Tables("abo"),aboDataTable)
        If (initTable = true) Then
            If (Not (Me.tableabo) Is Nothing) Then
                Me.tableabo.InitVars
            End If
        End If
        Me.tableVIEW_discount_ana1 = CType(MyBase.Tables("VIEW_discount_ana1"),VIEW_discount_ana1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_discount_ana1) Is Nothing) Then
                Me.tableVIEW_discount_ana1.InitVars
            End If
        End If
        Me.tableproducts_browse = CType(MyBase.Tables("products_browse"),products_browseDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproducts_browse) Is Nothing) Then
                Me.tableproducts_browse.InitVars
            End If
        End If
        Me.tableVIEW_Orders_Status_Hist = CType(MyBase.Tables("VIEW_Orders_Status_Hist"),VIEW_Orders_Status_HistDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_Orders_Status_Hist) Is Nothing) Then
                Me.tableVIEW_Orders_Status_Hist.InitVars
            End If
        End If
        Me.tableshopping_orders_status = CType(MyBase.Tables("shopping_orders_status"),shopping_orders_statusDataTable)
        If (initTable = true) Then
            If (Not (Me.tableshopping_orders_status) Is Nothing) Then
                Me.tableshopping_orders_status.InitVars
            End If
        End If
        Me.tableshopping_orders_view1 = CType(MyBase.Tables("shopping_orders_view1"),shopping_orders_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableshopping_orders_view1) Is Nothing) Then
                Me.tableshopping_orders_view1.InitVars
            End If
        End If
        Me.tablesuggestions = CType(MyBase.Tables("suggestions"),suggestionsDataTable)
        If (initTable = true) Then
            If (Not (Me.tablesuggestions) Is Nothing) Then
                Me.tablesuggestions.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsPur_Sls"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsPur_Sls.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePS_Ana = New PS_AnaDataTable
        MyBase.Tables.Add(Me.tablePS_Ana)
        Me.tablecustomers = New customersDataTable
        MyBase.Tables.Add(Me.tablecustomers)
        Me.tableproducts = New productsDataTable
        MyBase.Tables.Add(Me.tableproducts)
        Me.tablewishlist = New wishlistDataTable
        MyBase.Tables.Add(Me.tablewishlist)
        Me.tableproducts_dvd = New products_dvdDataTable
        MyBase.Tables.Add(Me.tableproducts_dvd)
        Me.tabletmp1 = New tmp1DataTable
        MyBase.Tables.Add(Me.tabletmp1)
        Me.tableproducts_undertitles_View1 = New products_undertitles_View1DataTable
        MyBase.Tables.Add(Me.tableproducts_undertitles_View1)
        Me.tableproducts_languages_View1 = New products_languages_View1DataTable
        MyBase.Tables.Add(Me.tableproducts_languages_View1)
        Me.tableVIEW_Orders_Ana = New VIEW_Orders_AnaDataTable
        MyBase.Tables.Add(Me.tableVIEW_Orders_Ana)
        Me.tableVIEW_discount_ana = New VIEW_discount_anaDataTable
        MyBase.Tables.Add(Me.tableVIEW_discount_ana)
        Me.tablediscount_code = New discount_codeDataTable
        MyBase.Tables.Add(Me.tablediscount_code)
        Me.tableVIEW_FillCustForMail = New VIEW_FillCustForMailDataTable
        MyBase.Tables.Add(Me.tableVIEW_FillCustForMail)
        Me.tableabo = New aboDataTable
        MyBase.Tables.Add(Me.tableabo)
        Me.tableVIEW_discount_ana1 = New VIEW_discount_ana1DataTable
        MyBase.Tables.Add(Me.tableVIEW_discount_ana1)
        Me.tableproducts_browse = New products_browseDataTable
        MyBase.Tables.Add(Me.tableproducts_browse)
        Me.tableVIEW_Orders_Status_Hist = New VIEW_Orders_Status_HistDataTable
        MyBase.Tables.Add(Me.tableVIEW_Orders_Status_Hist)
        Me.tableshopping_orders_status = New shopping_orders_statusDataTable
        MyBase.Tables.Add(Me.tableshopping_orders_status)
        Me.tableshopping_orders_view1 = New shopping_orders_view1DataTable
        MyBase.Tables.Add(Me.tableshopping_orders_view1)
        Me.tablesuggestions = New suggestionsDataTable
        MyBase.Tables.Add(Me.tablesuggestions)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializePS_Ana() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustomers() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeproducts() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializewishlist() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeproducts_dvd() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetmp1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeproducts_undertitles_View1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeproducts_languages_View1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_Orders_Ana() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_discount_ana() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializediscount_code() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_FillCustForMail() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeabo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_discount_ana1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeproducts_browse() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeVIEW_Orders_Status_Hist() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeshopping_orders_status() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeshopping_orders_view1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializesuggestions() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsPur_Sls = New dsPur_Sls
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub PS_AnaRowChangeEventHandler(ByVal sender As Object, ByVal e As PS_AnaRowChangeEvent)
    
    Public Delegate Sub customersRowChangeEventHandler(ByVal sender As Object, ByVal e As customersRowChangeEvent)
    
    Public Delegate Sub productsRowChangeEventHandler(ByVal sender As Object, ByVal e As productsRowChangeEvent)
    
    Public Delegate Sub wishlistRowChangeEventHandler(ByVal sender As Object, ByVal e As wishlistRowChangeEvent)
    
    Public Delegate Sub products_dvdRowChangeEventHandler(ByVal sender As Object, ByVal e As products_dvdRowChangeEvent)
    
    Public Delegate Sub tmp1RowChangeEventHandler(ByVal sender As Object, ByVal e As tmp1RowChangeEvent)
    
    Public Delegate Sub products_undertitles_View1RowChangeEventHandler(ByVal sender As Object, ByVal e As products_undertitles_View1RowChangeEvent)
    
    Public Delegate Sub products_languages_View1RowChangeEventHandler(ByVal sender As Object, ByVal e As products_languages_View1RowChangeEvent)
    
    Public Delegate Sub VIEW_Orders_AnaRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_Orders_AnaRowChangeEvent)
    
    Public Delegate Sub VIEW_discount_anaRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_discount_anaRowChangeEvent)
    
    Public Delegate Sub discount_codeRowChangeEventHandler(ByVal sender As Object, ByVal e As discount_codeRowChangeEvent)
    
    Public Delegate Sub VIEW_FillCustForMailRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_FillCustForMailRowChangeEvent)
    
    Public Delegate Sub aboRowChangeEventHandler(ByVal sender As Object, ByVal e As aboRowChangeEvent)
    
    Public Delegate Sub VIEW_discount_ana1RowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_discount_ana1RowChangeEvent)
    
    Public Delegate Sub products_browseRowChangeEventHandler(ByVal sender As Object, ByVal e As products_browseRowChangeEvent)
    
    Public Delegate Sub VIEW_Orders_Status_HistRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_Orders_Status_HistRowChangeEvent)
    
    Public Delegate Sub shopping_orders_statusRowChangeEventHandler(ByVal sender As Object, ByVal e As shopping_orders_statusRowChangeEvent)
    
    Public Delegate Sub shopping_orders_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As shopping_orders_view1RowChangeEvent)
    
    Public Delegate Sub suggestionsRowChangeEventHandler(ByVal sender As Object, ByVal e As suggestionsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PS_AnaDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproduct_id As Global.System.Data.DataColumn
        
        Private columnw_q1 As Global.System.Data.DataColumn
        
        Private columnw_q2 As Global.System.Data.DataColumn
        
        Private columnw_q3 As Global.System.Data.DataColumn
        
        Private columnstock_qty As Global.System.Data.DataColumn
        
        Private columnp_price As Global.System.Data.DataColumn
        
        Private columns_price As Global.System.Data.DataColumn
        
        Private columnto_sale_qty As Global.System.Data.DataColumn
        
        Private columnto_purchase_qty As Global.System.Data.DataColumn
        
        Private columnproducts_title As Global.System.Data.DataColumn
        
        Private columnproducts_date_available As Global.System.Data.DataColumn
        
        Private columnfeeSharing As Global.System.Data.DataColumn
        
        Private columnw_mini1 As Global.System.Data.DataColumn
        
        Private columnw_mini2 As Global.System.Data.DataColumn
        
        Private columnw_mini3 As Global.System.Data.DataColumn
        
        Private columnstock_mini As Global.System.Data.DataColumn
        
        Private columnfeesharing_end As Global.System.Data.DataColumn
        
        Private columnw_q0 As Global.System.Data.DataColumn
        
        Private columnproducts_studio As Global.System.Data.DataColumn
        
        Private columnstudio_name As Global.System.Data.DataColumn
        
        Private columnlanguages As Global.System.Data.DataColumn
        
        Private columnSubTitles As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnimdb_id As Global.System.Data.DataColumn
        
        Private columnproducts_ordered As Global.System.Data.DataColumn
        
        Private columnproducts_public As Global.System.Data.DataColumn
        
        Private columnproducts_runtime As Global.System.Data.DataColumn
        
        Private columnproducts_year As Global.System.Data.DataColumn
        
        Private columnproducts_status As Global.System.Data.DataColumn
        
        Private columncinebel_id As Global.System.Data.DataColumn
        
        Private columnqty_flow As Global.System.Data.DataColumn
        
        Private columnproducts_dvd_status As Global.System.Data.DataColumn
        
        Private columnproducts_dvd_status_name As Global.System.Data.DataColumn
        
        Private columnproducts_series_number As Global.System.Data.DataColumn
        
        Private columnproducts_type As Global.System.Data.DataColumn
        
        Private columnmonthes_w1 As Global.System.Data.DataColumn
        
        Private columnproducts_sale_price As Global.System.Data.DataColumn
        
        Private columnstock_cover_qty As Global.System.Data.DataColumn
        
        Private columnin_the_bags As Global.System.Data.DataColumn
        
        Private columnin_the_bags_next As Global.System.Data.DataColumn
        
        Private columnin_cinema_now As Global.System.Data.DataColumn
        
        Private columnquantity_to_sale As Global.System.Data.DataColumn
        
        Private columnproducts_sale_date As Global.System.Data.DataColumn
        
        Private columnproducts_next As Global.System.Data.DataColumn
        
        Private columnproducts_media As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PS_Ana"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property product_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproduct_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property w_q1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnw_q1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property w_q2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnw_q2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property w_q3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnw_q3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property stock_qtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstock_qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property p_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnp_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property s_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columns_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property to_sale_qtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnto_sale_qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property to_purchase_qtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnto_purchase_qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_availableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_available
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feeSharingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeeSharing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property w_mini1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnw_mini1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property w_mini2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnw_mini2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property w_mini3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnw_mini3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property stock_miniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstock_mini
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_endColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_end
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property w_q0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnw_q0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_studioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_studio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property studio_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstudio_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property languagesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlanguages
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SubTitlesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTitles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imdb_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimdb_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_orderedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_ordered
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_publicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_public
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_runtimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_runtime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_yearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cinebel_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncinebel_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property qty_flowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnqty_flow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvd_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvd_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvd_status_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvd_status_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property monthes_w1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonthes_w1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_sale_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_sale_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property stock_cover_qtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstock_cover_qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_the_bagsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_the_bags
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_the_bags_nextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_the_bags_next
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_cinema_nowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_cinema_now
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quantity_to_saleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquantity_to_sale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_sale_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_sale_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_nextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_next
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_mediaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_media
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PS_AnaRow
            Get
                Return CType(Me.Rows(index),PS_AnaRow)
            End Get
        End Property
        
        Public Event PS_AnaRowChanging As PS_AnaRowChangeEventHandler
        
        Public Event PS_AnaRowChanged As PS_AnaRowChangeEventHandler
        
        Public Event PS_AnaRowDeleting As PS_AnaRowChangeEventHandler
        
        Public Event PS_AnaRowDeleted As PS_AnaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddPS_AnaRow(ByVal row As PS_AnaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddPS_AnaRow( _
                    ByVal product_id As Integer,  _
                    ByVal w_q1 As Integer,  _
                    ByVal w_q2 As Integer,  _
                    ByVal w_q3 As Integer,  _
                    ByVal stock_qty As Integer,  _
                    ByVal p_price As Decimal,  _
                    ByVal s_price As Decimal,  _
                    ByVal to_sale_qty As Integer,  _
                    ByVal to_purchase_qty As Integer,  _
                    ByVal products_title As String,  _
                    ByVal products_date_available As Date,  _
                    ByVal feeSharing As Long,  _
                    ByVal w_mini1 As Integer,  _
                    ByVal w_mini2 As Integer,  _
                    ByVal w_mini3 As Integer,  _
                    ByVal stock_mini As Integer,  _
                    ByVal feesharing_end As Date,  _
                    ByVal w_q0 As Integer,  _
                    ByVal products_studio As Integer,  _
                    ByVal studio_name As String,  _
                    ByVal languages As String,  _
                    ByVal SubTitles As String,  _
                    ByVal products_model As String,  _
                    ByVal imdb_id As Integer,  _
                    ByVal products_ordered As Integer,  _
                    ByVal products_public As Integer,  _
                    ByVal products_runtime As Integer,  _
                    ByVal products_year As Integer,  _
                    ByVal products_status As Integer,  _
                    ByVal cinebel_id As Integer,  _
                    ByVal qty_flow As Integer,  _
                    ByVal products_dvd_status As Integer,  _
                    ByVal products_dvd_status_name As String,  _
                    ByVal products_series_number As Integer,  _
                    ByVal products_type As String,  _
                    ByVal monthes_w1 As Integer,  _
                    ByVal products_sale_price As Double,  _
                    ByVal stock_cover_qty As Integer,  _
                    ByVal in_the_bags As Integer,  _
                    ByVal in_the_bags_next As Integer,  _
                    ByVal in_cinema_now As Integer,  _
                    ByVal quantity_to_sale As Integer,  _
                    ByVal products_sale_date As Date,  _
                    ByVal products_next As Integer,  _
                    ByVal products_media As String) As PS_AnaRow
            Dim rowPS_AnaRow As PS_AnaRow = CType(Me.NewRow,PS_AnaRow)
            Dim columnValuesArray() As Object = New Object() {product_id, w_q1, w_q2, w_q3, stock_qty, p_price, s_price, to_sale_qty, to_purchase_qty, products_title, products_date_available, feeSharing, w_mini1, w_mini2, w_mini3, stock_mini, feesharing_end, w_q0, products_studio, studio_name, languages, SubTitles, products_model, imdb_id, products_ordered, products_public, products_runtime, products_year, products_status, cinebel_id, qty_flow, products_dvd_status, products_dvd_status_name, products_series_number, products_type, monthes_w1, products_sale_price, stock_cover_qty, in_the_bags, in_the_bags_next, in_cinema_now, quantity_to_sale, products_sale_date, products_next, products_media}
            rowPS_AnaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPS_AnaRow)
            Return rowPS_AnaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproduct_id(ByVal product_id As Integer) As PS_AnaRow
            Return CType(Me.Rows.Find(New Object() {product_id}),PS_AnaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PS_AnaDataTable = CType(MyBase.Clone,PS_AnaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PS_AnaDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproduct_id = MyBase.Columns("product_id")
            Me.columnw_q1 = MyBase.Columns("w_q1")
            Me.columnw_q2 = MyBase.Columns("w_q2")
            Me.columnw_q3 = MyBase.Columns("w_q3")
            Me.columnstock_qty = MyBase.Columns("stock_qty")
            Me.columnp_price = MyBase.Columns("p_price")
            Me.columns_price = MyBase.Columns("s_price")
            Me.columnto_sale_qty = MyBase.Columns("to_sale_qty")
            Me.columnto_purchase_qty = MyBase.Columns("to_purchase_qty")
            Me.columnproducts_title = MyBase.Columns("products_title")
            Me.columnproducts_date_available = MyBase.Columns("products_date_available")
            Me.columnfeeSharing = MyBase.Columns("feeSharing")
            Me.columnw_mini1 = MyBase.Columns("w_mini1")
            Me.columnw_mini2 = MyBase.Columns("w_mini2")
            Me.columnw_mini3 = MyBase.Columns("w_mini3")
            Me.columnstock_mini = MyBase.Columns("stock_mini")
            Me.columnfeesharing_end = MyBase.Columns("feesharing_end")
            Me.columnw_q0 = MyBase.Columns("w_q0")
            Me.columnproducts_studio = MyBase.Columns("products_studio")
            Me.columnstudio_name = MyBase.Columns("studio_name")
            Me.columnlanguages = MyBase.Columns("languages")
            Me.columnSubTitles = MyBase.Columns("SubTitles")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnimdb_id = MyBase.Columns("imdb_id")
            Me.columnproducts_ordered = MyBase.Columns("products_ordered")
            Me.columnproducts_public = MyBase.Columns("products_public")
            Me.columnproducts_runtime = MyBase.Columns("products_runtime")
            Me.columnproducts_year = MyBase.Columns("products_year")
            Me.columnproducts_status = MyBase.Columns("products_status")
            Me.columncinebel_id = MyBase.Columns("cinebel_id")
            Me.columnqty_flow = MyBase.Columns("qty_flow")
            Me.columnproducts_dvd_status = MyBase.Columns("products_dvd_status")
            Me.columnproducts_dvd_status_name = MyBase.Columns("products_dvd_status_name")
            Me.columnproducts_series_number = MyBase.Columns("products_series_number")
            Me.columnproducts_type = MyBase.Columns("products_type")
            Me.columnmonthes_w1 = MyBase.Columns("monthes_w1")
            Me.columnproducts_sale_price = MyBase.Columns("products_sale_price")
            Me.columnstock_cover_qty = MyBase.Columns("stock_cover_qty")
            Me.columnin_the_bags = MyBase.Columns("in_the_bags")
            Me.columnin_the_bags_next = MyBase.Columns("in_the_bags_next")
            Me.columnin_cinema_now = MyBase.Columns("in_cinema_now")
            Me.columnquantity_to_sale = MyBase.Columns("quantity_to_sale")
            Me.columnproducts_sale_date = MyBase.Columns("products_sale_date")
            Me.columnproducts_next = MyBase.Columns("products_next")
            Me.columnproducts_media = MyBase.Columns("products_media")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproduct_id = New Global.System.Data.DataColumn("product_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproduct_id)
            Me.columnw_q1 = New Global.System.Data.DataColumn("w_q1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnw_q1)
            Me.columnw_q2 = New Global.System.Data.DataColumn("w_q2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnw_q2)
            Me.columnw_q3 = New Global.System.Data.DataColumn("w_q3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnw_q3)
            Me.columnstock_qty = New Global.System.Data.DataColumn("stock_qty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstock_qty)
            Me.columnp_price = New Global.System.Data.DataColumn("p_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnp_price)
            Me.columns_price = New Global.System.Data.DataColumn("s_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columns_price)
            Me.columnto_sale_qty = New Global.System.Data.DataColumn("to_sale_qty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnto_sale_qty)
            Me.columnto_purchase_qty = New Global.System.Data.DataColumn("to_purchase_qty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnto_purchase_qty)
            Me.columnproducts_title = New Global.System.Data.DataColumn("products_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_title)
            Me.columnproducts_date_available = New Global.System.Data.DataColumn("products_date_available", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_available)
            Me.columnfeeSharing = New Global.System.Data.DataColumn("feeSharing", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeeSharing)
            Me.columnw_mini1 = New Global.System.Data.DataColumn("w_mini1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnw_mini1)
            Me.columnw_mini2 = New Global.System.Data.DataColumn("w_mini2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnw_mini2)
            Me.columnw_mini3 = New Global.System.Data.DataColumn("w_mini3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnw_mini3)
            Me.columnstock_mini = New Global.System.Data.DataColumn("stock_mini", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstock_mini)
            Me.columnfeesharing_end = New Global.System.Data.DataColumn("feesharing_end", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_end)
            Me.columnw_q0 = New Global.System.Data.DataColumn("w_q0", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnw_q0)
            Me.columnproducts_studio = New Global.System.Data.DataColumn("products_studio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_studio)
            Me.columnstudio_name = New Global.System.Data.DataColumn("studio_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstudio_name)
            Me.columnlanguages = New Global.System.Data.DataColumn("languages", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanguages)
            Me.columnSubTitles = New Global.System.Data.DataColumn("SubTitles", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTitles)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnimdb_id = New Global.System.Data.DataColumn("imdb_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimdb_id)
            Me.columnproducts_ordered = New Global.System.Data.DataColumn("products_ordered", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_ordered)
            Me.columnproducts_public = New Global.System.Data.DataColumn("products_public", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_public)
            Me.columnproducts_runtime = New Global.System.Data.DataColumn("products_runtime", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_runtime)
            Me.columnproducts_year = New Global.System.Data.DataColumn("products_year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_year)
            Me.columnproducts_status = New Global.System.Data.DataColumn("products_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_status)
            Me.columncinebel_id = New Global.System.Data.DataColumn("cinebel_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncinebel_id)
            Me.columnqty_flow = New Global.System.Data.DataColumn("qty_flow", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnqty_flow)
            Me.columnproducts_dvd_status = New Global.System.Data.DataColumn("products_dvd_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvd_status)
            Me.columnproducts_dvd_status_name = New Global.System.Data.DataColumn("products_dvd_status_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvd_status_name)
            Me.columnproducts_series_number = New Global.System.Data.DataColumn("products_series_number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_number)
            Me.columnproducts_type = New Global.System.Data.DataColumn("products_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_type)
            Me.columnmonthes_w1 = New Global.System.Data.DataColumn("monthes_w1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonthes_w1)
            Me.columnproducts_sale_price = New Global.System.Data.DataColumn("products_sale_price", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_sale_price)
            Me.columnstock_cover_qty = New Global.System.Data.DataColumn("stock_cover_qty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstock_cover_qty)
            Me.columnin_the_bags = New Global.System.Data.DataColumn("in_the_bags", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_the_bags)
            Me.columnin_the_bags_next = New Global.System.Data.DataColumn("in_the_bags_next", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_the_bags_next)
            Me.columnin_cinema_now = New Global.System.Data.DataColumn("in_cinema_now", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_cinema_now)
            Me.columnquantity_to_sale = New Global.System.Data.DataColumn("quantity_to_sale", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquantity_to_sale)
            Me.columnproducts_sale_date = New Global.System.Data.DataColumn("products_sale_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_sale_date)
            Me.columnproducts_next = New Global.System.Data.DataColumn("products_next", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_next)
            Me.columnproducts_media = New Global.System.Data.DataColumn("products_media", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_media)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsPur_SlsKey10", New Global.System.Data.DataColumn() {Me.columnproduct_id}, true))
            Me.columnproduct_id.AllowDBNull = false
            Me.columnproduct_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewPS_AnaRow() As PS_AnaRow
            Return CType(Me.NewRow,PS_AnaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PS_AnaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PS_AnaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PS_AnaRowChangedEvent) Is Nothing) Then
                RaiseEvent PS_AnaRowChanged(Me, New PS_AnaRowChangeEvent(CType(e.Row,PS_AnaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PS_AnaRowChangingEvent) Is Nothing) Then
                RaiseEvent PS_AnaRowChanging(Me, New PS_AnaRowChangeEvent(CType(e.Row,PS_AnaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PS_AnaRowDeletedEvent) Is Nothing) Then
                RaiseEvent PS_AnaRowDeleted(Me, New PS_AnaRowChangeEvent(CType(e.Row,PS_AnaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PS_AnaRowDeletingEvent) Is Nothing) Then
                RaiseEvent PS_AnaRowDeleting(Me, New PS_AnaRowChangeEvent(CType(e.Row,PS_AnaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovePS_AnaRow(ByVal row As PS_AnaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PS_AnaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class customersDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_gender As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_dob As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_default_address_id As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columncustomers_telephone_evening As Global.System.Data.DataColumn
        
        Private columncustomers_fax As Global.System.Data.DataColumn
        
        Private columncustomers_password As Global.System.Data.DataColumn
        
        Private columncustomers_newsletter As Global.System.Data.DataColumn
        
        Private columncustomers_newsletterpartner As Global.System.Data.DataColumn
        
        Private columncustomers_privilege As Global.System.Data.DataColumn
        
        Private columncustomers_privilege_balance As Global.System.Data.DataColumn
        
        Private columncustomers_garantie As Global.System.Data.DataColumn
        
        Private columnsponsoring_code As Global.System.Data.DataColumn
        
        Private columnsponsored_code As Global.System.Data.DataColumn
        
        Private columncustomers_abo As Global.System.Data.DataColumn
        
        Private columncustomers_abo_suspended As Global.System.Data.DataColumn
        
        Private columncustomers_abo_type As Global.System.Data.DataColumn
        
        Private columnflagminiat1995 As Global.System.Data.DataColumn
        
        Private columncustomers_abo_method As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_adult As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_adult As Global.System.Data.DataColumn
        
        Private columnthrottling As Global.System.Data.DataColumn
        
        Private columncustomers_abo_validityto As Global.System.Data.DataColumn
        
        Private columncustomers_abo_rank As Global.System.Data.DataColumn
        
        Private columncustomers_abo_start_rentthismonth As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_credit As Global.System.Data.DataColumn
        
        Private columncustomers_abo_multishipment As Global.System.Data.DataColumn
        
        Private columncustomers_abo_discount_recurring_to_date As Global.System.Data.DataColumn
        
        Private columnabotested As Global.System.Data.DataColumn
        
        Private columncustomers_abo_status As Global.System.Data.DataColumn
        
        Private columncustomers_abo_payment_method As Global.System.Data.DataColumn
        
        Private columndomiciliation_status As Global.System.Data.DataColumn
        
        Private columndomiciliation_debiter_name As Global.System.Data.DataColumn
        
        Private columndomiciliation_number As Global.System.Data.DataColumn
        
        Private columndomiciliation_account_number As Global.System.Data.DataColumn
        
        Private columnadult_pwd As Global.System.Data.DataColumn
        
        Private columnogone_card_type As Global.System.Data.DataColumn
        
        Private columnogone_card_no As Global.System.Data.DataColumn
        
        Private columnogone_exp_date As Global.System.Data.DataColumn
        
        Private columnogone_owner As Global.System.Data.DataColumn
        
        Private columnogone_cc_expiration_status As Global.System.Data.DataColumn
        
        Private columnoffline_payment_status As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columnvip As Global.System.Data.DataColumn
        
        Private columnblack_listed As Global.System.Data.DataColumn
        
        Private columnred_listed As Global.System.Data.DataColumn
        
        Private columnsm_eligible As Global.System.Data.DataColumn
        
        Private columncustomers_enquiry_id As Global.System.Data.DataColumn
        
        Private columndate_first_delivery As Global.System.Data.DataColumn
        
        Private columnmail_wl_adult_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmail_wl_norm_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmgm_points As Global.System.Data.DataColumn
        
        Private columnwishlist_kind As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "customers"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_dob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_default_address_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_default_address_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephone_eveningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone_evening
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_fax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterpartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletterpartner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilegeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilege_balanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege_balance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_garantieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_garantie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsoring_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsoring_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsored_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsored_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_suspendedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_suspended
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property flagminiat1995Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnflagminiat1995
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property throttlingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnthrottling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_rankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_rank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_start_rentthismonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_start_rentthismonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_creditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_credit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_multishipmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_multishipment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_discount_recurring_to_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_discount_recurring_to_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abotestedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabotested
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_payment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_debiter_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_debiter_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_account_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_account_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property adult_pwdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadult_pwd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_exp_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_exp_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_cc_expiration_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_cc_expiration_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property offline_payment_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoffline_payment_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property black_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnblack_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property red_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnred_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sm_eligibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsm_eligible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_enquiry_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_enquiry_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_first_deliveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_first_delivery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_adult_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_adult_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_norm_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_norm_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mgm_pointsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmgm_points
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wishlist_kindColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwishlist_kind
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As customersRow
            Get
                Return CType(Me.Rows(index),customersRow)
            End Get
        End Property
        
        Public Event customersRowChanging As customersRowChangeEventHandler
        
        Public Event customersRowChanged As customersRowChangeEventHandler
        
        Public Event customersRowDeleting As customersRowChangeEventHandler
        
        Public Event customersRowDeleted As customersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddcustomersRow(ByVal row As customersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddcustomersRow( _
                    ByVal customers_gender As String,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_lastname As String,  _
                    ByVal customers_dob As Date,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_default_address_id As Integer,  _
                    ByVal customers_telephone As String,  _
                    ByVal customers_telephone_evening As String,  _
                    ByVal customers_fax As String,  _
                    ByVal customers_password As String,  _
                    ByVal customers_newsletter As String,  _
                    ByVal customers_newsletterpartner As String,  _
                    ByVal customers_privilege As Integer,  _
                    ByVal customers_privilege_balance As Decimal,  _
                    ByVal customers_garantie As Integer,  _
                    ByVal sponsoring_code As String,  _
                    ByVal sponsored_code As String,  _
                    ByVal customers_abo As Integer,  _
                    ByVal customers_abo_suspended As Integer,  _
                    ByVal customers_abo_type As Integer,  _
                    ByVal flagminiat1995 As Integer,  _
                    ByVal customers_abo_method As Integer,  _
                    ByVal customers_abo_dvd_norm As Integer,  _
                    ByVal customers_abo_dvd_adult As Integer,  _
                    ByVal customers_abo_dvd_home_norm As Integer,  _
                    ByVal customers_abo_dvd_home_adult As Integer,  _
                    ByVal throttling As Integer,  _
                    ByVal customers_abo_validityto As Date,  _
                    ByVal customers_abo_rank As Integer,  _
                    ByVal customers_abo_start_rentthismonth As Integer,  _
                    ByVal customers_abo_dvd_credit As Integer,  _
                    ByVal customers_abo_multishipment As Integer,  _
                    ByVal customers_abo_discount_recurring_to_date As Date,  _
                    ByVal abotested As Integer,  _
                    ByVal customers_abo_status As Integer,  _
                    ByVal customers_abo_payment_method As Integer,  _
                    ByVal domiciliation_status As Integer,  _
                    ByVal domiciliation_debiter_name As String,  _
                    ByVal domiciliation_number As String,  _
                    ByVal domiciliation_account_number As String,  _
                    ByVal adult_pwd As String,  _
                    ByVal ogone_card_type As String,  _
                    ByVal ogone_card_no As String,  _
                    ByVal ogone_exp_date As String,  _
                    ByVal ogone_owner As String,  _
                    ByVal ogone_cc_expiration_status As Integer,  _
                    ByVal offline_payment_status As Integer,  _
                    ByVal comment As String,  _
                    ByVal vip As Integer,  _
                    ByVal black_listed As Integer,  _
                    ByVal red_listed As Integer,  _
                    ByVal sm_eligible As Integer,  _
                    ByVal customers_enquiry_id As Integer,  _
                    ByVal date_first_delivery As Date,  _
                    ByVal mail_wl_adult_not_sufficient As Date,  _
                    ByVal mail_wl_norm_not_sufficient As Date,  _
                    ByVal mgm_points As Integer,  _
                    ByVal wishlist_kind As Integer) As customersRow
            Dim rowcustomersRow As customersRow = CType(Me.NewRow,customersRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customers_gender, customers_firstname, customers_lastname, customers_dob, customers_email_address, customers_default_address_id, customers_telephone, customers_telephone_evening, customers_fax, customers_password, customers_newsletter, customers_newsletterpartner, customers_privilege, customers_privilege_balance, customers_garantie, sponsoring_code, sponsored_code, customers_abo, customers_abo_suspended, customers_abo_type, flagminiat1995, customers_abo_method, customers_abo_dvd_norm, customers_abo_dvd_adult, customers_abo_dvd_home_norm, customers_abo_dvd_home_adult, throttling, customers_abo_validityto, customers_abo_rank, customers_abo_start_rentthismonth, customers_abo_dvd_credit, customers_abo_multishipment, customers_abo_discount_recurring_to_date, abotested, customers_abo_status, customers_abo_payment_method, domiciliation_status, domiciliation_debiter_name, domiciliation_number, domiciliation_account_number, adult_pwd, ogone_card_type, ogone_card_no, ogone_exp_date, ogone_owner, ogone_cc_expiration_status, offline_payment_status, comment, vip, black_listed, red_listed, sm_eligible, customers_enquiry_id, date_first_delivery, mail_wl_adult_not_sufficient, mail_wl_norm_not_sufficient, mgm_points, wishlist_kind}
            rowcustomersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustomersRow)
            Return rowcustomersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycustomers_id(ByVal customers_id As Integer) As customersRow
            Return CType(Me.Rows.Find(New Object() {customers_id}),customersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As customersDataTable = CType(MyBase.Clone,customersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New customersDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_gender = MyBase.Columns("customers_gender")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_dob = MyBase.Columns("customers_dob")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_default_address_id = MyBase.Columns("customers_default_address_id")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columncustomers_telephone_evening = MyBase.Columns("customers_telephone_evening")
            Me.columncustomers_fax = MyBase.Columns("customers_fax")
            Me.columncustomers_password = MyBase.Columns("customers_password")
            Me.columncustomers_newsletter = MyBase.Columns("customers_newsletter")
            Me.columncustomers_newsletterpartner = MyBase.Columns("customers_newsletterpartner")
            Me.columncustomers_privilege = MyBase.Columns("customers_privilege")
            Me.columncustomers_privilege_balance = MyBase.Columns("customers_privilege_balance")
            Me.columncustomers_garantie = MyBase.Columns("customers_garantie")
            Me.columnsponsoring_code = MyBase.Columns("sponsoring_code")
            Me.columnsponsored_code = MyBase.Columns("sponsored_code")
            Me.columncustomers_abo = MyBase.Columns("customers_abo")
            Me.columncustomers_abo_suspended = MyBase.Columns("customers_abo_suspended")
            Me.columncustomers_abo_type = MyBase.Columns("customers_abo_type")
            Me.columnflagminiat1995 = MyBase.Columns("flagminiat1995")
            Me.columncustomers_abo_method = MyBase.Columns("customers_abo_method")
            Me.columncustomers_abo_dvd_norm = MyBase.Columns("customers_abo_dvd_norm")
            Me.columncustomers_abo_dvd_adult = MyBase.Columns("customers_abo_dvd_adult")
            Me.columncustomers_abo_dvd_home_norm = MyBase.Columns("customers_abo_dvd_home_norm")
            Me.columncustomers_abo_dvd_home_adult = MyBase.Columns("customers_abo_dvd_home_adult")
            Me.columnthrottling = MyBase.Columns("throttling")
            Me.columncustomers_abo_validityto = MyBase.Columns("customers_abo_validityto")
            Me.columncustomers_abo_rank = MyBase.Columns("customers_abo_rank")
            Me.columncustomers_abo_start_rentthismonth = MyBase.Columns("customers_abo_start_rentthismonth")
            Me.columncustomers_abo_dvd_credit = MyBase.Columns("customers_abo_dvd_credit")
            Me.columncustomers_abo_multishipment = MyBase.Columns("customers_abo_multishipment")
            Me.columncustomers_abo_discount_recurring_to_date = MyBase.Columns("customers_abo_discount_recurring_to_date")
            Me.columnabotested = MyBase.Columns("abotested")
            Me.columncustomers_abo_status = MyBase.Columns("customers_abo_status")
            Me.columncustomers_abo_payment_method = MyBase.Columns("customers_abo_payment_method")
            Me.columndomiciliation_status = MyBase.Columns("domiciliation_status")
            Me.columndomiciliation_debiter_name = MyBase.Columns("domiciliation_debiter_name")
            Me.columndomiciliation_number = MyBase.Columns("domiciliation_number")
            Me.columndomiciliation_account_number = MyBase.Columns("domiciliation_account_number")
            Me.columnadult_pwd = MyBase.Columns("adult_pwd")
            Me.columnogone_card_type = MyBase.Columns("ogone_card_type")
            Me.columnogone_card_no = MyBase.Columns("ogone_card_no")
            Me.columnogone_exp_date = MyBase.Columns("ogone_exp_date")
            Me.columnogone_owner = MyBase.Columns("ogone_owner")
            Me.columnogone_cc_expiration_status = MyBase.Columns("ogone_cc_expiration_status")
            Me.columnoffline_payment_status = MyBase.Columns("offline_payment_status")
            Me.columncomment = MyBase.Columns("comment")
            Me.columnvip = MyBase.Columns("vip")
            Me.columnblack_listed = MyBase.Columns("black_listed")
            Me.columnred_listed = MyBase.Columns("red_listed")
            Me.columnsm_eligible = MyBase.Columns("sm_eligible")
            Me.columncustomers_enquiry_id = MyBase.Columns("customers_enquiry_id")
            Me.columndate_first_delivery = MyBase.Columns("date_first_delivery")
            Me.columnmail_wl_adult_not_sufficient = MyBase.Columns("mail_wl_adult_not_sufficient")
            Me.columnmail_wl_norm_not_sufficient = MyBase.Columns("mail_wl_norm_not_sufficient")
            Me.columnmgm_points = MyBase.Columns("mgm_points")
            Me.columnwishlist_kind = MyBase.Columns("wishlist_kind")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_gender = New Global.System.Data.DataColumn("customers_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_gender)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_dob = New Global.System.Data.DataColumn("customers_dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_dob)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_default_address_id = New Global.System.Data.DataColumn("customers_default_address_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_default_address_id)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columncustomers_telephone_evening = New Global.System.Data.DataColumn("customers_telephone_evening", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone_evening)
            Me.columncustomers_fax = New Global.System.Data.DataColumn("customers_fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_fax)
            Me.columncustomers_password = New Global.System.Data.DataColumn("customers_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_password)
            Me.columncustomers_newsletter = New Global.System.Data.DataColumn("customers_newsletter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletter)
            Me.columncustomers_newsletterpartner = New Global.System.Data.DataColumn("customers_newsletterpartner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletterpartner)
            Me.columncustomers_privilege = New Global.System.Data.DataColumn("customers_privilege", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege)
            Me.columncustomers_privilege_balance = New Global.System.Data.DataColumn("customers_privilege_balance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege_balance)
            Me.columncustomers_garantie = New Global.System.Data.DataColumn("customers_garantie", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_garantie)
            Me.columnsponsoring_code = New Global.System.Data.DataColumn("sponsoring_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsoring_code)
            Me.columnsponsored_code = New Global.System.Data.DataColumn("sponsored_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsored_code)
            Me.columncustomers_abo = New Global.System.Data.DataColumn("customers_abo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo)
            Me.columncustomers_abo_suspended = New Global.System.Data.DataColumn("customers_abo_suspended", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_suspended)
            Me.columncustomers_abo_type = New Global.System.Data.DataColumn("customers_abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_type)
            Me.columnflagminiat1995 = New Global.System.Data.DataColumn("flagminiat1995", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnflagminiat1995)
            Me.columncustomers_abo_method = New Global.System.Data.DataColumn("customers_abo_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_method)
            Me.columncustomers_abo_dvd_norm = New Global.System.Data.DataColumn("customers_abo_dvd_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_norm)
            Me.columncustomers_abo_dvd_adult = New Global.System.Data.DataColumn("customers_abo_dvd_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_adult)
            Me.columncustomers_abo_dvd_home_norm = New Global.System.Data.DataColumn("customers_abo_dvd_home_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_norm)
            Me.columncustomers_abo_dvd_home_adult = New Global.System.Data.DataColumn("customers_abo_dvd_home_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_adult)
            Me.columnthrottling = New Global.System.Data.DataColumn("throttling", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnthrottling)
            Me.columncustomers_abo_validityto = New Global.System.Data.DataColumn("customers_abo_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_validityto)
            Me.columncustomers_abo_rank = New Global.System.Data.DataColumn("customers_abo_rank", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_rank)
            Me.columncustomers_abo_start_rentthismonth = New Global.System.Data.DataColumn("customers_abo_start_rentthismonth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_start_rentthismonth)
            Me.columncustomers_abo_dvd_credit = New Global.System.Data.DataColumn("customers_abo_dvd_credit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_credit)
            Me.columncustomers_abo_multishipment = New Global.System.Data.DataColumn("customers_abo_multishipment", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_multishipment)
            Me.columncustomers_abo_discount_recurring_to_date = New Global.System.Data.DataColumn("customers_abo_discount_recurring_to_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_discount_recurring_to_date)
            Me.columnabotested = New Global.System.Data.DataColumn("abotested", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabotested)
            Me.columncustomers_abo_status = New Global.System.Data.DataColumn("customers_abo_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_status)
            Me.columncustomers_abo_payment_method = New Global.System.Data.DataColumn("customers_abo_payment_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_payment_method)
            Me.columndomiciliation_status = New Global.System.Data.DataColumn("domiciliation_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_status)
            Me.columndomiciliation_debiter_name = New Global.System.Data.DataColumn("domiciliation_debiter_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_debiter_name)
            Me.columndomiciliation_number = New Global.System.Data.DataColumn("domiciliation_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_number)
            Me.columndomiciliation_account_number = New Global.System.Data.DataColumn("domiciliation_account_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_account_number)
            Me.columnadult_pwd = New Global.System.Data.DataColumn("adult_pwd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadult_pwd)
            Me.columnogone_card_type = New Global.System.Data.DataColumn("ogone_card_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_type)
            Me.columnogone_card_no = New Global.System.Data.DataColumn("ogone_card_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_no)
            Me.columnogone_exp_date = New Global.System.Data.DataColumn("ogone_exp_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_exp_date)
            Me.columnogone_owner = New Global.System.Data.DataColumn("ogone_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_owner)
            Me.columnogone_cc_expiration_status = New Global.System.Data.DataColumn("ogone_cc_expiration_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_cc_expiration_status)
            Me.columnoffline_payment_status = New Global.System.Data.DataColumn("offline_payment_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoffline_payment_status)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnvip = New Global.System.Data.DataColumn("vip", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvip)
            Me.columnblack_listed = New Global.System.Data.DataColumn("black_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblack_listed)
            Me.columnred_listed = New Global.System.Data.DataColumn("red_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnred_listed)
            Me.columnsm_eligible = New Global.System.Data.DataColumn("sm_eligible", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsm_eligible)
            Me.columncustomers_enquiry_id = New Global.System.Data.DataColumn("customers_enquiry_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_enquiry_id)
            Me.columndate_first_delivery = New Global.System.Data.DataColumn("date_first_delivery", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_first_delivery)
            Me.columnmail_wl_adult_not_sufficient = New Global.System.Data.DataColumn("mail_wl_adult_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_adult_not_sufficient)
            Me.columnmail_wl_norm_not_sufficient = New Global.System.Data.DataColumn("mail_wl_norm_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_norm_not_sufficient)
            Me.columnmgm_points = New Global.System.Data.DataColumn("mgm_points", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmgm_points)
            Me.columnwishlist_kind = New Global.System.Data.DataColumn("wishlist_kind", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwishlist_kind)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsPur_SlsKey2", New Global.System.Data.DataColumn() {Me.columncustomers_id}, true))
            Me.columncustomers_id.AutoIncrement = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_id.ReadOnly = true
            Me.columncustomers_id.Unique = true
            Me.columncustomers_gender.AllowDBNull = false
            Me.columncustomers_firstname.AllowDBNull = false
            Me.columncustomers_lastname.AllowDBNull = false
            Me.columncustomers_email_address.AllowDBNull = false
            Me.columncustomers_default_address_id.AllowDBNull = false
            Me.columncustomers_telephone.AllowDBNull = false
            Me.columncustomers_telephone_evening.AllowDBNull = false
            Me.columncustomers_password.AllowDBNull = false
            Me.columncustomers_privilege.AllowDBNull = false
            Me.columncustomers_privilege_balance.AllowDBNull = false
            Me.columncustomers_garantie.AllowDBNull = false
            Me.columncustomers_abo.AllowDBNull = false
            Me.columncustomers_abo_suspended.AllowDBNull = false
            Me.columncustomers_abo_type.AllowDBNull = false
            Me.columnflagminiat1995.AllowDBNull = false
            Me.columncustomers_abo_method.AllowDBNull = false
            Me.columncustomers_abo_dvd_norm.AllowDBNull = false
            Me.columncustomers_abo_dvd_adult.AllowDBNull = false
            Me.columncustomers_abo_dvd_home_norm.AllowDBNull = false
            Me.columncustomers_abo_dvd_home_adult.AllowDBNull = false
            Me.columnthrottling.AllowDBNull = false
            Me.columncustomers_abo_rank.AllowDBNull = false
            Me.columncustomers_abo_start_rentthismonth.AllowDBNull = false
            Me.columncustomers_abo_dvd_credit.AllowDBNull = false
            Me.columncustomers_abo_multishipment.AllowDBNull = false
            Me.columnabotested.AllowDBNull = false
            Me.columncustomers_abo_status.AllowDBNull = false
            Me.columncustomers_abo_payment_method.AllowDBNull = false
            Me.columndomiciliation_status.AllowDBNull = false
            Me.columnogone_cc_expiration_status.AllowDBNull = false
            Me.columnoffline_payment_status.AllowDBNull = false
            Me.columnvip.AllowDBNull = false
            Me.columnblack_listed.AllowDBNull = false
            Me.columnred_listed.AllowDBNull = false
            Me.columnsm_eligible.AllowDBNull = false
            Me.columncustomers_enquiry_id.AllowDBNull = false
            Me.columnmgm_points.AllowDBNull = false
            Me.columnwishlist_kind.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewcustomersRow() As customersRow
            Return CType(Me.NewRow,customersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New customersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(customersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.customersRowChangedEvent) Is Nothing) Then
                RaiseEvent customersRowChanged(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.customersRowChangingEvent) Is Nothing) Then
                RaiseEvent customersRowChanging(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.customersRowDeletedEvent) Is Nothing) Then
                RaiseEvent customersRowDeleted(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.customersRowDeletingEvent) Is Nothing) Then
                RaiseEvent customersRowDeleting(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovecustomersRow(ByVal row As customersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "customersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class productsDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnproducts_quantity As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnimdb_id As Global.System.Data.DataColumn
        
        Private columnproducts_title As Global.System.Data.DataColumn
        
        Private columnproducts_image As Global.System.Data.DataColumn
        
        Private columnproducts_price As Global.System.Data.DataColumn
        
        Private columnproducts_date_added As Global.System.Data.DataColumn
        
        Private columnproducts_last_modified As Global.System.Data.DataColumn
        
        Private columnproducts_date_available As Global.System.Data.DataColumn
        
        Private columnproducts_weight As Global.System.Data.DataColumn
        
        Private columnproducts_status As Global.System.Data.DataColumn
        
        Private columnproducts_tax_class_id As Global.System.Data.DataColumn
        
        Private columnmanufacturers_id As Global.System.Data.DataColumn
        
        Private columnproducts_ordered As Global.System.Data.DataColumn
        
        Private columnproducts_public As Global.System.Data.DataColumn
        
        Private columnproducts_runtime As Global.System.Data.DataColumn
        
        Private columnproducts_year As Global.System.Data.DataColumn
        
        Private columnproducts_countries_id As Global.System.Data.DataColumn
        
        Private columnproducts_picture_format As Global.System.Data.DataColumn
        
        Private columnproducts_rating As Global.System.Data.DataColumn
        
        Private columnproducts_directors_id As Global.System.Data.DataColumn
        
        Private columnproducts_regional_code As Global.System.Data.DataColumn
        
        Private columnproducts_studio As Global.System.Data.DataColumn
        
        Private columnproducts_barcode As Global.System.Data.DataColumn
        
        Private columnproducts_dvd_quantity As Global.System.Data.DataColumn
        
        Private columnproducts_language_fr As Global.System.Data.DataColumn
        
        Private columnproducts_undertitle_nl As Global.System.Data.DataColumn
        
        Private columnin_the_bags As Global.System.Data.DataColumn
        
        Private columnin_the_bags_next As Global.System.Data.DataColumn
        
        Private columnin_cinema_now As Global.System.Data.DataColumn
        
        Private columnproducts_dvdpostchoice As Global.System.Data.DataColumn
        
        Private columnproducts_other_language As Global.System.Data.DataColumn
        
        Private columnproducts_french As Global.System.Data.DataColumn
        
        Private columnproducts_next As Global.System.Data.DataColumn
        
        Private columnproducts_tiscali_hp_fr As Global.System.Data.DataColumn
        
        Private columnproducts_tiscali_hp_nl As Global.System.Data.DataColumn
        
        Private columnproducts_series_id As Global.System.Data.DataColumn
        
        Private columnproducts_series_number As Global.System.Data.DataColumn
        
        Private columnproducts_series_aboprocess_id As Global.System.Data.DataColumn
        
        Private columnproducts_series_aboprocess_number As Global.System.Data.DataColumn
        
        Private columncinebel_id As Global.System.Data.DataColumn
        
        Private columncinebel_trailer As Global.System.Data.DataColumn
        
        Private columnfeesharing As Global.System.Data.DataColumn
        
        Private columnfeesharing_end As Global.System.Data.DataColumn
        
        Private columnfeesharing_upfront_fee As Global.System.Data.DataColumn
        
        Private columnfeesharing_upfront_fee_recoverable As Global.System.Data.DataColumn
        
        Private columnfeesharing_turn_price As Global.System.Data.DataColumn
        
        Private columnfeesharing_turn_price_after3month As Global.System.Data.DataColumn
        
        Private columnfeesharing_buy_option_price As Global.System.Data.DataColumn
        
        Private columnfeesharing_expected_nbr_turns As Global.System.Data.DataColumn
        
        Private columnproducts_desire As Global.System.Data.DataColumn
        
        Private columnproducts_desire_weighted As Global.System.Data.DataColumn
        
        Private columnproducts_availability As Global.System.Data.DataColumn
        
        Private columnquantity_to_sale As Global.System.Data.DataColumn
        
        Private columnproducts_sale_price As Global.System.Data.DataColumn
        
        Private columnproducts_sale_date As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "products"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_quantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imdb_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimdb_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_image
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_last_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_availableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_available
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_weightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tax_class_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tax_class_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property manufacturers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmanufacturers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_orderedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_ordered
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_publicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_public
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_runtimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_runtime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_yearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_countries_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_countries_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_picture_formatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_picture_format
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_ratingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_rating
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_directors_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_directors_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_regional_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_regional_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_studioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_studio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_barcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_barcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvd_quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvd_quantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_language_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_language_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_undertitle_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_undertitle_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_the_bagsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_the_bags
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_the_bags_nextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_the_bags_next
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_cinema_nowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_cinema_now
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvdpostchoiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvdpostchoice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_other_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_other_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_frenchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_french
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_nextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_next
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tiscali_hp_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tiscali_hp_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tiscali_hp_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tiscali_hp_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_aboprocess_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_aboprocess_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_aboprocess_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_aboprocess_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cinebel_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncinebel_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cinebel_trailerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncinebel_trailer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_endColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_end
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_upfront_feeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_upfront_fee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_upfront_fee_recoverableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_upfront_fee_recoverable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_turn_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_turn_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_turn_price_after3monthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_turn_price_after3month
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_buy_option_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_buy_option_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_expected_nbr_turnsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_expected_nbr_turns
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_desireColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_desire
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_desire_weightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_desire_weighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_availabilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_availability
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quantity_to_saleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquantity_to_sale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_sale_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_sale_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_sale_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_sale_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As productsRow
            Get
                Return CType(Me.Rows(index),productsRow)
            End Get
        End Property
        
        Public Event productsRowChanging As productsRowChangeEventHandler
        
        Public Event productsRowChanged As productsRowChangeEventHandler
        
        Public Event productsRowDeleting As productsRowChangeEventHandler
        
        Public Event productsRowDeleted As productsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddproductsRow(ByVal row As productsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddproductsRow( _
                    ByVal products_id As Integer,  _
                    ByVal products_quantity As Integer,  _
                    ByVal products_model As String,  _
                    ByVal imdb_id As Integer,  _
                    ByVal products_title As String,  _
                    ByVal products_image As String,  _
                    ByVal products_price As Decimal,  _
                    ByVal products_date_added As Date,  _
                    ByVal products_last_modified As Date,  _
                    ByVal products_date_available As Date,  _
                    ByVal products_weight As Integer,  _
                    ByVal products_status As Integer,  _
                    ByVal products_tax_class_id As Integer,  _
                    ByVal manufacturers_id As Integer,  _
                    ByVal products_ordered As Integer,  _
                    ByVal products_public As Integer,  _
                    ByVal products_runtime As Integer,  _
                    ByVal products_year As Integer,  _
                    ByVal products_countries_id As Integer,  _
                    ByVal products_picture_format As Integer,  _
                    ByVal products_rating As Integer,  _
                    ByVal products_directors_id As Integer,  _
                    ByVal products_regional_code As Integer,  _
                    ByVal products_studio As Integer,  _
                    ByVal products_barcode As Integer,  _
                    ByVal products_dvd_quantity As Integer,  _
                    ByVal products_language_fr As Integer,  _
                    ByVal products_undertitle_nl As Integer,  _
                    ByVal in_the_bags As Integer,  _
                    ByVal in_the_bags_next As Integer,  _
                    ByVal in_cinema_now As Integer,  _
                    ByVal products_dvdpostchoice As Integer,  _
                    ByVal products_other_language As Integer,  _
                    ByVal products_french As Integer,  _
                    ByVal products_next As Integer,  _
                    ByVal products_tiscali_hp_fr As Integer,  _
                    ByVal products_tiscali_hp_nl As Integer,  _
                    ByVal products_series_id As Integer,  _
                    ByVal products_series_number As Integer,  _
                    ByVal products_series_aboprocess_id As Integer,  _
                    ByVal products_series_aboprocess_number As Integer,  _
                    ByVal cinebel_id As Integer,  _
                    ByVal cinebel_trailer As Integer,  _
                    ByVal feesharing As Integer,  _
                    ByVal feesharing_end As Date,  _
                    ByVal feesharing_upfront_fee As Decimal,  _
                    ByVal feesharing_upfront_fee_recoverable As Integer,  _
                    ByVal feesharing_turn_price As Decimal,  _
                    ByVal feesharing_turn_price_after3month As Decimal,  _
                    ByVal feesharing_buy_option_price As Decimal,  _
                    ByVal feesharing_expected_nbr_turns As Integer,  _
                    ByVal products_desire As Integer,  _
                    ByVal products_desire_weighted As Decimal,  _
                    ByVal products_availability As Integer,  _
                    ByVal quantity_to_sale As Integer,  _
                    ByVal products_sale_price As Decimal,  _
                    ByVal products_sale_date As Date) As productsRow
            Dim rowproductsRow As productsRow = CType(Me.NewRow,productsRow)
            Dim columnValuesArray() As Object = New Object() {products_id, products_quantity, products_model, imdb_id, products_title, products_image, products_price, products_date_added, products_last_modified, products_date_available, products_weight, products_status, products_tax_class_id, manufacturers_id, products_ordered, products_public, products_runtime, products_year, products_countries_id, products_picture_format, products_rating, products_directors_id, products_regional_code, products_studio, products_barcode, products_dvd_quantity, products_language_fr, products_undertitle_nl, in_the_bags, in_the_bags_next, in_cinema_now, products_dvdpostchoice, products_other_language, products_french, products_next, products_tiscali_hp_fr, products_tiscali_hp_nl, products_series_id, products_series_number, products_series_aboprocess_id, products_series_aboprocess_number, cinebel_id, cinebel_trailer, feesharing, feesharing_end, feesharing_upfront_fee, feesharing_upfront_fee_recoverable, feesharing_turn_price, feesharing_turn_price_after3month, feesharing_buy_option_price, feesharing_expected_nbr_turns, products_desire, products_desire_weighted, products_availability, quantity_to_sale, products_sale_price, products_sale_date}
            rowproductsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproductsRow)
            Return rowproductsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproducts_id(ByVal products_id As Integer) As productsRow
            Return CType(Me.Rows.Find(New Object() {products_id}),productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As productsDataTable = CType(MyBase.Clone,productsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New productsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnproducts_quantity = MyBase.Columns("products_quantity")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnimdb_id = MyBase.Columns("imdb_id")
            Me.columnproducts_title = MyBase.Columns("products_title")
            Me.columnproducts_image = MyBase.Columns("products_image")
            Me.columnproducts_price = MyBase.Columns("products_price")
            Me.columnproducts_date_added = MyBase.Columns("products_date_added")
            Me.columnproducts_last_modified = MyBase.Columns("products_last_modified")
            Me.columnproducts_date_available = MyBase.Columns("products_date_available")
            Me.columnproducts_weight = MyBase.Columns("products_weight")
            Me.columnproducts_status = MyBase.Columns("products_status")
            Me.columnproducts_tax_class_id = MyBase.Columns("products_tax_class_id")
            Me.columnmanufacturers_id = MyBase.Columns("manufacturers_id")
            Me.columnproducts_ordered = MyBase.Columns("products_ordered")
            Me.columnproducts_public = MyBase.Columns("products_public")
            Me.columnproducts_runtime = MyBase.Columns("products_runtime")
            Me.columnproducts_year = MyBase.Columns("products_year")
            Me.columnproducts_countries_id = MyBase.Columns("products_countries_id")
            Me.columnproducts_picture_format = MyBase.Columns("products_picture_format")
            Me.columnproducts_rating = MyBase.Columns("products_rating")
            Me.columnproducts_directors_id = MyBase.Columns("products_directors_id")
            Me.columnproducts_regional_code = MyBase.Columns("products_regional_code")
            Me.columnproducts_studio = MyBase.Columns("products_studio")
            Me.columnproducts_barcode = MyBase.Columns("products_barcode")
            Me.columnproducts_dvd_quantity = MyBase.Columns("products_dvd_quantity")
            Me.columnproducts_language_fr = MyBase.Columns("products_language_fr")
            Me.columnproducts_undertitle_nl = MyBase.Columns("products_undertitle_nl")
            Me.columnin_the_bags = MyBase.Columns("in_the_bags")
            Me.columnin_the_bags_next = MyBase.Columns("in_the_bags_next")
            Me.columnin_cinema_now = MyBase.Columns("in_cinema_now")
            Me.columnproducts_dvdpostchoice = MyBase.Columns("products_dvdpostchoice")
            Me.columnproducts_other_language = MyBase.Columns("products_other_language")
            Me.columnproducts_french = MyBase.Columns("products_french")
            Me.columnproducts_next = MyBase.Columns("products_next")
            Me.columnproducts_tiscali_hp_fr = MyBase.Columns("products_tiscali_hp_fr")
            Me.columnproducts_tiscali_hp_nl = MyBase.Columns("products_tiscali_hp_nl")
            Me.columnproducts_series_id = MyBase.Columns("products_series_id")
            Me.columnproducts_series_number = MyBase.Columns("products_series_number")
            Me.columnproducts_series_aboprocess_id = MyBase.Columns("products_series_aboprocess_id")
            Me.columnproducts_series_aboprocess_number = MyBase.Columns("products_series_aboprocess_number")
            Me.columncinebel_id = MyBase.Columns("cinebel_id")
            Me.columncinebel_trailer = MyBase.Columns("cinebel_trailer")
            Me.columnfeesharing = MyBase.Columns("feesharing")
            Me.columnfeesharing_end = MyBase.Columns("feesharing_end")
            Me.columnfeesharing_upfront_fee = MyBase.Columns("feesharing_upfront_fee")
            Me.columnfeesharing_upfront_fee_recoverable = MyBase.Columns("feesharing_upfront_fee_recoverable")
            Me.columnfeesharing_turn_price = MyBase.Columns("feesharing_turn_price")
            Me.columnfeesharing_turn_price_after3month = MyBase.Columns("feesharing_turn_price_after3month")
            Me.columnfeesharing_buy_option_price = MyBase.Columns("feesharing_buy_option_price")
            Me.columnfeesharing_expected_nbr_turns = MyBase.Columns("feesharing_expected_nbr_turns")
            Me.columnproducts_desire = MyBase.Columns("products_desire")
            Me.columnproducts_desire_weighted = MyBase.Columns("products_desire_weighted")
            Me.columnproducts_availability = MyBase.Columns("products_availability")
            Me.columnquantity_to_sale = MyBase.Columns("quantity_to_sale")
            Me.columnproducts_sale_price = MyBase.Columns("products_sale_price")
            Me.columnproducts_sale_date = MyBase.Columns("products_sale_date")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnproducts_quantity = New Global.System.Data.DataColumn("products_quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_quantity)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnimdb_id = New Global.System.Data.DataColumn("imdb_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimdb_id)
            Me.columnproducts_title = New Global.System.Data.DataColumn("products_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_title)
            Me.columnproducts_image = New Global.System.Data.DataColumn("products_image", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_image)
            Me.columnproducts_price = New Global.System.Data.DataColumn("products_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_price)
            Me.columnproducts_date_added = New Global.System.Data.DataColumn("products_date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_added)
            Me.columnproducts_last_modified = New Global.System.Data.DataColumn("products_last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_last_modified)
            Me.columnproducts_date_available = New Global.System.Data.DataColumn("products_date_available", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_available)
            Me.columnproducts_weight = New Global.System.Data.DataColumn("products_weight", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_weight)
            Me.columnproducts_status = New Global.System.Data.DataColumn("products_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_status)
            Me.columnproducts_tax_class_id = New Global.System.Data.DataColumn("products_tax_class_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tax_class_id)
            Me.columnmanufacturers_id = New Global.System.Data.DataColumn("manufacturers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmanufacturers_id)
            Me.columnproducts_ordered = New Global.System.Data.DataColumn("products_ordered", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_ordered)
            Me.columnproducts_public = New Global.System.Data.DataColumn("products_public", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_public)
            Me.columnproducts_runtime = New Global.System.Data.DataColumn("products_runtime", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_runtime)
            Me.columnproducts_year = New Global.System.Data.DataColumn("products_year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_year)
            Me.columnproducts_countries_id = New Global.System.Data.DataColumn("products_countries_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_countries_id)
            Me.columnproducts_picture_format = New Global.System.Data.DataColumn("products_picture_format", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_picture_format)
            Me.columnproducts_rating = New Global.System.Data.DataColumn("products_rating", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_rating)
            Me.columnproducts_directors_id = New Global.System.Data.DataColumn("products_directors_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_directors_id)
            Me.columnproducts_regional_code = New Global.System.Data.DataColumn("products_regional_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_regional_code)
            Me.columnproducts_studio = New Global.System.Data.DataColumn("products_studio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_studio)
            Me.columnproducts_barcode = New Global.System.Data.DataColumn("products_barcode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_barcode)
            Me.columnproducts_dvd_quantity = New Global.System.Data.DataColumn("products_dvd_quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvd_quantity)
            Me.columnproducts_language_fr = New Global.System.Data.DataColumn("products_language_fr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_language_fr)
            Me.columnproducts_undertitle_nl = New Global.System.Data.DataColumn("products_undertitle_nl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_undertitle_nl)
            Me.columnin_the_bags = New Global.System.Data.DataColumn("in_the_bags", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_the_bags)
            Me.columnin_the_bags_next = New Global.System.Data.DataColumn("in_the_bags_next", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_the_bags_next)
            Me.columnin_cinema_now = New Global.System.Data.DataColumn("in_cinema_now", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_cinema_now)
            Me.columnproducts_dvdpostchoice = New Global.System.Data.DataColumn("products_dvdpostchoice", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvdpostchoice)
            Me.columnproducts_other_language = New Global.System.Data.DataColumn("products_other_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_other_language)
            Me.columnproducts_french = New Global.System.Data.DataColumn("products_french", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_french)
            Me.columnproducts_next = New Global.System.Data.DataColumn("products_next", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_next)
            Me.columnproducts_tiscali_hp_fr = New Global.System.Data.DataColumn("products_tiscali_hp_fr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tiscali_hp_fr)
            Me.columnproducts_tiscali_hp_nl = New Global.System.Data.DataColumn("products_tiscali_hp_nl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tiscali_hp_nl)
            Me.columnproducts_series_id = New Global.System.Data.DataColumn("products_series_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_id)
            Me.columnproducts_series_number = New Global.System.Data.DataColumn("products_series_number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_number)
            Me.columnproducts_series_aboprocess_id = New Global.System.Data.DataColumn("products_series_aboprocess_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_aboprocess_id)
            Me.columnproducts_series_aboprocess_number = New Global.System.Data.DataColumn("products_series_aboprocess_number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_aboprocess_number)
            Me.columncinebel_id = New Global.System.Data.DataColumn("cinebel_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncinebel_id)
            Me.columncinebel_trailer = New Global.System.Data.DataColumn("cinebel_trailer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncinebel_trailer)
            Me.columnfeesharing = New Global.System.Data.DataColumn("feesharing", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing)
            Me.columnfeesharing_end = New Global.System.Data.DataColumn("feesharing_end", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_end)
            Me.columnfeesharing_upfront_fee = New Global.System.Data.DataColumn("feesharing_upfront_fee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_upfront_fee)
            Me.columnfeesharing_upfront_fee_recoverable = New Global.System.Data.DataColumn("feesharing_upfront_fee_recoverable", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_upfront_fee_recoverable)
            Me.columnfeesharing_turn_price = New Global.System.Data.DataColumn("feesharing_turn_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_turn_price)
            Me.columnfeesharing_turn_price_after3month = New Global.System.Data.DataColumn("feesharing_turn_price_after3month", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_turn_price_after3month)
            Me.columnfeesharing_buy_option_price = New Global.System.Data.DataColumn("feesharing_buy_option_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_buy_option_price)
            Me.columnfeesharing_expected_nbr_turns = New Global.System.Data.DataColumn("feesharing_expected_nbr_turns", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_expected_nbr_turns)
            Me.columnproducts_desire = New Global.System.Data.DataColumn("products_desire", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_desire)
            Me.columnproducts_desire_weighted = New Global.System.Data.DataColumn("products_desire_weighted", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_desire_weighted)
            Me.columnproducts_availability = New Global.System.Data.DataColumn("products_availability", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_availability)
            Me.columnquantity_to_sale = New Global.System.Data.DataColumn("quantity_to_sale", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquantity_to_sale)
            Me.columnproducts_sale_price = New Global.System.Data.DataColumn("products_sale_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_sale_price)
            Me.columnproducts_sale_date = New Global.System.Data.DataColumn("products_sale_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_sale_date)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsPur_SlsKey5", New Global.System.Data.DataColumn() {Me.columnproducts_id}, true))
            Me.columnproducts_id.AllowDBNull = false
            Me.columnproducts_id.Unique = true
            Me.columnproducts_quantity.AllowDBNull = false
            Me.columnimdb_id.AllowDBNull = false
            Me.columnproducts_title.AllowDBNull = false
            Me.columnproducts_price.AllowDBNull = false
            Me.columnproducts_status.AllowDBNull = false
            Me.columnproducts_tax_class_id.AllowDBNull = false
            Me.columnproducts_ordered.AllowDBNull = false
            Me.columnproducts_countries_id.AllowDBNull = false
            Me.columnproducts_barcode.AllowDBNull = false
            Me.columnproducts_dvd_quantity.AllowDBNull = false
            Me.columnproducts_language_fr.AllowDBNull = false
            Me.columnproducts_undertitle_nl.AllowDBNull = false
            Me.columnin_the_bags.AllowDBNull = false
            Me.columnin_the_bags_next.AllowDBNull = false
            Me.columnin_cinema_now.AllowDBNull = false
            Me.columnproducts_dvdpostchoice.AllowDBNull = false
            Me.columnproducts_french.AllowDBNull = false
            Me.columnproducts_next.AllowDBNull = false
            Me.columnproducts_tiscali_hp_fr.AllowDBNull = false
            Me.columnproducts_tiscali_hp_nl.AllowDBNull = false
            Me.columnproducts_series_id.AllowDBNull = false
            Me.columnproducts_series_number.AllowDBNull = false
            Me.columnproducts_series_aboprocess_id.AllowDBNull = false
            Me.columnproducts_series_aboprocess_number.AllowDBNull = false
            Me.columnfeesharing.AllowDBNull = false
            Me.columnfeesharing_upfront_fee.AllowDBNull = false
            Me.columnfeesharing_upfront_fee_recoverable.AllowDBNull = false
            Me.columnfeesharing_turn_price.AllowDBNull = false
            Me.columnfeesharing_turn_price_after3month.AllowDBNull = false
            Me.columnfeesharing_buy_option_price.AllowDBNull = false
            Me.columnfeesharing_expected_nbr_turns.AllowDBNull = false
            Me.columnproducts_desire.AllowDBNull = false
            Me.columnproducts_desire_weighted.AllowDBNull = false
            Me.columnproducts_availability.AllowDBNull = false
            Me.columnquantity_to_sale.AllowDBNull = false
            Me.columnproducts_sale_price.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewproductsRow() As productsRow
            Return CType(Me.NewRow,productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New productsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.productsRowChangedEvent) Is Nothing) Then
                RaiseEvent productsRowChanged(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.productsRowChangingEvent) Is Nothing) Then
                RaiseEvent productsRowChanging(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.productsRowDeletedEvent) Is Nothing) Then
                RaiseEvent productsRowDeleted(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.productsRowDeletingEvent) Is Nothing) Then
                RaiseEvent productsRowDeleting(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveproductsRow(ByVal row As productsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "productsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class wishlistDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnwl_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnproduct_id As Global.System.Data.DataColumn
        
        Private columnrank As Global.System.Data.DataColumn
        
        Private columnpriority As Global.System.Data.DataColumn
        
        Private columndate_added As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "wishlist"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wl_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwl_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property product_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproduct_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property priorityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpriority
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As wishlistRow
            Get
                Return CType(Me.Rows(index),wishlistRow)
            End Get
        End Property
        
        Public Event wishlistRowChanging As wishlistRowChangeEventHandler
        
        Public Event wishlistRowChanged As wishlistRowChangeEventHandler
        
        Public Event wishlistRowDeleting As wishlistRowChangeEventHandler
        
        Public Event wishlistRowDeleted As wishlistRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddwishlistRow(ByVal row As wishlistRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddwishlistRow(ByVal wl_id As Integer, ByVal customers_id As Integer, ByVal product_id As Integer, ByVal rank As Integer, ByVal priority As Short, ByVal date_added As Date) As wishlistRow
            Dim rowwishlistRow As wishlistRow = CType(Me.NewRow,wishlistRow)
            Dim columnValuesArray() As Object = New Object() {wl_id, customers_id, product_id, rank, priority, date_added}
            rowwishlistRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowwishlistRow)
            Return rowwishlistRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBywl_idcustomers_id(ByVal wl_id As Integer, ByVal customers_id As Integer) As wishlistRow
            Return CType(Me.Rows.Find(New Object() {wl_id, customers_id}),wishlistRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As wishlistDataTable = CType(MyBase.Clone,wishlistDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New wishlistDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnwl_id = MyBase.Columns("wl_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnproduct_id = MyBase.Columns("product_id")
            Me.columnrank = MyBase.Columns("rank")
            Me.columnpriority = MyBase.Columns("priority")
            Me.columndate_added = MyBase.Columns("date_added")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnwl_id = New Global.System.Data.DataColumn("wl_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwl_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnproduct_id = New Global.System.Data.DataColumn("product_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproduct_id)
            Me.columnrank = New Global.System.Data.DataColumn("rank", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrank)
            Me.columnpriority = New Global.System.Data.DataColumn("priority", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpriority)
            Me.columndate_added = New Global.System.Data.DataColumn("date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_added)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsPur_SlsKey3", New Global.System.Data.DataColumn() {Me.columnwl_id, Me.columncustomers_id}, true))
            Me.columnwl_id.AllowDBNull = false
            Me.columncustomers_id.AllowDBNull = false
            Me.columnproduct_id.AllowDBNull = false
            Me.columnrank.AllowDBNull = false
            Me.columnpriority.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewwishlistRow() As wishlistRow
            Return CType(Me.NewRow,wishlistRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New wishlistRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(wishlistRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.wishlistRowChangedEvent) Is Nothing) Then
                RaiseEvent wishlistRowChanged(Me, New wishlistRowChangeEvent(CType(e.Row,wishlistRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.wishlistRowChangingEvent) Is Nothing) Then
                RaiseEvent wishlistRowChanging(Me, New wishlistRowChangeEvent(CType(e.Row,wishlistRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.wishlistRowDeletedEvent) Is Nothing) Then
                RaiseEvent wishlistRowDeleted(Me, New wishlistRowChangeEvent(CType(e.Row,wishlistRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.wishlistRowDeletingEvent) Is Nothing) Then
                RaiseEvent wishlistRowDeleting(Me, New wishlistRowChangeEvent(CType(e.Row,wishlistRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovewishlistRow(ByVal row As wishlistRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "wishlistDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class products_dvdDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnproducts_dvdid As Global.System.Data.DataColumn
        
        Private columnproducts_dvd_status As Global.System.Data.DataColumn
        
        Private columninout As Global.System.Data.DataColumn
        
        Private columndvd_buy_date As Global.System.Data.DataColumn
        
        Private columndate_lastrented As Global.System.Data.DataColumn
        
        Private columnnbr_rotation_in_feesharing As Global.System.Data.DataColumn
        
        Private columnbox_id As Global.System.Data.DataColumn
        
        Private columnpibox_id As Global.System.Data.DataColumn
        
        Private columnlast_adminby As Global.System.Data.DataColumn
        
        Private columnlast_admindate As Global.System.Data.DataColumn
        
        Private columnpreattribute_orders_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "products_dvd"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvdidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvdid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvd_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvd_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property inoutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninout
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvd_buy_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndvd_buy_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_lastrentedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_lastrented
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nbr_rotation_in_feesharingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnbr_rotation_in_feesharing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property box_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbox_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pibox_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpibox_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_adminbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_adminby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_admindateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_admindate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property preattribute_orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpreattribute_orders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As products_dvdRow
            Get
                Return CType(Me.Rows(index),products_dvdRow)
            End Get
        End Property
        
        Public Event products_dvdRowChanging As products_dvdRowChangeEventHandler
        
        Public Event products_dvdRowChanged As products_dvdRowChangeEventHandler
        
        Public Event products_dvdRowDeleting As products_dvdRowChangeEventHandler
        
        Public Event products_dvdRowDeleted As products_dvdRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addproducts_dvdRow(ByVal row As products_dvdRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addproducts_dvdRow(ByVal products_id As Integer, ByVal products_dvdid As Integer, ByVal products_dvd_status As Integer, ByVal inout As Short, ByVal dvd_buy_date As Date, ByVal date_lastrented As Date, ByVal nbr_rotation_in_feesharing As Integer, ByVal box_id As Integer, ByVal pibox_id As Integer, ByVal last_adminby As Long, ByVal last_admindate As Date, ByVal preattribute_orders_id As Integer) As products_dvdRow
            Dim rowproducts_dvdRow As products_dvdRow = CType(Me.NewRow,products_dvdRow)
            Dim columnValuesArray() As Object = New Object() {products_id, products_dvdid, products_dvd_status, inout, dvd_buy_date, date_lastrented, nbr_rotation_in_feesharing, box_id, pibox_id, last_adminby, last_admindate, preattribute_orders_id}
            rowproducts_dvdRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproducts_dvdRow)
            Return rowproducts_dvdRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproducts_idproducts_dvdid(ByVal products_id As Integer, ByVal products_dvdid As Integer) As products_dvdRow
            Return CType(Me.Rows.Find(New Object() {products_id, products_dvdid}),products_dvdRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As products_dvdDataTable = CType(MyBase.Clone,products_dvdDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New products_dvdDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnproducts_dvdid = MyBase.Columns("products_dvdid")
            Me.columnproducts_dvd_status = MyBase.Columns("products_dvd_status")
            Me.columninout = MyBase.Columns("inout")
            Me.columndvd_buy_date = MyBase.Columns("dvd_buy_date")
            Me.columndate_lastrented = MyBase.Columns("date_lastrented")
            Me.columnnbr_rotation_in_feesharing = MyBase.Columns("nbr_rotation_in_feesharing")
            Me.columnbox_id = MyBase.Columns("box_id")
            Me.columnpibox_id = MyBase.Columns("pibox_id")
            Me.columnlast_adminby = MyBase.Columns("last_adminby")
            Me.columnlast_admindate = MyBase.Columns("last_admindate")
            Me.columnpreattribute_orders_id = MyBase.Columns("preattribute_orders_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnproducts_dvdid = New Global.System.Data.DataColumn("products_dvdid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvdid)
            Me.columnproducts_dvd_status = New Global.System.Data.DataColumn("products_dvd_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvd_status)
            Me.columninout = New Global.System.Data.DataColumn("inout", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninout)
            Me.columndvd_buy_date = New Global.System.Data.DataColumn("dvd_buy_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvd_buy_date)
            Me.columndate_lastrented = New Global.System.Data.DataColumn("date_lastrented", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_lastrented)
            Me.columnnbr_rotation_in_feesharing = New Global.System.Data.DataColumn("nbr_rotation_in_feesharing", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnbr_rotation_in_feesharing)
            Me.columnbox_id = New Global.System.Data.DataColumn("box_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbox_id)
            Me.columnpibox_id = New Global.System.Data.DataColumn("pibox_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpibox_id)
            Me.columnlast_adminby = New Global.System.Data.DataColumn("last_adminby", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_adminby)
            Me.columnlast_admindate = New Global.System.Data.DataColumn("last_admindate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_admindate)
            Me.columnpreattribute_orders_id = New Global.System.Data.DataColumn("preattribute_orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpreattribute_orders_id)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsPur_SlsKey4", New Global.System.Data.DataColumn() {Me.columnproducts_id, Me.columnproducts_dvdid}, true))
            Me.columnproducts_id.AllowDBNull = false
            Me.columnproducts_dvdid.AllowDBNull = false
            Me.columnproducts_dvd_status.AllowDBNull = false
            Me.columninout.AllowDBNull = false
            Me.columnnbr_rotation_in_feesharing.AllowDBNull = false
            Me.columnbox_id.AllowDBNull = false
            Me.columnpibox_id.AllowDBNull = false
            Me.columnlast_adminby.AllowDBNull = false
            Me.columnpreattribute_orders_id.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newproducts_dvdRow() As products_dvdRow
            Return CType(Me.NewRow,products_dvdRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New products_dvdRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(products_dvdRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.products_dvdRowChangedEvent) Is Nothing) Then
                RaiseEvent products_dvdRowChanged(Me, New products_dvdRowChangeEvent(CType(e.Row,products_dvdRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.products_dvdRowChangingEvent) Is Nothing) Then
                RaiseEvent products_dvdRowChanging(Me, New products_dvdRowChangeEvent(CType(e.Row,products_dvdRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.products_dvdRowDeletedEvent) Is Nothing) Then
                RaiseEvent products_dvdRowDeleted(Me, New products_dvdRowChangeEvent(CType(e.Row,products_dvdRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.products_dvdRowDeletingEvent) Is Nothing) Then
                RaiseEvent products_dvdRowDeleting(Me, New products_dvdRowChangeEvent(CType(e.Row,products_dvdRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeproducts_dvdRow(ByVal row As products_dvdRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "products_dvdDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tmp1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnTxt1 As Global.System.Data.DataColumn
        
        Private columnInt_1 As Global.System.Data.DataColumn
        
        Private columnInt_2 As Global.System.Data.DataColumn
        
        Private columnInt_3 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tmp1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Txt1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTxt1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Int_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInt_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Int_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInt_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Int_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInt_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tmp1Row
            Get
                Return CType(Me.Rows(index),tmp1Row)
            End Get
        End Property
        
        Public Event tmp1RowChanging As tmp1RowChangeEventHandler
        
        Public Event tmp1RowChanged As tmp1RowChangeEventHandler
        
        Public Event tmp1RowDeleting As tmp1RowChangeEventHandler
        
        Public Event tmp1RowDeleted As tmp1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addtmp1Row(ByVal row As tmp1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addtmp1Row(ByVal ID As Integer, ByVal Txt1 As String, ByVal Int_1 As Integer, ByVal Int_2 As Integer, ByVal Int_3 As Integer) As tmp1Row
            Dim rowtmp1Row As tmp1Row = CType(Me.NewRow,tmp1Row)
            Dim columnValuesArray() As Object = New Object() {ID, Txt1, Int_1, Int_2, Int_3}
            rowtmp1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowtmp1Row)
            Return rowtmp1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByID(ByVal ID As Integer) As tmp1Row
            Return CType(Me.Rows.Find(New Object() {ID}),tmp1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tmp1DataTable = CType(MyBase.Clone,tmp1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tmp1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnTxt1 = MyBase.Columns("Txt1")
            Me.columnInt_1 = MyBase.Columns("Int_1")
            Me.columnInt_2 = MyBase.Columns("Int_2")
            Me.columnInt_3 = MyBase.Columns("Int_3")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnTxt1 = New Global.System.Data.DataColumn("Txt1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTxt1)
            Me.columnInt_1 = New Global.System.Data.DataColumn("Int_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInt_1)
            Me.columnInt_2 = New Global.System.Data.DataColumn("Int_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInt_2)
            Me.columnInt_3 = New Global.System.Data.DataColumn("Int_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInt_3)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsPur_SlsKey6", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newtmp1Row() As tmp1Row
            Return CType(Me.NewRow,tmp1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tmp1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tmp1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tmp1RowChangedEvent) Is Nothing) Then
                RaiseEvent tmp1RowChanged(Me, New tmp1RowChangeEvent(CType(e.Row,tmp1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tmp1RowChangingEvent) Is Nothing) Then
                RaiseEvent tmp1RowChanging(Me, New tmp1RowChangeEvent(CType(e.Row,tmp1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tmp1RowDeletedEvent) Is Nothing) Then
                RaiseEvent tmp1RowDeleted(Me, New tmp1RowChangeEvent(CType(e.Row,tmp1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tmp1RowDeletingEvent) Is Nothing) Then
                RaiseEvent tmp1RowDeleting(Me, New tmp1RowChangeEvent(CType(e.Row,tmp1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removetmp1Row(ByVal row As tmp1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tmp1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class products_undertitles_View1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnundertitles_id As Global.System.Data.DataColumn
        
        Private columnLanguage_ID As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "products_undertitles_View1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property undertitles_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnundertitles_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Language_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLanguage_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As products_undertitles_View1Row
            Get
                Return CType(Me.Rows(index),products_undertitles_View1Row)
            End Get
        End Property
        
        Public Event products_undertitles_View1RowChanging As products_undertitles_View1RowChangeEventHandler
        
        Public Event products_undertitles_View1RowChanged As products_undertitles_View1RowChangeEventHandler
        
        Public Event products_undertitles_View1RowDeleting As products_undertitles_View1RowChangeEventHandler
        
        Public Event products_undertitles_View1RowDeleted As products_undertitles_View1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addproducts_undertitles_View1Row(ByVal row As products_undertitles_View1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addproducts_undertitles_View1Row(ByVal products_id As Integer, ByVal undertitles_id As Integer, ByVal Language_ID As Integer, ByVal Description As String) As products_undertitles_View1Row
            Dim rowproducts_undertitles_View1Row As products_undertitles_View1Row = CType(Me.NewRow,products_undertitles_View1Row)
            Dim columnValuesArray() As Object = New Object() {products_id, undertitles_id, Language_ID, Description}
            rowproducts_undertitles_View1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowproducts_undertitles_View1Row)
            Return rowproducts_undertitles_View1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproducts_idundertitles_id(ByVal products_id As Integer, ByVal undertitles_id As Integer) As products_undertitles_View1Row
            Return CType(Me.Rows.Find(New Object() {products_id, undertitles_id}),products_undertitles_View1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As products_undertitles_View1DataTable = CType(MyBase.Clone,products_undertitles_View1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New products_undertitles_View1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnundertitles_id = MyBase.Columns("undertitles_id")
            Me.columnLanguage_ID = MyBase.Columns("Language_ID")
            Me.columnDescription = MyBase.Columns("Description")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnundertitles_id = New Global.System.Data.DataColumn("undertitles_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnundertitles_id)
            Me.columnLanguage_ID = New Global.System.Data.DataColumn("Language_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLanguage_ID)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsPur_SlsKey7", New Global.System.Data.DataColumn() {Me.columnproducts_id, Me.columnundertitles_id}, true))
            Me.columnproducts_id.AllowDBNull = false
            Me.columnundertitles_id.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newproducts_undertitles_View1Row() As products_undertitles_View1Row
            Return CType(Me.NewRow,products_undertitles_View1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New products_undertitles_View1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(products_undertitles_View1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.products_undertitles_View1RowChangedEvent) Is Nothing) Then
                RaiseEvent products_undertitles_View1RowChanged(Me, New products_undertitles_View1RowChangeEvent(CType(e.Row,products_undertitles_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.products_undertitles_View1RowChangingEvent) Is Nothing) Then
                RaiseEvent products_undertitles_View1RowChanging(Me, New products_undertitles_View1RowChangeEvent(CType(e.Row,products_undertitles_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.products_undertitles_View1RowDeletedEvent) Is Nothing) Then
                RaiseEvent products_undertitles_View1RowDeleted(Me, New products_undertitles_View1RowChangeEvent(CType(e.Row,products_undertitles_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.products_undertitles_View1RowDeletingEvent) Is Nothing) Then
                RaiseEvent products_undertitles_View1RowDeleting(Me, New products_undertitles_View1RowChangeEvent(CType(e.Row,products_undertitles_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeproducts_undertitles_View1Row(ByVal row As products_undertitles_View1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "products_undertitles_View1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class products_languages_View1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnlanguages_id As Global.System.Data.DataColumn
        
        Private columnLanguageNav_ID As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "products_languages_View1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property languages_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlanguages_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LanguageNav_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLanguageNav_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As products_languages_View1Row
            Get
                Return CType(Me.Rows(index),products_languages_View1Row)
            End Get
        End Property
        
        Public Event products_languages_View1RowChanging As products_languages_View1RowChangeEventHandler
        
        Public Event products_languages_View1RowChanged As products_languages_View1RowChangeEventHandler
        
        Public Event products_languages_View1RowDeleting As products_languages_View1RowChangeEventHandler
        
        Public Event products_languages_View1RowDeleted As products_languages_View1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addproducts_languages_View1Row(ByVal row As products_languages_View1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addproducts_languages_View1Row(ByVal products_id As Integer, ByVal languages_id As Integer, ByVal LanguageNav_ID As Integer, ByVal Description As String) As products_languages_View1Row
            Dim rowproducts_languages_View1Row As products_languages_View1Row = CType(Me.NewRow,products_languages_View1Row)
            Dim columnValuesArray() As Object = New Object() {products_id, languages_id, LanguageNav_ID, Description}
            rowproducts_languages_View1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowproducts_languages_View1Row)
            Return rowproducts_languages_View1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As products_languages_View1DataTable = CType(MyBase.Clone,products_languages_View1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New products_languages_View1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnlanguages_id = MyBase.Columns("languages_id")
            Me.columnLanguageNav_ID = MyBase.Columns("LanguageNav_ID")
            Me.columnDescription = MyBase.Columns("Description")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnlanguages_id = New Global.System.Data.DataColumn("languages_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanguages_id)
            Me.columnLanguageNav_ID = New Global.System.Data.DataColumn("LanguageNav_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLanguageNav_ID)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsPur_SlsKey8", New Global.System.Data.DataColumn() {Me.columnproducts_id, Me.columnlanguages_id}, false))
            Me.columnproducts_id.AllowDBNull = false
            Me.columnlanguages_id.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newproducts_languages_View1Row() As products_languages_View1Row
            Return CType(Me.NewRow,products_languages_View1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New products_languages_View1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(products_languages_View1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.products_languages_View1RowChangedEvent) Is Nothing) Then
                RaiseEvent products_languages_View1RowChanged(Me, New products_languages_View1RowChangeEvent(CType(e.Row,products_languages_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.products_languages_View1RowChangingEvent) Is Nothing) Then
                RaiseEvent products_languages_View1RowChanging(Me, New products_languages_View1RowChangeEvent(CType(e.Row,products_languages_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.products_languages_View1RowDeletedEvent) Is Nothing) Then
                RaiseEvent products_languages_View1RowDeleted(Me, New products_languages_View1RowChangeEvent(CType(e.Row,products_languages_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.products_languages_View1RowDeletingEvent) Is Nothing) Then
                RaiseEvent products_languages_View1RowDeleting(Me, New products_languages_View1RowChangeEvent(CType(e.Row,products_languages_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeproducts_languages_View1Row(ByVal row As products_languages_View1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "products_languages_View1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_Orders_AnaDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnproducts_quantity As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnimdb_id As Global.System.Data.DataColumn
        
        Private columnproducts_title As Global.System.Data.DataColumn
        
        Private columnproducts_image As Global.System.Data.DataColumn
        
        Private columnproducts_price As Global.System.Data.DataColumn
        
        Private columnproducts_date_added As Global.System.Data.DataColumn
        
        Private columnproducts_last_modified As Global.System.Data.DataColumn
        
        Private columnproducts_date_available As Global.System.Data.DataColumn
        
        Private columnproducts_weight As Global.System.Data.DataColumn
        
        Private columnproducts_status As Global.System.Data.DataColumn
        
        Private columnproducts_tax_class_id As Global.System.Data.DataColumn
        
        Private columnmanufacturers_id As Global.System.Data.DataColumn
        
        Private columnorders_type As Global.System.Data.DataColumn
        
        Private columnproducts_ordered As Global.System.Data.DataColumn
        
        Private columnproducts_public As Global.System.Data.DataColumn
        
        Private columnproducts_runtime As Global.System.Data.DataColumn
        
        Private columnproducts_year As Global.System.Data.DataColumn
        
        Private columnproducts_countries_id As Global.System.Data.DataColumn
        
        Private columnproducts_picture_format As Global.System.Data.DataColumn
        
        Private columnproducts_rating As Global.System.Data.DataColumn
        
        Private columnproducts_directors_id As Global.System.Data.DataColumn
        
        Private columnproducts_regional_code As Global.System.Data.DataColumn
        
        Private columnproducts_studio As Global.System.Data.DataColumn
        
        Private columnproducts_barcode As Global.System.Data.DataColumn
        
        Private columnproducts_dvd_quantity As Global.System.Data.DataColumn
        
        Private columnproducts_language_fr As Global.System.Data.DataColumn
        
        Private columnproducts_undertitle_nl As Global.System.Data.DataColumn
        
        Private columnin_the_bags As Global.System.Data.DataColumn
        
        Private columnin_the_bags_next As Global.System.Data.DataColumn
        
        Private columnin_cinema_now As Global.System.Data.DataColumn
        
        Private columnproducts_dvdpostchoice As Global.System.Data.DataColumn
        
        Private columnproducts_other_language As Global.System.Data.DataColumn
        
        Private columnproducts_french As Global.System.Data.DataColumn
        
        Private columnproducts_next As Global.System.Data.DataColumn
        
        Private columnproducts_tiscali_hp_fr As Global.System.Data.DataColumn
        
        Private columnproducts_tiscali_hp_nl As Global.System.Data.DataColumn
        
        Private columnproducts_series_id As Global.System.Data.DataColumn
        
        Private columnproducts_series_number As Global.System.Data.DataColumn
        
        Private columnproducts_series_aboprocess_id As Global.System.Data.DataColumn
        
        Private columnproducts_series_aboprocess_number As Global.System.Data.DataColumn
        
        Private columncinebel_id As Global.System.Data.DataColumn
        
        Private columncinebel_trailer As Global.System.Data.DataColumn
        
        Private columnfeesharing As Global.System.Data.DataColumn
        
        Private columnfeesharing_end As Global.System.Data.DataColumn
        
        Private columnfeesharing_upfront_fee As Global.System.Data.DataColumn
        
        Private columnfeesharing_upfront_fee_recoverable As Global.System.Data.DataColumn
        
        Private columnfeesharing_turn_price As Global.System.Data.DataColumn
        
        Private columnfeesharing_turn_price_after3month As Global.System.Data.DataColumn
        
        Private columnfeesharing_buy_option_price As Global.System.Data.DataColumn
        
        Private columnfeesharing_expected_nbr_turns As Global.System.Data.DataColumn
        
        Private columnproducts_desire As Global.System.Data.DataColumn
        
        Private columnproducts_desire_weighted As Global.System.Data.DataColumn
        
        Private columnproducts_availability As Global.System.Data.DataColumn
        
        Private columnquantity_to_sale As Global.System.Data.DataColumn
        
        Private columnproducts_sale_price As Global.System.Data.DataColumn
        
        Private columnproducts_sale_date As Global.System.Data.DataColumn
        
        Private columnorders_products_id As Global.System.Data.DataColumn
        
        Private columnorders_id As Global.System.Data.DataColumn
        
        Private columnop_products_model As Global.System.Data.DataColumn
        
        Private columnproducts_name As Global.System.Data.DataColumn
        
        Private columnop_products_price As Global.System.Data.DataColumn
        
        Private columnfinal_price As Global.System.Data.DataColumn
        
        Private columnproducts_tax As Global.System.Data.DataColumn
        
        Private columnop_products_qty As Global.System.Data.DataColumn
        
        Private columnproducts_dvd As Global.System.Data.DataColumn
        
        Private columnorders_products_status As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_name As Global.System.Data.DataColumn
        
        Private columncustomers_street_address As Global.System.Data.DataColumn
        
        Private columncustomers_suburb As Global.System.Data.DataColumn
        
        Private columncustomers_city As Global.System.Data.DataColumn
        
        Private columncustomers_postcode As Global.System.Data.DataColumn
        
        Private columncustomers_state As Global.System.Data.DataColumn
        
        Private columncustomers_country As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_address_format_id As Global.System.Data.DataColumn
        
        Private columndelivery_name As Global.System.Data.DataColumn
        
        Private columndelivery_street_address As Global.System.Data.DataColumn
        
        Private columndelivery_suburb As Global.System.Data.DataColumn
        
        Private columndelivery_city As Global.System.Data.DataColumn
        
        Private columndelivery_postcode As Global.System.Data.DataColumn
        
        Private columndelivery_state As Global.System.Data.DataColumn
        
        Private columndelivery_country As Global.System.Data.DataColumn
        
        Private columndelivery_address_format_id As Global.System.Data.DataColumn
        
        Private columnpayment_method As Global.System.Data.DataColumn
        
        Private columncc_type As Global.System.Data.DataColumn
        
        Private columncc_owner As Global.System.Data.DataColumn
        
        Private columncc_number As Global.System.Data.DataColumn
        
        Private columncc_expires As Global.System.Data.DataColumn
        
        Private columnlast_modified As Global.System.Data.DataColumn
        
        Private columndate_purchased As Global.System.Data.DataColumn
        
        Private columnorders_status As Global.System.Data.DataColumn
        
        Private columnorders_date_finished As Global.System.Data.DataColumn
        
        Private columncomments As Global.System.Data.DataColumn
        
        Private columncurrency As Global.System.Data.DataColumn
        
        Private columncurrency_value As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        Private columnsecured_mail As Global.System.Data.DataColumn
        
        Private columnmultishipment_sm As Global.System.Data.DataColumn
        
        Private columnstudio_name As Global.System.Data.DataColumn
        
        Private columncustomers_lang_id As Global.System.Data.DataColumn
        
        Private columnqty_at_home As Global.System.Data.DataColumn
        
        Private columnqty_credit As Global.System.Data.DataColumn
        
        Private columnproducts_media As Global.System.Data.DataColumn
        
        Private columnproducts_type As Global.System.Data.DataColumn
        
        Private columnpaidCust As Global.System.Data.DataColumn
        
        Private columnuser_modified As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_Orders_Ana"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_quantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imdb_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimdb_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_image
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_last_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_availableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_available
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_weightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tax_class_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tax_class_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property manufacturers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmanufacturers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_orderedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_ordered
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_publicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_public
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_runtimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_runtime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_yearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_countries_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_countries_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_picture_formatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_picture_format
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_ratingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_rating
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_directors_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_directors_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_regional_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_regional_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_studioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_studio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_barcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_barcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvd_quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvd_quantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_language_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_language_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_undertitle_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_undertitle_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_the_bagsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_the_bags
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_the_bags_nextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_the_bags_next
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_cinema_nowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_cinema_now
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvdpostchoiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvdpostchoice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_other_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_other_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_frenchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_french
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_nextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_next
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tiscali_hp_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tiscali_hp_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tiscali_hp_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tiscali_hp_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_aboprocess_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_aboprocess_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_aboprocess_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_aboprocess_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cinebel_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncinebel_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cinebel_trailerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncinebel_trailer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_endColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_end
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_upfront_feeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_upfront_fee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_upfront_fee_recoverableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_upfront_fee_recoverable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_turn_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_turn_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_turn_price_after3monthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_turn_price_after3month
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_buy_option_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_buy_option_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_expected_nbr_turnsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_expected_nbr_turns
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_desireColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_desire
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_desire_weightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_desire_weighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_availabilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_availability
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quantity_to_saleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquantity_to_sale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_sale_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_sale_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_sale_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_sale_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_products_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property op_products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnop_products_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property op_products_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnop_products_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property final_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfinal_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_taxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property op_products_qtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnop_products_qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_products_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_products_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_street_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_street_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_suburbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_suburb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_state
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_country
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_address_format_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_address_format_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_street_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_street_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_suburbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_suburb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_state
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_country
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_address_format_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_address_format_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_expiresColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_expires
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_purchasedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_purchased
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_date_finishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_date_finished
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property currencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncurrency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property currency_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncurrency_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property secured_mailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsecured_mail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property multishipment_smColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmultishipment_sm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property studio_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstudio_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lang_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lang_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property qty_at_homeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnqty_at_home
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property qty_creditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnqty_credit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_mediaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_media
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property paidCustColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaidCust
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property user_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuser_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_Orders_AnaRow
            Get
                Return CType(Me.Rows(index),VIEW_Orders_AnaRow)
            End Get
        End Property
        
        Public Event VIEW_Orders_AnaRowChanging As VIEW_Orders_AnaRowChangeEventHandler
        
        Public Event VIEW_Orders_AnaRowChanged As VIEW_Orders_AnaRowChangeEventHandler
        
        Public Event VIEW_Orders_AnaRowDeleting As VIEW_Orders_AnaRowChangeEventHandler
        
        Public Event VIEW_Orders_AnaRowDeleted As VIEW_Orders_AnaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_Orders_AnaRow(ByVal row As VIEW_Orders_AnaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_Orders_AnaRow( _
                    ByVal products_id As Integer,  _
                    ByVal products_quantity As Integer,  _
                    ByVal products_model As String,  _
                    ByVal imdb_id As Integer,  _
                    ByVal products_title As String,  _
                    ByVal products_image As String,  _
                    ByVal products_price As Decimal,  _
                    ByVal products_date_added As Date,  _
                    ByVal products_last_modified As Date,  _
                    ByVal products_date_available As Date,  _
                    ByVal products_weight As Integer,  _
                    ByVal products_status As Integer,  _
                    ByVal products_tax_class_id As Integer,  _
                    ByVal manufacturers_id As Integer,  _
                    ByVal orders_type As String,  _
                    ByVal products_ordered As Integer,  _
                    ByVal products_public As Integer,  _
                    ByVal products_runtime As Integer,  _
                    ByVal products_year As Integer,  _
                    ByVal products_countries_id As Integer,  _
                    ByVal products_picture_format As Integer,  _
                    ByVal products_rating As Integer,  _
                    ByVal products_directors_id As Integer,  _
                    ByVal products_regional_code As Integer,  _
                    ByVal products_studio As Integer,  _
                    ByVal products_barcode As Integer,  _
                    ByVal products_dvd_quantity As Integer,  _
                    ByVal products_language_fr As Integer,  _
                    ByVal products_undertitle_nl As Integer,  _
                    ByVal in_the_bags As Integer,  _
                    ByVal in_the_bags_next As Integer,  _
                    ByVal in_cinema_now As Integer,  _
                    ByVal products_dvdpostchoice As Integer,  _
                    ByVal products_other_language As Integer,  _
                    ByVal products_french As Integer,  _
                    ByVal products_next As Integer,  _
                    ByVal products_tiscali_hp_fr As Integer,  _
                    ByVal products_tiscali_hp_nl As Integer,  _
                    ByVal products_series_id As Integer,  _
                    ByVal products_series_number As Integer,  _
                    ByVal products_series_aboprocess_id As Integer,  _
                    ByVal products_series_aboprocess_number As Integer,  _
                    ByVal cinebel_id As Integer,  _
                    ByVal cinebel_trailer As Integer,  _
                    ByVal feesharing As Integer,  _
                    ByVal feesharing_end As Date,  _
                    ByVal feesharing_upfront_fee As Decimal,  _
                    ByVal feesharing_upfront_fee_recoverable As Integer,  _
                    ByVal feesharing_turn_price As Decimal,  _
                    ByVal feesharing_turn_price_after3month As Decimal,  _
                    ByVal feesharing_buy_option_price As Decimal,  _
                    ByVal feesharing_expected_nbr_turns As Integer,  _
                    ByVal products_desire As Integer,  _
                    ByVal products_desire_weighted As Decimal,  _
                    ByVal products_availability As Integer,  _
                    ByVal quantity_to_sale As Integer,  _
                    ByVal products_sale_price As Decimal,  _
                    ByVal products_sale_date As Date,  _
                    ByVal orders_id As Integer,  _
                    ByVal op_products_model As String,  _
                    ByVal products_name As String,  _
                    ByVal op_products_price As Decimal,  _
                    ByVal final_price As Decimal,  _
                    ByVal products_tax As Decimal,  _
                    ByVal op_products_qty As Integer,  _
                    ByVal products_dvd As Integer,  _
                    ByVal orders_products_status As Integer,  _
                    ByVal customers_id As Integer,  _
                    ByVal customers_name As String,  _
                    ByVal customers_street_address As String,  _
                    ByVal customers_suburb As String,  _
                    ByVal customers_city As String,  _
                    ByVal customers_postcode As String,  _
                    ByVal customers_state As String,  _
                    ByVal customers_country As String,  _
                    ByVal customers_telephone As String,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_address_format_id As Integer,  _
                    ByVal delivery_name As String,  _
                    ByVal delivery_street_address As String,  _
                    ByVal delivery_suburb As String,  _
                    ByVal delivery_city As String,  _
                    ByVal delivery_postcode As String,  _
                    ByVal delivery_state As String,  _
                    ByVal delivery_country As String,  _
                    ByVal delivery_address_format_id As Integer,  _
                    ByVal payment_method As String,  _
                    ByVal cc_type As String,  _
                    ByVal cc_owner As String,  _
                    ByVal cc_number As String,  _
                    ByVal cc_expires As String,  _
                    ByVal last_modified As Date,  _
                    ByVal date_purchased As Date,  _
                    ByVal orders_status As Integer,  _
                    ByVal orders_date_finished As Date,  _
                    ByVal comments As String,  _
                    ByVal currency As String,  _
                    ByVal currency_value As Decimal,  _
                    ByVal site As Integer,  _
                    ByVal secured_mail As Integer,  _
                    ByVal multishipment_sm As String,  _
                    ByVal studio_name As String,  _
                    ByVal customers_lang_id As Integer,  _
                    ByVal qty_at_home As Integer,  _
                    ByVal qty_credit As Integer,  _
                    ByVal products_media As String,  _
                    ByVal products_type As String,  _
                    ByVal paidCust As String,  _
                    ByVal user_modified As Integer) As VIEW_Orders_AnaRow
            Dim rowVIEW_Orders_AnaRow As VIEW_Orders_AnaRow = CType(Me.NewRow,VIEW_Orders_AnaRow)
            Dim columnValuesArray() As Object = New Object() {products_id, products_quantity, products_model, imdb_id, products_title, products_image, products_price, products_date_added, products_last_modified, products_date_available, products_weight, products_status, products_tax_class_id, manufacturers_id, orders_type, products_ordered, products_public, products_runtime, products_year, products_countries_id, products_picture_format, products_rating, products_directors_id, products_regional_code, products_studio, products_barcode, products_dvd_quantity, products_language_fr, products_undertitle_nl, in_the_bags, in_the_bags_next, in_cinema_now, products_dvdpostchoice, products_other_language, products_french, products_next, products_tiscali_hp_fr, products_tiscali_hp_nl, products_series_id, products_series_number, products_series_aboprocess_id, products_series_aboprocess_number, cinebel_id, cinebel_trailer, feesharing, feesharing_end, feesharing_upfront_fee, feesharing_upfront_fee_recoverable, feesharing_turn_price, feesharing_turn_price_after3month, feesharing_buy_option_price, feesharing_expected_nbr_turns, products_desire, products_desire_weighted, products_availability, quantity_to_sale, products_sale_price, products_sale_date, Nothing, orders_id, op_products_model, products_name, op_products_price, final_price, products_tax, op_products_qty, products_dvd, orders_products_status, customers_id, customers_name, customers_street_address, customers_suburb, customers_city, customers_postcode, customers_state, customers_country, customers_telephone, customers_email_address, customers_address_format_id, delivery_name, delivery_street_address, delivery_suburb, delivery_city, delivery_postcode, delivery_state, delivery_country, delivery_address_format_id, payment_method, cc_type, cc_owner, cc_number, cc_expires, last_modified, date_purchased, orders_status, orders_date_finished, comments, currency, currency_value, site, secured_mail, multishipment_sm, studio_name, customers_lang_id, qty_at_home, qty_credit, products_media, products_type, paidCust, user_modified}
            rowVIEW_Orders_AnaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_Orders_AnaRow)
            Return rowVIEW_Orders_AnaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_Orders_AnaDataTable = CType(MyBase.Clone,VIEW_Orders_AnaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_Orders_AnaDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnproducts_quantity = MyBase.Columns("products_quantity")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnimdb_id = MyBase.Columns("imdb_id")
            Me.columnproducts_title = MyBase.Columns("products_title")
            Me.columnproducts_image = MyBase.Columns("products_image")
            Me.columnproducts_price = MyBase.Columns("products_price")
            Me.columnproducts_date_added = MyBase.Columns("products_date_added")
            Me.columnproducts_last_modified = MyBase.Columns("products_last_modified")
            Me.columnproducts_date_available = MyBase.Columns("products_date_available")
            Me.columnproducts_weight = MyBase.Columns("products_weight")
            Me.columnproducts_status = MyBase.Columns("products_status")
            Me.columnproducts_tax_class_id = MyBase.Columns("products_tax_class_id")
            Me.columnmanufacturers_id = MyBase.Columns("manufacturers_id")
            Me.columnorders_type = MyBase.Columns("orders_type")
            Me.columnproducts_ordered = MyBase.Columns("products_ordered")
            Me.columnproducts_public = MyBase.Columns("products_public")
            Me.columnproducts_runtime = MyBase.Columns("products_runtime")
            Me.columnproducts_year = MyBase.Columns("products_year")
            Me.columnproducts_countries_id = MyBase.Columns("products_countries_id")
            Me.columnproducts_picture_format = MyBase.Columns("products_picture_format")
            Me.columnproducts_rating = MyBase.Columns("products_rating")
            Me.columnproducts_directors_id = MyBase.Columns("products_directors_id")
            Me.columnproducts_regional_code = MyBase.Columns("products_regional_code")
            Me.columnproducts_studio = MyBase.Columns("products_studio")
            Me.columnproducts_barcode = MyBase.Columns("products_barcode")
            Me.columnproducts_dvd_quantity = MyBase.Columns("products_dvd_quantity")
            Me.columnproducts_language_fr = MyBase.Columns("products_language_fr")
            Me.columnproducts_undertitle_nl = MyBase.Columns("products_undertitle_nl")
            Me.columnin_the_bags = MyBase.Columns("in_the_bags")
            Me.columnin_the_bags_next = MyBase.Columns("in_the_bags_next")
            Me.columnin_cinema_now = MyBase.Columns("in_cinema_now")
            Me.columnproducts_dvdpostchoice = MyBase.Columns("products_dvdpostchoice")
            Me.columnproducts_other_language = MyBase.Columns("products_other_language")
            Me.columnproducts_french = MyBase.Columns("products_french")
            Me.columnproducts_next = MyBase.Columns("products_next")
            Me.columnproducts_tiscali_hp_fr = MyBase.Columns("products_tiscali_hp_fr")
            Me.columnproducts_tiscali_hp_nl = MyBase.Columns("products_tiscali_hp_nl")
            Me.columnproducts_series_id = MyBase.Columns("products_series_id")
            Me.columnproducts_series_number = MyBase.Columns("products_series_number")
            Me.columnproducts_series_aboprocess_id = MyBase.Columns("products_series_aboprocess_id")
            Me.columnproducts_series_aboprocess_number = MyBase.Columns("products_series_aboprocess_number")
            Me.columncinebel_id = MyBase.Columns("cinebel_id")
            Me.columncinebel_trailer = MyBase.Columns("cinebel_trailer")
            Me.columnfeesharing = MyBase.Columns("feesharing")
            Me.columnfeesharing_end = MyBase.Columns("feesharing_end")
            Me.columnfeesharing_upfront_fee = MyBase.Columns("feesharing_upfront_fee")
            Me.columnfeesharing_upfront_fee_recoverable = MyBase.Columns("feesharing_upfront_fee_recoverable")
            Me.columnfeesharing_turn_price = MyBase.Columns("feesharing_turn_price")
            Me.columnfeesharing_turn_price_after3month = MyBase.Columns("feesharing_turn_price_after3month")
            Me.columnfeesharing_buy_option_price = MyBase.Columns("feesharing_buy_option_price")
            Me.columnfeesharing_expected_nbr_turns = MyBase.Columns("feesharing_expected_nbr_turns")
            Me.columnproducts_desire = MyBase.Columns("products_desire")
            Me.columnproducts_desire_weighted = MyBase.Columns("products_desire_weighted")
            Me.columnproducts_availability = MyBase.Columns("products_availability")
            Me.columnquantity_to_sale = MyBase.Columns("quantity_to_sale")
            Me.columnproducts_sale_price = MyBase.Columns("products_sale_price")
            Me.columnproducts_sale_date = MyBase.Columns("products_sale_date")
            Me.columnorders_products_id = MyBase.Columns("orders_products_id")
            Me.columnorders_id = MyBase.Columns("orders_id")
            Me.columnop_products_model = MyBase.Columns("op_products_model")
            Me.columnproducts_name = MyBase.Columns("products_name")
            Me.columnop_products_price = MyBase.Columns("op_products_price")
            Me.columnfinal_price = MyBase.Columns("final_price")
            Me.columnproducts_tax = MyBase.Columns("products_tax")
            Me.columnop_products_qty = MyBase.Columns("op_products_qty")
            Me.columnproducts_dvd = MyBase.Columns("products_dvd")
            Me.columnorders_products_status = MyBase.Columns("orders_products_status")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_name = MyBase.Columns("customers_name")
            Me.columncustomers_street_address = MyBase.Columns("customers_street_address")
            Me.columncustomers_suburb = MyBase.Columns("customers_suburb")
            Me.columncustomers_city = MyBase.Columns("customers_city")
            Me.columncustomers_postcode = MyBase.Columns("customers_postcode")
            Me.columncustomers_state = MyBase.Columns("customers_state")
            Me.columncustomers_country = MyBase.Columns("customers_country")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_address_format_id = MyBase.Columns("customers_address_format_id")
            Me.columndelivery_name = MyBase.Columns("delivery_name")
            Me.columndelivery_street_address = MyBase.Columns("delivery_street_address")
            Me.columndelivery_suburb = MyBase.Columns("delivery_suburb")
            Me.columndelivery_city = MyBase.Columns("delivery_city")
            Me.columndelivery_postcode = MyBase.Columns("delivery_postcode")
            Me.columndelivery_state = MyBase.Columns("delivery_state")
            Me.columndelivery_country = MyBase.Columns("delivery_country")
            Me.columndelivery_address_format_id = MyBase.Columns("delivery_address_format_id")
            Me.columnpayment_method = MyBase.Columns("payment_method")
            Me.columncc_type = MyBase.Columns("cc_type")
            Me.columncc_owner = MyBase.Columns("cc_owner")
            Me.columncc_number = MyBase.Columns("cc_number")
            Me.columncc_expires = MyBase.Columns("cc_expires")
            Me.columnlast_modified = MyBase.Columns("last_modified")
            Me.columndate_purchased = MyBase.Columns("date_purchased")
            Me.columnorders_status = MyBase.Columns("orders_status")
            Me.columnorders_date_finished = MyBase.Columns("orders_date_finished")
            Me.columncomments = MyBase.Columns("comments")
            Me.columncurrency = MyBase.Columns("currency")
            Me.columncurrency_value = MyBase.Columns("currency_value")
            Me.columnsite = MyBase.Columns("site")
            Me.columnsecured_mail = MyBase.Columns("secured_mail")
            Me.columnmultishipment_sm = MyBase.Columns("multishipment_sm")
            Me.columnstudio_name = MyBase.Columns("studio_name")
            Me.columncustomers_lang_id = MyBase.Columns("customers_lang_id")
            Me.columnqty_at_home = MyBase.Columns("qty_at_home")
            Me.columnqty_credit = MyBase.Columns("qty_credit")
            Me.columnproducts_media = MyBase.Columns("products_media")
            Me.columnproducts_type = MyBase.Columns("products_type")
            Me.columnpaidCust = MyBase.Columns("paidCust")
            Me.columnuser_modified = MyBase.Columns("user_modified")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnproducts_quantity = New Global.System.Data.DataColumn("products_quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_quantity)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnimdb_id = New Global.System.Data.DataColumn("imdb_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimdb_id)
            Me.columnproducts_title = New Global.System.Data.DataColumn("products_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_title)
            Me.columnproducts_image = New Global.System.Data.DataColumn("products_image", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_image)
            Me.columnproducts_price = New Global.System.Data.DataColumn("products_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_price)
            Me.columnproducts_date_added = New Global.System.Data.DataColumn("products_date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_added)
            Me.columnproducts_last_modified = New Global.System.Data.DataColumn("products_last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_last_modified)
            Me.columnproducts_date_available = New Global.System.Data.DataColumn("products_date_available", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_available)
            Me.columnproducts_weight = New Global.System.Data.DataColumn("products_weight", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_weight)
            Me.columnproducts_status = New Global.System.Data.DataColumn("products_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_status)
            Me.columnproducts_tax_class_id = New Global.System.Data.DataColumn("products_tax_class_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tax_class_id)
            Me.columnmanufacturers_id = New Global.System.Data.DataColumn("manufacturers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmanufacturers_id)
            Me.columnorders_type = New Global.System.Data.DataColumn("orders_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_type)
            Me.columnproducts_ordered = New Global.System.Data.DataColumn("products_ordered", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_ordered)
            Me.columnproducts_public = New Global.System.Data.DataColumn("products_public", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_public)
            Me.columnproducts_runtime = New Global.System.Data.DataColumn("products_runtime", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_runtime)
            Me.columnproducts_year = New Global.System.Data.DataColumn("products_year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_year)
            Me.columnproducts_countries_id = New Global.System.Data.DataColumn("products_countries_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_countries_id)
            Me.columnproducts_picture_format = New Global.System.Data.DataColumn("products_picture_format", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_picture_format)
            Me.columnproducts_rating = New Global.System.Data.DataColumn("products_rating", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_rating)
            Me.columnproducts_directors_id = New Global.System.Data.DataColumn("products_directors_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_directors_id)
            Me.columnproducts_regional_code = New Global.System.Data.DataColumn("products_regional_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_regional_code)
            Me.columnproducts_studio = New Global.System.Data.DataColumn("products_studio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_studio)
            Me.columnproducts_barcode = New Global.System.Data.DataColumn("products_barcode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_barcode)
            Me.columnproducts_dvd_quantity = New Global.System.Data.DataColumn("products_dvd_quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvd_quantity)
            Me.columnproducts_language_fr = New Global.System.Data.DataColumn("products_language_fr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_language_fr)
            Me.columnproducts_undertitle_nl = New Global.System.Data.DataColumn("products_undertitle_nl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_undertitle_nl)
            Me.columnin_the_bags = New Global.System.Data.DataColumn("in_the_bags", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_the_bags)
            Me.columnin_the_bags_next = New Global.System.Data.DataColumn("in_the_bags_next", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_the_bags_next)
            Me.columnin_cinema_now = New Global.System.Data.DataColumn("in_cinema_now", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_cinema_now)
            Me.columnproducts_dvdpostchoice = New Global.System.Data.DataColumn("products_dvdpostchoice", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvdpostchoice)
            Me.columnproducts_other_language = New Global.System.Data.DataColumn("products_other_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_other_language)
            Me.columnproducts_french = New Global.System.Data.DataColumn("products_french", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_french)
            Me.columnproducts_next = New Global.System.Data.DataColumn("products_next", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_next)
            Me.columnproducts_tiscali_hp_fr = New Global.System.Data.DataColumn("products_tiscali_hp_fr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tiscali_hp_fr)
            Me.columnproducts_tiscali_hp_nl = New Global.System.Data.DataColumn("products_tiscali_hp_nl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tiscali_hp_nl)
            Me.columnproducts_series_id = New Global.System.Data.DataColumn("products_series_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_id)
            Me.columnproducts_series_number = New Global.System.Data.DataColumn("products_series_number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_number)
            Me.columnproducts_series_aboprocess_id = New Global.System.Data.DataColumn("products_series_aboprocess_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_aboprocess_id)
            Me.columnproducts_series_aboprocess_number = New Global.System.Data.DataColumn("products_series_aboprocess_number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_aboprocess_number)
            Me.columncinebel_id = New Global.System.Data.DataColumn("cinebel_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncinebel_id)
            Me.columncinebel_trailer = New Global.System.Data.DataColumn("cinebel_trailer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncinebel_trailer)
            Me.columnfeesharing = New Global.System.Data.DataColumn("feesharing", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing)
            Me.columnfeesharing_end = New Global.System.Data.DataColumn("feesharing_end", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_end)
            Me.columnfeesharing_upfront_fee = New Global.System.Data.DataColumn("feesharing_upfront_fee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_upfront_fee)
            Me.columnfeesharing_upfront_fee_recoverable = New Global.System.Data.DataColumn("feesharing_upfront_fee_recoverable", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_upfront_fee_recoverable)
            Me.columnfeesharing_turn_price = New Global.System.Data.DataColumn("feesharing_turn_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_turn_price)
            Me.columnfeesharing_turn_price_after3month = New Global.System.Data.DataColumn("feesharing_turn_price_after3month", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_turn_price_after3month)
            Me.columnfeesharing_buy_option_price = New Global.System.Data.DataColumn("feesharing_buy_option_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_buy_option_price)
            Me.columnfeesharing_expected_nbr_turns = New Global.System.Data.DataColumn("feesharing_expected_nbr_turns", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_expected_nbr_turns)
            Me.columnproducts_desire = New Global.System.Data.DataColumn("products_desire", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_desire)
            Me.columnproducts_desire_weighted = New Global.System.Data.DataColumn("products_desire_weighted", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_desire_weighted)
            Me.columnproducts_availability = New Global.System.Data.DataColumn("products_availability", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_availability)
            Me.columnquantity_to_sale = New Global.System.Data.DataColumn("quantity_to_sale", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquantity_to_sale)
            Me.columnproducts_sale_price = New Global.System.Data.DataColumn("products_sale_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_sale_price)
            Me.columnproducts_sale_date = New Global.System.Data.DataColumn("products_sale_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_sale_date)
            Me.columnorders_products_id = New Global.System.Data.DataColumn("orders_products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_products_id)
            Me.columnorders_id = New Global.System.Data.DataColumn("orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_id)
            Me.columnop_products_model = New Global.System.Data.DataColumn("op_products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnop_products_model)
            Me.columnproducts_name = New Global.System.Data.DataColumn("products_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_name)
            Me.columnop_products_price = New Global.System.Data.DataColumn("op_products_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnop_products_price)
            Me.columnfinal_price = New Global.System.Data.DataColumn("final_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfinal_price)
            Me.columnproducts_tax = New Global.System.Data.DataColumn("products_tax", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tax)
            Me.columnop_products_qty = New Global.System.Data.DataColumn("op_products_qty", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnop_products_qty)
            Me.columnproducts_dvd = New Global.System.Data.DataColumn("products_dvd", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvd)
            Me.columnorders_products_status = New Global.System.Data.DataColumn("orders_products_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_products_status)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_name = New Global.System.Data.DataColumn("customers_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_name)
            Me.columncustomers_street_address = New Global.System.Data.DataColumn("customers_street_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_street_address)
            Me.columncustomers_suburb = New Global.System.Data.DataColumn("customers_suburb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_suburb)
            Me.columncustomers_city = New Global.System.Data.DataColumn("customers_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_city)
            Me.columncustomers_postcode = New Global.System.Data.DataColumn("customers_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_postcode)
            Me.columncustomers_state = New Global.System.Data.DataColumn("customers_state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_state)
            Me.columncustomers_country = New Global.System.Data.DataColumn("customers_country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_country)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_address_format_id = New Global.System.Data.DataColumn("customers_address_format_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_address_format_id)
            Me.columndelivery_name = New Global.System.Data.DataColumn("delivery_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_name)
            Me.columndelivery_street_address = New Global.System.Data.DataColumn("delivery_street_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_street_address)
            Me.columndelivery_suburb = New Global.System.Data.DataColumn("delivery_suburb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_suburb)
            Me.columndelivery_city = New Global.System.Data.DataColumn("delivery_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_city)
            Me.columndelivery_postcode = New Global.System.Data.DataColumn("delivery_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_postcode)
            Me.columndelivery_state = New Global.System.Data.DataColumn("delivery_state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_state)
            Me.columndelivery_country = New Global.System.Data.DataColumn("delivery_country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_country)
            Me.columndelivery_address_format_id = New Global.System.Data.DataColumn("delivery_address_format_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_address_format_id)
            Me.columnpayment_method = New Global.System.Data.DataColumn("payment_method", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayment_method)
            Me.columncc_type = New Global.System.Data.DataColumn("cc_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_type)
            Me.columncc_owner = New Global.System.Data.DataColumn("cc_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_owner)
            Me.columncc_number = New Global.System.Data.DataColumn("cc_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_number)
            Me.columncc_expires = New Global.System.Data.DataColumn("cc_expires", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_expires)
            Me.columnlast_modified = New Global.System.Data.DataColumn("last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_modified)
            Me.columndate_purchased = New Global.System.Data.DataColumn("date_purchased", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_purchased)
            Me.columnorders_status = New Global.System.Data.DataColumn("orders_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_status)
            Me.columnorders_date_finished = New Global.System.Data.DataColumn("orders_date_finished", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_date_finished)
            Me.columncomments = New Global.System.Data.DataColumn("comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomments)
            Me.columncurrency = New Global.System.Data.DataColumn("currency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurrency)
            Me.columncurrency_value = New Global.System.Data.DataColumn("currency_value", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurrency_value)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.columnsecured_mail = New Global.System.Data.DataColumn("secured_mail", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsecured_mail)
            Me.columnmultishipment_sm = New Global.System.Data.DataColumn("multishipment_sm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmultishipment_sm)
            Me.columnstudio_name = New Global.System.Data.DataColumn("studio_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstudio_name)
            Me.columncustomers_lang_id = New Global.System.Data.DataColumn("customers_lang_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lang_id)
            Me.columnqty_at_home = New Global.System.Data.DataColumn("qty_at_home", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnqty_at_home)
            Me.columnqty_credit = New Global.System.Data.DataColumn("qty_credit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnqty_credit)
            Me.columnproducts_media = New Global.System.Data.DataColumn("products_media", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_media)
            Me.columnproducts_type = New Global.System.Data.DataColumn("products_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_type)
            Me.columnpaidCust = New Global.System.Data.DataColumn("paidCust", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpaidCust)
            Me.columnuser_modified = New Global.System.Data.DataColumn("user_modified", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuser_modified)
            Me.columnorders_products_id.AutoIncrement = true
            Me.columnorders_products_id.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_Orders_AnaRow() As VIEW_Orders_AnaRow
            Return CType(Me.NewRow,VIEW_Orders_AnaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_Orders_AnaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_Orders_AnaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_Orders_AnaRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_Orders_AnaRowChanged(Me, New VIEW_Orders_AnaRowChangeEvent(CType(e.Row,VIEW_Orders_AnaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_Orders_AnaRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_Orders_AnaRowChanging(Me, New VIEW_Orders_AnaRowChangeEvent(CType(e.Row,VIEW_Orders_AnaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_Orders_AnaRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_Orders_AnaRowDeleted(Me, New VIEW_Orders_AnaRowChangeEvent(CType(e.Row,VIEW_Orders_AnaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_Orders_AnaRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_Orders_AnaRowDeleting(Me, New VIEW_Orders_AnaRowChangeEvent(CType(e.Row,VIEW_Orders_AnaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_Orders_AnaRow(ByVal row As VIEW_Orders_AnaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_Orders_AnaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_discount_anaDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columndiscount_code_id As Global.System.Data.DataColumn
        
        Private columndiscount_code As Global.System.Data.DataColumn
        
        Private columndiscount_type As Global.System.Data.DataColumn
        
        Private columndiscount_value As Global.System.Data.DataColumn
        
        Private columndiscount_limit As Global.System.Data.DataColumn
        
        Private columndiscount_commitment As Global.System.Data.DataColumn
        
        Private columndiscount_status As Global.System.Data.DataColumn
        
        Private columndiscount_text_fr As Global.System.Data.DataColumn
        
        Private columndiscount_text_nl As Global.System.Data.DataColumn
        
        Private columndiscount_text_en As Global.System.Data.DataColumn
        
        Private columndiscount_abo_validityto_type As Global.System.Data.DataColumn
        
        Private columndiscount_abo_validityto_value As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columndiscount_nbr_month_before_reuse As Global.System.Data.DataColumn
        
        Private columndiscount_recurring_nbr_of_month As Global.System.Data.DataColumn
        
        Private columnbypass_discountuse As Global.System.Data.DataColumn
        
        Private columndiscount_validityto As Global.System.Data.DataColumn
        
        Private columnpayable As Global.System.Data.DataColumn
        
        Private columndiscount_use_id As Global.System.Data.DataColumn
        
        Private columndiscount_use_date As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columndiscount_explained As Global.System.Data.DataColumn
        
        Private columncustomers_gender As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_dob As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_default_address_id As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columncustomers_telephone_evening As Global.System.Data.DataColumn
        
        Private columncustomers_fax As Global.System.Data.DataColumn
        
        Private columncustomers_password As Global.System.Data.DataColumn
        
        Private columncustomers_newsletter As Global.System.Data.DataColumn
        
        Private columncustomers_newsletterpartner As Global.System.Data.DataColumn
        
        Private columncustomers_privilege As Global.System.Data.DataColumn
        
        Private columncustomers_privilege_balance As Global.System.Data.DataColumn
        
        Private columncustomers_garantie As Global.System.Data.DataColumn
        
        Private columnsponsoring_code As Global.System.Data.DataColumn
        
        Private columnsponsored_code As Global.System.Data.DataColumn
        
        Private columncustomers_abo As Global.System.Data.DataColumn
        
        Private columncustomers_abo_suspended As Global.System.Data.DataColumn
        
        Private columncustomers_abo_type As Global.System.Data.DataColumn
        
        Private columnflagminiat1995 As Global.System.Data.DataColumn
        
        Private columncustomers_abo_method As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_adult As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_adult As Global.System.Data.DataColumn
        
        Private columnthrottling As Global.System.Data.DataColumn
        
        Private columncustomers_abo_validityto As Global.System.Data.DataColumn
        
        Private columncustomers_abo_rank As Global.System.Data.DataColumn
        
        Private columncustomers_abo_start_rentthismonth As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_credit As Global.System.Data.DataColumn
        
        Private columncustomers_abo_multishipment As Global.System.Data.DataColumn
        
        Private columncustomers_abo_discount_recurring_to_date As Global.System.Data.DataColumn
        
        Private columnabotested As Global.System.Data.DataColumn
        
        Private columncustomers_abo_status As Global.System.Data.DataColumn
        
        Private columncustomers_abo_payment_method As Global.System.Data.DataColumn
        
        Private columndomiciliation_status As Global.System.Data.DataColumn
        
        Private columndomiciliation_debiter_name As Global.System.Data.DataColumn
        
        Private columndomiciliation_number As Global.System.Data.DataColumn
        
        Private columndomiciliation_account_number As Global.System.Data.DataColumn
        
        Private columnadult_pwd As Global.System.Data.DataColumn
        
        Private columnogone_card_type As Global.System.Data.DataColumn
        
        Private columnogone_card_no As Global.System.Data.DataColumn
        
        Private columnogone_exp_date As Global.System.Data.DataColumn
        
        Private columnogone_owner As Global.System.Data.DataColumn
        
        Private columnogone_cc_expiration_status As Global.System.Data.DataColumn
        
        Private columnoffline_payment_status As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnvip As Global.System.Data.DataColumn
        
        Private columnblack_listed As Global.System.Data.DataColumn
        
        Private columnred_listed As Global.System.Data.DataColumn
        
        Private columnsm_eligible As Global.System.Data.DataColumn
        
        Private columncustomers_enquiry_id As Global.System.Data.DataColumn
        
        Private columndate_first_delivery As Global.System.Data.DataColumn
        
        Private columnmail_wl_adult_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmail_wl_norm_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmgm_points As Global.System.Data.DataColumn
        
        Private columnwishlist_kind As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_discount_ana"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_code_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_limitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_commitmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_commitment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_text_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_text_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_text_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_text_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_text_enColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_text_en
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_abo_validityto_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_abo_validityto_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_abo_validityto_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_abo_validityto_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_nbr_month_before_reuseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_nbr_month_before_reuse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_recurring_nbr_of_monthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_recurring_nbr_of_month
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bypass_discountuseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbypass_discountuse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_use_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_use_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_use_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_use_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_explainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_explained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_dob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_default_address_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_default_address_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephone_eveningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone_evening
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_fax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterpartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletterpartner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilegeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilege_balanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege_balance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_garantieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_garantie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsoring_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsoring_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsored_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsored_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_suspendedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_suspended
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property flagminiat1995Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnflagminiat1995
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property throttlingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnthrottling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_rankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_rank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_start_rentthismonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_start_rentthismonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_creditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_credit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_multishipmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_multishipment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_discount_recurring_to_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_discount_recurring_to_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abotestedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabotested
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_payment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_debiter_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_debiter_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_account_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_account_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property adult_pwdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadult_pwd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_exp_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_exp_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_cc_expiration_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_cc_expiration_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property offline_payment_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoffline_payment_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property black_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnblack_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property red_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnred_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sm_eligibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsm_eligible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_enquiry_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_enquiry_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_first_deliveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_first_delivery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_adult_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_adult_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_norm_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_norm_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mgm_pointsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmgm_points
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wishlist_kindColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwishlist_kind
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_discount_anaRow
            Get
                Return CType(Me.Rows(index),VIEW_discount_anaRow)
            End Get
        End Property
        
        Public Event VIEW_discount_anaRowChanging As VIEW_discount_anaRowChangeEventHandler
        
        Public Event VIEW_discount_anaRowChanged As VIEW_discount_anaRowChangeEventHandler
        
        Public Event VIEW_discount_anaRowDeleting As VIEW_discount_anaRowChangeEventHandler
        
        Public Event VIEW_discount_anaRowDeleted As VIEW_discount_anaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_discount_anaRow(ByVal row As VIEW_discount_anaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_discount_anaRow( _
                    ByVal discount_code As String,  _
                    ByVal discount_type As Integer,  _
                    ByVal discount_value As Decimal,  _
                    ByVal discount_limit As Integer,  _
                    ByVal discount_commitment As Integer,  _
                    ByVal discount_status As Integer,  _
                    ByVal discount_text_fr As String,  _
                    ByVal discount_text_nl As String,  _
                    ByVal discount_text_en As String,  _
                    ByVal discount_abo_validityto_type As Integer,  _
                    ByVal discount_abo_validityto_value As Integer,  _
                    ByVal comment As String,  _
                    ByVal discount_nbr_month_before_reuse As Integer,  _
                    ByVal discount_recurring_nbr_of_month As Integer,  _
                    ByVal bypass_discountuse As Integer,  _
                    ByVal discount_validityto As Date,  _
                    ByVal payable As Integer,  _
                    ByVal discount_use_date As Date,  _
                    ByVal customers_id As Integer,  _
                    ByVal discount_explained As String,  _
                    ByVal customers_gender As String,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_lastname As String,  _
                    ByVal customers_dob As Date,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_default_address_id As Integer,  _
                    ByVal customers_telephone As String,  _
                    ByVal customers_telephone_evening As String,  _
                    ByVal customers_fax As String,  _
                    ByVal customers_password As String,  _
                    ByVal customers_newsletter As String,  _
                    ByVal customers_newsletterpartner As String,  _
                    ByVal customers_privilege As Integer,  _
                    ByVal customers_privilege_balance As Decimal,  _
                    ByVal customers_garantie As Integer,  _
                    ByVal sponsoring_code As String,  _
                    ByVal sponsored_code As String,  _
                    ByVal customers_abo As Integer,  _
                    ByVal customers_abo_suspended As Integer,  _
                    ByVal customers_abo_type As Integer,  _
                    ByVal flagminiat1995 As Integer,  _
                    ByVal customers_abo_method As Integer,  _
                    ByVal customers_abo_dvd_norm As Integer,  _
                    ByVal customers_abo_dvd_adult As Integer,  _
                    ByVal customers_abo_dvd_home_norm As Integer,  _
                    ByVal customers_abo_dvd_home_adult As Integer,  _
                    ByVal throttling As Integer,  _
                    ByVal customers_abo_validityto As Date,  _
                    ByVal customers_abo_rank As Integer,  _
                    ByVal customers_abo_start_rentthismonth As Integer,  _
                    ByVal customers_abo_dvd_credit As Integer,  _
                    ByVal customers_abo_multishipment As Integer,  _
                    ByVal customers_abo_discount_recurring_to_date As Date,  _
                    ByVal abotested As Integer,  _
                    ByVal customers_abo_status As Integer,  _
                    ByVal customers_abo_payment_method As Integer,  _
                    ByVal domiciliation_status As Integer,  _
                    ByVal domiciliation_debiter_name As String,  _
                    ByVal domiciliation_number As String,  _
                    ByVal domiciliation_account_number As String,  _
                    ByVal adult_pwd As String,  _
                    ByVal ogone_card_type As String,  _
                    ByVal ogone_card_no As String,  _
                    ByVal ogone_exp_date As String,  _
                    ByVal ogone_owner As String,  _
                    ByVal ogone_cc_expiration_status As Integer,  _
                    ByVal offline_payment_status As Integer,  _
                    ByVal Expr1 As String,  _
                    ByVal vip As Integer,  _
                    ByVal black_listed As Integer,  _
                    ByVal red_listed As Integer,  _
                    ByVal sm_eligible As Integer,  _
                    ByVal customers_enquiry_id As Integer,  _
                    ByVal date_first_delivery As Date,  _
                    ByVal mail_wl_adult_not_sufficient As Date,  _
                    ByVal mail_wl_norm_not_sufficient As Date,  _
                    ByVal mgm_points As Integer,  _
                    ByVal wishlist_kind As Integer) As VIEW_discount_anaRow
            Dim rowVIEW_discount_anaRow As VIEW_discount_anaRow = CType(Me.NewRow,VIEW_discount_anaRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, discount_code, discount_type, discount_value, discount_limit, discount_commitment, discount_status, discount_text_fr, discount_text_nl, discount_text_en, discount_abo_validityto_type, discount_abo_validityto_value, comment, discount_nbr_month_before_reuse, discount_recurring_nbr_of_month, bypass_discountuse, discount_validityto, payable, Nothing, discount_use_date, customers_id, discount_explained, customers_gender, customers_firstname, customers_lastname, customers_dob, customers_email_address, customers_default_address_id, customers_telephone, customers_telephone_evening, customers_fax, customers_password, customers_newsletter, customers_newsletterpartner, customers_privilege, customers_privilege_balance, customers_garantie, sponsoring_code, sponsored_code, customers_abo, customers_abo_suspended, customers_abo_type, flagminiat1995, customers_abo_method, customers_abo_dvd_norm, customers_abo_dvd_adult, customers_abo_dvd_home_norm, customers_abo_dvd_home_adult, throttling, customers_abo_validityto, customers_abo_rank, customers_abo_start_rentthismonth, customers_abo_dvd_credit, customers_abo_multishipment, customers_abo_discount_recurring_to_date, abotested, customers_abo_status, customers_abo_payment_method, domiciliation_status, domiciliation_debiter_name, domiciliation_number, domiciliation_account_number, adult_pwd, ogone_card_type, ogone_card_no, ogone_exp_date, ogone_owner, ogone_cc_expiration_status, offline_payment_status, Expr1, vip, black_listed, red_listed, sm_eligible, customers_enquiry_id, date_first_delivery, mail_wl_adult_not_sufficient, mail_wl_norm_not_sufficient, mgm_points, wishlist_kind}
            rowVIEW_discount_anaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_discount_anaRow)
            Return rowVIEW_discount_anaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_discount_anaDataTable = CType(MyBase.Clone,VIEW_discount_anaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_discount_anaDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndiscount_code_id = MyBase.Columns("discount_code_id")
            Me.columndiscount_code = MyBase.Columns("discount_code")
            Me.columndiscount_type = MyBase.Columns("discount_type")
            Me.columndiscount_value = MyBase.Columns("discount_value")
            Me.columndiscount_limit = MyBase.Columns("discount_limit")
            Me.columndiscount_commitment = MyBase.Columns("discount_commitment")
            Me.columndiscount_status = MyBase.Columns("discount_status")
            Me.columndiscount_text_fr = MyBase.Columns("discount_text_fr")
            Me.columndiscount_text_nl = MyBase.Columns("discount_text_nl")
            Me.columndiscount_text_en = MyBase.Columns("discount_text_en")
            Me.columndiscount_abo_validityto_type = MyBase.Columns("discount_abo_validityto_type")
            Me.columndiscount_abo_validityto_value = MyBase.Columns("discount_abo_validityto_value")
            Me.columncomment = MyBase.Columns("comment")
            Me.columndiscount_nbr_month_before_reuse = MyBase.Columns("discount_nbr_month_before_reuse")
            Me.columndiscount_recurring_nbr_of_month = MyBase.Columns("discount_recurring_nbr_of_month")
            Me.columnbypass_discountuse = MyBase.Columns("bypass_discountuse")
            Me.columndiscount_validityto = MyBase.Columns("discount_validityto")
            Me.columnpayable = MyBase.Columns("payable")
            Me.columndiscount_use_id = MyBase.Columns("discount_use_id")
            Me.columndiscount_use_date = MyBase.Columns("discount_use_date")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columndiscount_explained = MyBase.Columns("discount_explained")
            Me.columncustomers_gender = MyBase.Columns("customers_gender")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_dob = MyBase.Columns("customers_dob")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_default_address_id = MyBase.Columns("customers_default_address_id")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columncustomers_telephone_evening = MyBase.Columns("customers_telephone_evening")
            Me.columncustomers_fax = MyBase.Columns("customers_fax")
            Me.columncustomers_password = MyBase.Columns("customers_password")
            Me.columncustomers_newsletter = MyBase.Columns("customers_newsletter")
            Me.columncustomers_newsletterpartner = MyBase.Columns("customers_newsletterpartner")
            Me.columncustomers_privilege = MyBase.Columns("customers_privilege")
            Me.columncustomers_privilege_balance = MyBase.Columns("customers_privilege_balance")
            Me.columncustomers_garantie = MyBase.Columns("customers_garantie")
            Me.columnsponsoring_code = MyBase.Columns("sponsoring_code")
            Me.columnsponsored_code = MyBase.Columns("sponsored_code")
            Me.columncustomers_abo = MyBase.Columns("customers_abo")
            Me.columncustomers_abo_suspended = MyBase.Columns("customers_abo_suspended")
            Me.columncustomers_abo_type = MyBase.Columns("customers_abo_type")
            Me.columnflagminiat1995 = MyBase.Columns("flagminiat1995")
            Me.columncustomers_abo_method = MyBase.Columns("customers_abo_method")
            Me.columncustomers_abo_dvd_norm = MyBase.Columns("customers_abo_dvd_norm")
            Me.columncustomers_abo_dvd_adult = MyBase.Columns("customers_abo_dvd_adult")
            Me.columncustomers_abo_dvd_home_norm = MyBase.Columns("customers_abo_dvd_home_norm")
            Me.columncustomers_abo_dvd_home_adult = MyBase.Columns("customers_abo_dvd_home_adult")
            Me.columnthrottling = MyBase.Columns("throttling")
            Me.columncustomers_abo_validityto = MyBase.Columns("customers_abo_validityto")
            Me.columncustomers_abo_rank = MyBase.Columns("customers_abo_rank")
            Me.columncustomers_abo_start_rentthismonth = MyBase.Columns("customers_abo_start_rentthismonth")
            Me.columncustomers_abo_dvd_credit = MyBase.Columns("customers_abo_dvd_credit")
            Me.columncustomers_abo_multishipment = MyBase.Columns("customers_abo_multishipment")
            Me.columncustomers_abo_discount_recurring_to_date = MyBase.Columns("customers_abo_discount_recurring_to_date")
            Me.columnabotested = MyBase.Columns("abotested")
            Me.columncustomers_abo_status = MyBase.Columns("customers_abo_status")
            Me.columncustomers_abo_payment_method = MyBase.Columns("customers_abo_payment_method")
            Me.columndomiciliation_status = MyBase.Columns("domiciliation_status")
            Me.columndomiciliation_debiter_name = MyBase.Columns("domiciliation_debiter_name")
            Me.columndomiciliation_number = MyBase.Columns("domiciliation_number")
            Me.columndomiciliation_account_number = MyBase.Columns("domiciliation_account_number")
            Me.columnadult_pwd = MyBase.Columns("adult_pwd")
            Me.columnogone_card_type = MyBase.Columns("ogone_card_type")
            Me.columnogone_card_no = MyBase.Columns("ogone_card_no")
            Me.columnogone_exp_date = MyBase.Columns("ogone_exp_date")
            Me.columnogone_owner = MyBase.Columns("ogone_owner")
            Me.columnogone_cc_expiration_status = MyBase.Columns("ogone_cc_expiration_status")
            Me.columnoffline_payment_status = MyBase.Columns("offline_payment_status")
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnvip = MyBase.Columns("vip")
            Me.columnblack_listed = MyBase.Columns("black_listed")
            Me.columnred_listed = MyBase.Columns("red_listed")
            Me.columnsm_eligible = MyBase.Columns("sm_eligible")
            Me.columncustomers_enquiry_id = MyBase.Columns("customers_enquiry_id")
            Me.columndate_first_delivery = MyBase.Columns("date_first_delivery")
            Me.columnmail_wl_adult_not_sufficient = MyBase.Columns("mail_wl_adult_not_sufficient")
            Me.columnmail_wl_norm_not_sufficient = MyBase.Columns("mail_wl_norm_not_sufficient")
            Me.columnmgm_points = MyBase.Columns("mgm_points")
            Me.columnwishlist_kind = MyBase.Columns("wishlist_kind")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndiscount_code_id = New Global.System.Data.DataColumn("discount_code_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code_id)
            Me.columndiscount_code = New Global.System.Data.DataColumn("discount_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code)
            Me.columndiscount_type = New Global.System.Data.DataColumn("discount_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_type)
            Me.columndiscount_value = New Global.System.Data.DataColumn("discount_value", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_value)
            Me.columndiscount_limit = New Global.System.Data.DataColumn("discount_limit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_limit)
            Me.columndiscount_commitment = New Global.System.Data.DataColumn("discount_commitment", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_commitment)
            Me.columndiscount_status = New Global.System.Data.DataColumn("discount_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_status)
            Me.columndiscount_text_fr = New Global.System.Data.DataColumn("discount_text_fr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_text_fr)
            Me.columndiscount_text_nl = New Global.System.Data.DataColumn("discount_text_nl", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_text_nl)
            Me.columndiscount_text_en = New Global.System.Data.DataColumn("discount_text_en", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_text_en)
            Me.columndiscount_abo_validityto_type = New Global.System.Data.DataColumn("discount_abo_validityto_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_abo_validityto_type)
            Me.columndiscount_abo_validityto_value = New Global.System.Data.DataColumn("discount_abo_validityto_value", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_abo_validityto_value)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columndiscount_nbr_month_before_reuse = New Global.System.Data.DataColumn("discount_nbr_month_before_reuse", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_nbr_month_before_reuse)
            Me.columndiscount_recurring_nbr_of_month = New Global.System.Data.DataColumn("discount_recurring_nbr_of_month", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_recurring_nbr_of_month)
            Me.columnbypass_discountuse = New Global.System.Data.DataColumn("bypass_discountuse", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbypass_discountuse)
            Me.columndiscount_validityto = New Global.System.Data.DataColumn("discount_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_validityto)
            Me.columnpayable = New Global.System.Data.DataColumn("payable", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayable)
            Me.columndiscount_use_id = New Global.System.Data.DataColumn("discount_use_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_use_id)
            Me.columndiscount_use_date = New Global.System.Data.DataColumn("discount_use_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_use_date)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columndiscount_explained = New Global.System.Data.DataColumn("discount_explained", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_explained)
            Me.columncustomers_gender = New Global.System.Data.DataColumn("customers_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_gender)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_dob = New Global.System.Data.DataColumn("customers_dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_dob)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_default_address_id = New Global.System.Data.DataColumn("customers_default_address_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_default_address_id)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columncustomers_telephone_evening = New Global.System.Data.DataColumn("customers_telephone_evening", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone_evening)
            Me.columncustomers_fax = New Global.System.Data.DataColumn("customers_fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_fax)
            Me.columncustomers_password = New Global.System.Data.DataColumn("customers_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_password)
            Me.columncustomers_newsletter = New Global.System.Data.DataColumn("customers_newsletter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletter)
            Me.columncustomers_newsletterpartner = New Global.System.Data.DataColumn("customers_newsletterpartner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletterpartner)
            Me.columncustomers_privilege = New Global.System.Data.DataColumn("customers_privilege", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege)
            Me.columncustomers_privilege_balance = New Global.System.Data.DataColumn("customers_privilege_balance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege_balance)
            Me.columncustomers_garantie = New Global.System.Data.DataColumn("customers_garantie", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_garantie)
            Me.columnsponsoring_code = New Global.System.Data.DataColumn("sponsoring_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsoring_code)
            Me.columnsponsored_code = New Global.System.Data.DataColumn("sponsored_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsored_code)
            Me.columncustomers_abo = New Global.System.Data.DataColumn("customers_abo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo)
            Me.columncustomers_abo_suspended = New Global.System.Data.DataColumn("customers_abo_suspended", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_suspended)
            Me.columncustomers_abo_type = New Global.System.Data.DataColumn("customers_abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_type)
            Me.columnflagminiat1995 = New Global.System.Data.DataColumn("flagminiat1995", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnflagminiat1995)
            Me.columncustomers_abo_method = New Global.System.Data.DataColumn("customers_abo_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_method)
            Me.columncustomers_abo_dvd_norm = New Global.System.Data.DataColumn("customers_abo_dvd_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_norm)
            Me.columncustomers_abo_dvd_adult = New Global.System.Data.DataColumn("customers_abo_dvd_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_adult)
            Me.columncustomers_abo_dvd_home_norm = New Global.System.Data.DataColumn("customers_abo_dvd_home_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_norm)
            Me.columncustomers_abo_dvd_home_adult = New Global.System.Data.DataColumn("customers_abo_dvd_home_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_adult)
            Me.columnthrottling = New Global.System.Data.DataColumn("throttling", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnthrottling)
            Me.columncustomers_abo_validityto = New Global.System.Data.DataColumn("customers_abo_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_validityto)
            Me.columncustomers_abo_rank = New Global.System.Data.DataColumn("customers_abo_rank", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_rank)
            Me.columncustomers_abo_start_rentthismonth = New Global.System.Data.DataColumn("customers_abo_start_rentthismonth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_start_rentthismonth)
            Me.columncustomers_abo_dvd_credit = New Global.System.Data.DataColumn("customers_abo_dvd_credit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_credit)
            Me.columncustomers_abo_multishipment = New Global.System.Data.DataColumn("customers_abo_multishipment", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_multishipment)
            Me.columncustomers_abo_discount_recurring_to_date = New Global.System.Data.DataColumn("customers_abo_discount_recurring_to_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_discount_recurring_to_date)
            Me.columnabotested = New Global.System.Data.DataColumn("abotested", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabotested)
            Me.columncustomers_abo_status = New Global.System.Data.DataColumn("customers_abo_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_status)
            Me.columncustomers_abo_payment_method = New Global.System.Data.DataColumn("customers_abo_payment_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_payment_method)
            Me.columndomiciliation_status = New Global.System.Data.DataColumn("domiciliation_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_status)
            Me.columndomiciliation_debiter_name = New Global.System.Data.DataColumn("domiciliation_debiter_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_debiter_name)
            Me.columndomiciliation_number = New Global.System.Data.DataColumn("domiciliation_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_number)
            Me.columndomiciliation_account_number = New Global.System.Data.DataColumn("domiciliation_account_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_account_number)
            Me.columnadult_pwd = New Global.System.Data.DataColumn("adult_pwd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadult_pwd)
            Me.columnogone_card_type = New Global.System.Data.DataColumn("ogone_card_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_type)
            Me.columnogone_card_no = New Global.System.Data.DataColumn("ogone_card_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_no)
            Me.columnogone_exp_date = New Global.System.Data.DataColumn("ogone_exp_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_exp_date)
            Me.columnogone_owner = New Global.System.Data.DataColumn("ogone_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_owner)
            Me.columnogone_cc_expiration_status = New Global.System.Data.DataColumn("ogone_cc_expiration_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_cc_expiration_status)
            Me.columnoffline_payment_status = New Global.System.Data.DataColumn("offline_payment_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoffline_payment_status)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnvip = New Global.System.Data.DataColumn("vip", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvip)
            Me.columnblack_listed = New Global.System.Data.DataColumn("black_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblack_listed)
            Me.columnred_listed = New Global.System.Data.DataColumn("red_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnred_listed)
            Me.columnsm_eligible = New Global.System.Data.DataColumn("sm_eligible", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsm_eligible)
            Me.columncustomers_enquiry_id = New Global.System.Data.DataColumn("customers_enquiry_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_enquiry_id)
            Me.columndate_first_delivery = New Global.System.Data.DataColumn("date_first_delivery", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_first_delivery)
            Me.columnmail_wl_adult_not_sufficient = New Global.System.Data.DataColumn("mail_wl_adult_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_adult_not_sufficient)
            Me.columnmail_wl_norm_not_sufficient = New Global.System.Data.DataColumn("mail_wl_norm_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_norm_not_sufficient)
            Me.columnmgm_points = New Global.System.Data.DataColumn("mgm_points", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmgm_points)
            Me.columnwishlist_kind = New Global.System.Data.DataColumn("wishlist_kind", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwishlist_kind)
            Me.columndiscount_code_id.AutoIncrement = true
            Me.columndiscount_code_id.AllowDBNull = false
            Me.columndiscount_code_id.ReadOnly = true
            Me.columndiscount_code.AllowDBNull = false
            Me.columndiscount_type.AllowDBNull = false
            Me.columndiscount_value.AllowDBNull = false
            Me.columndiscount_limit.AllowDBNull = false
            Me.columndiscount_commitment.AllowDBNull = false
            Me.columndiscount_status.AllowDBNull = false
            Me.columndiscount_text_fr.AllowDBNull = false
            Me.columndiscount_text_nl.AllowDBNull = false
            Me.columndiscount_text_en.AllowDBNull = false
            Me.columndiscount_abo_validityto_type.AllowDBNull = false
            Me.columndiscount_abo_validityto_value.AllowDBNull = false
            Me.columncomment.AllowDBNull = false
            Me.columndiscount_nbr_month_before_reuse.AllowDBNull = false
            Me.columndiscount_recurring_nbr_of_month.AllowDBNull = false
            Me.columnbypass_discountuse.AllowDBNull = false
            Me.columnpayable.AllowDBNull = false
            Me.columndiscount_use_id.AutoIncrement = true
            Me.columndiscount_use_id.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_discount_anaRow() As VIEW_discount_anaRow
            Return CType(Me.NewRow,VIEW_discount_anaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_discount_anaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_discount_anaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_discount_anaRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_discount_anaRowChanged(Me, New VIEW_discount_anaRowChangeEvent(CType(e.Row,VIEW_discount_anaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_discount_anaRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_discount_anaRowChanging(Me, New VIEW_discount_anaRowChangeEvent(CType(e.Row,VIEW_discount_anaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_discount_anaRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_discount_anaRowDeleted(Me, New VIEW_discount_anaRowChangeEvent(CType(e.Row,VIEW_discount_anaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_discount_anaRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_discount_anaRowDeleting(Me, New VIEW_discount_anaRowChangeEvent(CType(e.Row,VIEW_discount_anaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_discount_anaRow(ByVal row As VIEW_discount_anaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_discount_anaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class discount_codeDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columndiscount_code_id As Global.System.Data.DataColumn
        
        Private columndiscount_code As Global.System.Data.DataColumn
        
        Private columndiscount_type As Global.System.Data.DataColumn
        
        Private columndiscount_value As Global.System.Data.DataColumn
        
        Private columndiscount_limit As Global.System.Data.DataColumn
        
        Private columndiscount_commitment As Global.System.Data.DataColumn
        
        Private columndiscount_status As Global.System.Data.DataColumn
        
        Private columndiscount_text_fr As Global.System.Data.DataColumn
        
        Private columndiscount_text_nl As Global.System.Data.DataColumn
        
        Private columndiscount_text_en As Global.System.Data.DataColumn
        
        Private columndiscount_abo_validityto_type As Global.System.Data.DataColumn
        
        Private columndiscount_abo_validityto_value As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columndiscount_nbr_month_before_reuse As Global.System.Data.DataColumn
        
        Private columndiscount_recurring_nbr_of_month As Global.System.Data.DataColumn
        
        Private columnbypass_discountuse As Global.System.Data.DataColumn
        
        Private columndiscount_validityto As Global.System.Data.DataColumn
        
        Private columnpayable As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "discount_code"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_code_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_limitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_commitmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_commitment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_text_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_text_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_text_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_text_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_text_enColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_text_en
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_abo_validityto_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_abo_validityto_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_abo_validityto_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_abo_validityto_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_nbr_month_before_reuseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_nbr_month_before_reuse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_recurring_nbr_of_monthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_recurring_nbr_of_month
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bypass_discountuseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbypass_discountuse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As discount_codeRow
            Get
                Return CType(Me.Rows(index),discount_codeRow)
            End Get
        End Property
        
        Public Event discount_codeRowChanging As discount_codeRowChangeEventHandler
        
        Public Event discount_codeRowChanged As discount_codeRowChangeEventHandler
        
        Public Event discount_codeRowDeleting As discount_codeRowChangeEventHandler
        
        Public Event discount_codeRowDeleted As discount_codeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddiscount_codeRow(ByVal row As discount_codeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddiscount_codeRow( _
                    ByVal discount_code As String,  _
                    ByVal discount_type As Integer,  _
                    ByVal discount_value As Decimal,  _
                    ByVal discount_limit As Integer,  _
                    ByVal discount_commitment As Integer,  _
                    ByVal discount_status As Integer,  _
                    ByVal discount_text_fr As String,  _
                    ByVal discount_text_nl As String,  _
                    ByVal discount_text_en As String,  _
                    ByVal discount_abo_validityto_type As Integer,  _
                    ByVal discount_abo_validityto_value As Integer,  _
                    ByVal comment As String,  _
                    ByVal discount_nbr_month_before_reuse As Integer,  _
                    ByVal discount_recurring_nbr_of_month As Integer,  _
                    ByVal bypass_discountuse As Integer,  _
                    ByVal discount_validityto As Date,  _
                    ByVal payable As Integer) As discount_codeRow
            Dim rowdiscount_codeRow As discount_codeRow = CType(Me.NewRow,discount_codeRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, discount_code, discount_type, discount_value, discount_limit, discount_commitment, discount_status, discount_text_fr, discount_text_nl, discount_text_en, discount_abo_validityto_type, discount_abo_validityto_value, comment, discount_nbr_month_before_reuse, discount_recurring_nbr_of_month, bypass_discountuse, discount_validityto, payable}
            rowdiscount_codeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdiscount_codeRow)
            Return rowdiscount_codeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBydiscount_code_id(ByVal discount_code_id As Integer) As discount_codeRow
            Return CType(Me.Rows.Find(New Object() {discount_code_id}),discount_codeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As discount_codeDataTable = CType(MyBase.Clone,discount_codeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New discount_codeDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndiscount_code_id = MyBase.Columns("discount_code_id")
            Me.columndiscount_code = MyBase.Columns("discount_code")
            Me.columndiscount_type = MyBase.Columns("discount_type")
            Me.columndiscount_value = MyBase.Columns("discount_value")
            Me.columndiscount_limit = MyBase.Columns("discount_limit")
            Me.columndiscount_commitment = MyBase.Columns("discount_commitment")
            Me.columndiscount_status = MyBase.Columns("discount_status")
            Me.columndiscount_text_fr = MyBase.Columns("discount_text_fr")
            Me.columndiscount_text_nl = MyBase.Columns("discount_text_nl")
            Me.columndiscount_text_en = MyBase.Columns("discount_text_en")
            Me.columndiscount_abo_validityto_type = MyBase.Columns("discount_abo_validityto_type")
            Me.columndiscount_abo_validityto_value = MyBase.Columns("discount_abo_validityto_value")
            Me.columncomment = MyBase.Columns("comment")
            Me.columndiscount_nbr_month_before_reuse = MyBase.Columns("discount_nbr_month_before_reuse")
            Me.columndiscount_recurring_nbr_of_month = MyBase.Columns("discount_recurring_nbr_of_month")
            Me.columnbypass_discountuse = MyBase.Columns("bypass_discountuse")
            Me.columndiscount_validityto = MyBase.Columns("discount_validityto")
            Me.columnpayable = MyBase.Columns("payable")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndiscount_code_id = New Global.System.Data.DataColumn("discount_code_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code_id)
            Me.columndiscount_code = New Global.System.Data.DataColumn("discount_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code)
            Me.columndiscount_type = New Global.System.Data.DataColumn("discount_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_type)
            Me.columndiscount_value = New Global.System.Data.DataColumn("discount_value", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_value)
            Me.columndiscount_limit = New Global.System.Data.DataColumn("discount_limit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_limit)
            Me.columndiscount_commitment = New Global.System.Data.DataColumn("discount_commitment", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_commitment)
            Me.columndiscount_status = New Global.System.Data.DataColumn("discount_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_status)
            Me.columndiscount_text_fr = New Global.System.Data.DataColumn("discount_text_fr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_text_fr)
            Me.columndiscount_text_nl = New Global.System.Data.DataColumn("discount_text_nl", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_text_nl)
            Me.columndiscount_text_en = New Global.System.Data.DataColumn("discount_text_en", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_text_en)
            Me.columndiscount_abo_validityto_type = New Global.System.Data.DataColumn("discount_abo_validityto_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_abo_validityto_type)
            Me.columndiscount_abo_validityto_value = New Global.System.Data.DataColumn("discount_abo_validityto_value", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_abo_validityto_value)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columndiscount_nbr_month_before_reuse = New Global.System.Data.DataColumn("discount_nbr_month_before_reuse", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_nbr_month_before_reuse)
            Me.columndiscount_recurring_nbr_of_month = New Global.System.Data.DataColumn("discount_recurring_nbr_of_month", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_recurring_nbr_of_month)
            Me.columnbypass_discountuse = New Global.System.Data.DataColumn("bypass_discountuse", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbypass_discountuse)
            Me.columndiscount_validityto = New Global.System.Data.DataColumn("discount_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_validityto)
            Me.columnpayable = New Global.System.Data.DataColumn("payable", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayable)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsPur_SlsKey1", New Global.System.Data.DataColumn() {Me.columndiscount_code_id}, true))
            Me.columndiscount_code_id.AutoIncrement = true
            Me.columndiscount_code_id.AllowDBNull = false
            Me.columndiscount_code_id.ReadOnly = true
            Me.columndiscount_code_id.Unique = true
            Me.columndiscount_code.AllowDBNull = false
            Me.columndiscount_type.AllowDBNull = false
            Me.columndiscount_value.AllowDBNull = false
            Me.columndiscount_limit.AllowDBNull = false
            Me.columndiscount_commitment.AllowDBNull = false
            Me.columndiscount_status.AllowDBNull = false
            Me.columndiscount_text_fr.AllowDBNull = false
            Me.columndiscount_text_nl.AllowDBNull = false
            Me.columndiscount_text_en.AllowDBNull = false
            Me.columndiscount_abo_validityto_type.AllowDBNull = false
            Me.columndiscount_abo_validityto_value.AllowDBNull = false
            Me.columncomment.AllowDBNull = false
            Me.columndiscount_nbr_month_before_reuse.AllowDBNull = false
            Me.columndiscount_recurring_nbr_of_month.AllowDBNull = false
            Me.columnbypass_discountuse.AllowDBNull = false
            Me.columnpayable.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdiscount_codeRow() As discount_codeRow
            Return CType(Me.NewRow,discount_codeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New discount_codeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(discount_codeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.discount_codeRowChangedEvent) Is Nothing) Then
                RaiseEvent discount_codeRowChanged(Me, New discount_codeRowChangeEvent(CType(e.Row,discount_codeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.discount_codeRowChangingEvent) Is Nothing) Then
                RaiseEvent discount_codeRowChanging(Me, New discount_codeRowChangeEvent(CType(e.Row,discount_codeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.discount_codeRowDeletedEvent) Is Nothing) Then
                RaiseEvent discount_codeRowDeleted(Me, New discount_codeRowChangeEvent(CType(e.Row,discount_codeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.discount_codeRowDeletingEvent) Is Nothing) Then
                RaiseEvent discount_codeRowDeleting(Me, New discount_codeRowChangeEvent(CType(e.Row,discount_codeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removediscount_codeRow(ByVal row As discount_codeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "discount_codeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_FillCustForMailDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_gender As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_dob As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_default_address_id As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columncustomers_telephone_evening As Global.System.Data.DataColumn
        
        Private columncustomers_fax As Global.System.Data.DataColumn
        
        Private columncustomers_password As Global.System.Data.DataColumn
        
        Private columncustomers_newsletter As Global.System.Data.DataColumn
        
        Private columncustomers_newsletterpartner As Global.System.Data.DataColumn
        
        Private columncustomers_privilege As Global.System.Data.DataColumn
        
        Private columncustomers_privilege_balance As Global.System.Data.DataColumn
        
        Private columncustomers_garantie As Global.System.Data.DataColumn
        
        Private columnsponsoring_code As Global.System.Data.DataColumn
        
        Private columnsponsored_code As Global.System.Data.DataColumn
        
        Private columncustomers_abo As Global.System.Data.DataColumn
        
        Private columncustomers_abo_suspended As Global.System.Data.DataColumn
        
        Private columncustomers_abo_type As Global.System.Data.DataColumn
        
        Private columnflagminiat1995 As Global.System.Data.DataColumn
        
        Private columncustomers_abo_method As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_adult As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_adult As Global.System.Data.DataColumn
        
        Private columnthrottling As Global.System.Data.DataColumn
        
        Private columncustomers_abo_validityto As Global.System.Data.DataColumn
        
        Private columncustomers_abo_rank As Global.System.Data.DataColumn
        
        Private columncustomers_abo_start_rentthismonth As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_credit As Global.System.Data.DataColumn
        
        Private columncustomers_abo_multishipment As Global.System.Data.DataColumn
        
        Private columncustomers_abo_discount_recurring_to_date As Global.System.Data.DataColumn
        
        Private columnabotested As Global.System.Data.DataColumn
        
        Private columncustomers_abo_status As Global.System.Data.DataColumn
        
        Private columncustomers_abo_payment_method As Global.System.Data.DataColumn
        
        Private columndomiciliation_status As Global.System.Data.DataColumn
        
        Private columndomiciliation_debiter_name As Global.System.Data.DataColumn
        
        Private columndomiciliation_number As Global.System.Data.DataColumn
        
        Private columndomiciliation_account_number As Global.System.Data.DataColumn
        
        Private columnadult_pwd As Global.System.Data.DataColumn
        
        Private columnogone_card_type As Global.System.Data.DataColumn
        
        Private columnogone_card_no As Global.System.Data.DataColumn
        
        Private columnogone_exp_date As Global.System.Data.DataColumn
        
        Private columnogone_owner As Global.System.Data.DataColumn
        
        Private columnogone_cc_expiration_status As Global.System.Data.DataColumn
        
        Private columnoffline_payment_status As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columnvip As Global.System.Data.DataColumn
        
        Private columnblack_listed As Global.System.Data.DataColumn
        
        Private columnred_listed As Global.System.Data.DataColumn
        
        Private columnsm_eligible As Global.System.Data.DataColumn
        
        Private columncustomers_enquiry_id As Global.System.Data.DataColumn
        
        Private columndate_first_delivery As Global.System.Data.DataColumn
        
        Private columnmail_wl_adult_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmail_wl_norm_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmgm_points As Global.System.Data.DataColumn
        
        Private columnwishlist_kind As Global.System.Data.DataColumn
        
        Private columnabo_action As Global.System.Data.DataColumn
        
        Private columncode_id As Global.System.Data.DataColumn
        
        Private columnabo_last_action_id As Global.System.Data.DataColumn
        
        Private columnabo_action_count As Global.System.Data.DataColumn
        
        Private columnabo_action_id_list As Global.System.Data.DataColumn
        
        Private columnabo_action_name_list As Global.System.Data.DataColumn
        
        Private columnabo_last_action_name As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_of_last_logon As Global.System.Data.DataColumn
        
        Private columncustomers_info_number_of_logons As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_account_created As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_account_last_modified As Global.System.Data.DataColumn
        
        Private columnglobal_product_notifications As Global.System.Data.DataColumn
        
        Private columncustomers_language As Global.System.Data.DataColumn
        
        Private columnpartners_id As Global.System.Data.DataColumn
        
        Private columnbelgiqueloisirs_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_FillCustForMail"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_dob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_default_address_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_default_address_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephone_eveningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone_evening
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_fax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterpartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletterpartner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilegeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilege_balanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege_balance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_garantieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_garantie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsoring_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsoring_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsored_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsored_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_suspendedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_suspended
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property flagminiat1995Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnflagminiat1995
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property throttlingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnthrottling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_rankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_rank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_start_rentthismonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_start_rentthismonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_creditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_credit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_multishipmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_multishipment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_discount_recurring_to_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_discount_recurring_to_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abotestedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabotested
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_payment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_debiter_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_debiter_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_account_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_account_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property adult_pwdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadult_pwd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_exp_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_exp_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_cc_expiration_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_cc_expiration_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property offline_payment_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoffline_payment_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property black_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnblack_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property red_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnred_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sm_eligibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsm_eligible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_enquiry_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_enquiry_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_first_deliveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_first_delivery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_adult_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_adult_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_norm_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_norm_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mgm_pointsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmgm_points
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wishlist_kindColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwishlist_kind
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_actionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_action
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_last_action_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_last_action_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_action_countColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_action_count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_action_id_listColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_action_id_list
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_action_name_listColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_action_name_list
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_last_action_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_last_action_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_of_last_logonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_of_last_logon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_number_of_logonsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_number_of_logons
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_account_createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_account_created
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_account_last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_account_last_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property global_product_notificationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnglobal_product_notifications
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property partners_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartners_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property belgiqueloisirs_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbelgiqueloisirs_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_FillCustForMailRow
            Get
                Return CType(Me.Rows(index),VIEW_FillCustForMailRow)
            End Get
        End Property
        
        Public Event VIEW_FillCustForMailRowChanging As VIEW_FillCustForMailRowChangeEventHandler
        
        Public Event VIEW_FillCustForMailRowChanged As VIEW_FillCustForMailRowChangeEventHandler
        
        Public Event VIEW_FillCustForMailRowDeleting As VIEW_FillCustForMailRowChangeEventHandler
        
        Public Event VIEW_FillCustForMailRowDeleted As VIEW_FillCustForMailRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_FillCustForMailRow(ByVal row As VIEW_FillCustForMailRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_FillCustForMailRow( _
                    ByVal customers_gender As String,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_lastname As String,  _
                    ByVal customers_dob As Date,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_default_address_id As Integer,  _
                    ByVal customers_telephone As String,  _
                    ByVal customers_telephone_evening As String,  _
                    ByVal customers_fax As String,  _
                    ByVal customers_password As String,  _
                    ByVal customers_newsletter As String,  _
                    ByVal customers_newsletterpartner As String,  _
                    ByVal customers_privilege As Integer,  _
                    ByVal customers_privilege_balance As Decimal,  _
                    ByVal customers_garantie As Integer,  _
                    ByVal sponsoring_code As String,  _
                    ByVal sponsored_code As String,  _
                    ByVal customers_abo As Integer,  _
                    ByVal customers_abo_suspended As Integer,  _
                    ByVal customers_abo_type As Integer,  _
                    ByVal flagminiat1995 As Integer,  _
                    ByVal customers_abo_method As Integer,  _
                    ByVal customers_abo_dvd_norm As Integer,  _
                    ByVal customers_abo_dvd_adult As Integer,  _
                    ByVal customers_abo_dvd_home_norm As Integer,  _
                    ByVal customers_abo_dvd_home_adult As Integer,  _
                    ByVal throttling As Integer,  _
                    ByVal customers_abo_validityto As Date,  _
                    ByVal customers_abo_rank As Integer,  _
                    ByVal customers_abo_start_rentthismonth As Integer,  _
                    ByVal customers_abo_dvd_credit As Integer,  _
                    ByVal customers_abo_multishipment As Integer,  _
                    ByVal customers_abo_discount_recurring_to_date As Date,  _
                    ByVal abotested As Integer,  _
                    ByVal customers_abo_status As Integer,  _
                    ByVal customers_abo_payment_method As Integer,  _
                    ByVal domiciliation_status As Integer,  _
                    ByVal domiciliation_debiter_name As String,  _
                    ByVal domiciliation_number As String,  _
                    ByVal domiciliation_account_number As String,  _
                    ByVal adult_pwd As String,  _
                    ByVal ogone_card_type As String,  _
                    ByVal ogone_card_no As String,  _
                    ByVal ogone_exp_date As String,  _
                    ByVal ogone_owner As String,  _
                    ByVal ogone_cc_expiration_status As Integer,  _
                    ByVal offline_payment_status As Integer,  _
                    ByVal comment As String,  _
                    ByVal vip As Integer,  _
                    ByVal black_listed As Integer,  _
                    ByVal red_listed As Integer,  _
                    ByVal sm_eligible As Integer,  _
                    ByVal customers_enquiry_id As Integer,  _
                    ByVal date_first_delivery As Date,  _
                    ByVal mail_wl_adult_not_sufficient As Date,  _
                    ByVal mail_wl_norm_not_sufficient As Date,  _
                    ByVal mgm_points As Integer,  _
                    ByVal wishlist_kind As Integer,  _
                    ByVal abo_action As Integer,  _
                    ByVal code_id As Integer,  _
                    ByVal abo_last_action_id As Integer,  _
                    ByVal abo_action_count As Integer,  _
                    ByVal abo_action_id_list As String,  _
                    ByVal abo_action_name_list As String,  _
                    ByVal abo_last_action_name As String,  _
                    ByVal customers_info_date_of_last_logon As Date,  _
                    ByVal customers_info_number_of_logons As Integer,  _
                    ByVal customers_info_date_account_created As Date,  _
                    ByVal customers_info_date_account_last_modified As Date,  _
                    ByVal global_product_notifications As Integer,  _
                    ByVal customers_language As Integer,  _
                    ByVal partners_id As Integer,  _
                    ByVal belgiqueloisirs_id As String) As VIEW_FillCustForMailRow
            Dim rowVIEW_FillCustForMailRow As VIEW_FillCustForMailRow = CType(Me.NewRow,VIEW_FillCustForMailRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customers_gender, customers_firstname, customers_lastname, customers_dob, customers_email_address, customers_default_address_id, customers_telephone, customers_telephone_evening, customers_fax, customers_password, customers_newsletter, customers_newsletterpartner, customers_privilege, customers_privilege_balance, customers_garantie, sponsoring_code, sponsored_code, customers_abo, customers_abo_suspended, customers_abo_type, flagminiat1995, customers_abo_method, customers_abo_dvd_norm, customers_abo_dvd_adult, customers_abo_dvd_home_norm, customers_abo_dvd_home_adult, throttling, customers_abo_validityto, customers_abo_rank, customers_abo_start_rentthismonth, customers_abo_dvd_credit, customers_abo_multishipment, customers_abo_discount_recurring_to_date, abotested, customers_abo_status, customers_abo_payment_method, domiciliation_status, domiciliation_debiter_name, domiciliation_number, domiciliation_account_number, adult_pwd, ogone_card_type, ogone_card_no, ogone_exp_date, ogone_owner, ogone_cc_expiration_status, offline_payment_status, comment, vip, black_listed, red_listed, sm_eligible, customers_enquiry_id, date_first_delivery, mail_wl_adult_not_sufficient, mail_wl_norm_not_sufficient, mgm_points, wishlist_kind, abo_action, code_id, abo_last_action_id, abo_action_count, abo_action_id_list, abo_action_name_list, abo_last_action_name, customers_info_date_of_last_logon, customers_info_number_of_logons, customers_info_date_account_created, customers_info_date_account_last_modified, global_product_notifications, customers_language, partners_id, belgiqueloisirs_id}
            rowVIEW_FillCustForMailRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_FillCustForMailRow)
            Return rowVIEW_FillCustForMailRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_FillCustForMailDataTable = CType(MyBase.Clone,VIEW_FillCustForMailDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_FillCustForMailDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_gender = MyBase.Columns("customers_gender")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_dob = MyBase.Columns("customers_dob")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_default_address_id = MyBase.Columns("customers_default_address_id")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columncustomers_telephone_evening = MyBase.Columns("customers_telephone_evening")
            Me.columncustomers_fax = MyBase.Columns("customers_fax")
            Me.columncustomers_password = MyBase.Columns("customers_password")
            Me.columncustomers_newsletter = MyBase.Columns("customers_newsletter")
            Me.columncustomers_newsletterpartner = MyBase.Columns("customers_newsletterpartner")
            Me.columncustomers_privilege = MyBase.Columns("customers_privilege")
            Me.columncustomers_privilege_balance = MyBase.Columns("customers_privilege_balance")
            Me.columncustomers_garantie = MyBase.Columns("customers_garantie")
            Me.columnsponsoring_code = MyBase.Columns("sponsoring_code")
            Me.columnsponsored_code = MyBase.Columns("sponsored_code")
            Me.columncustomers_abo = MyBase.Columns("customers_abo")
            Me.columncustomers_abo_suspended = MyBase.Columns("customers_abo_suspended")
            Me.columncustomers_abo_type = MyBase.Columns("customers_abo_type")
            Me.columnflagminiat1995 = MyBase.Columns("flagminiat1995")
            Me.columncustomers_abo_method = MyBase.Columns("customers_abo_method")
            Me.columncustomers_abo_dvd_norm = MyBase.Columns("customers_abo_dvd_norm")
            Me.columncustomers_abo_dvd_adult = MyBase.Columns("customers_abo_dvd_adult")
            Me.columncustomers_abo_dvd_home_norm = MyBase.Columns("customers_abo_dvd_home_norm")
            Me.columncustomers_abo_dvd_home_adult = MyBase.Columns("customers_abo_dvd_home_adult")
            Me.columnthrottling = MyBase.Columns("throttling")
            Me.columncustomers_abo_validityto = MyBase.Columns("customers_abo_validityto")
            Me.columncustomers_abo_rank = MyBase.Columns("customers_abo_rank")
            Me.columncustomers_abo_start_rentthismonth = MyBase.Columns("customers_abo_start_rentthismonth")
            Me.columncustomers_abo_dvd_credit = MyBase.Columns("customers_abo_dvd_credit")
            Me.columncustomers_abo_multishipment = MyBase.Columns("customers_abo_multishipment")
            Me.columncustomers_abo_discount_recurring_to_date = MyBase.Columns("customers_abo_discount_recurring_to_date")
            Me.columnabotested = MyBase.Columns("abotested")
            Me.columncustomers_abo_status = MyBase.Columns("customers_abo_status")
            Me.columncustomers_abo_payment_method = MyBase.Columns("customers_abo_payment_method")
            Me.columndomiciliation_status = MyBase.Columns("domiciliation_status")
            Me.columndomiciliation_debiter_name = MyBase.Columns("domiciliation_debiter_name")
            Me.columndomiciliation_number = MyBase.Columns("domiciliation_number")
            Me.columndomiciliation_account_number = MyBase.Columns("domiciliation_account_number")
            Me.columnadult_pwd = MyBase.Columns("adult_pwd")
            Me.columnogone_card_type = MyBase.Columns("ogone_card_type")
            Me.columnogone_card_no = MyBase.Columns("ogone_card_no")
            Me.columnogone_exp_date = MyBase.Columns("ogone_exp_date")
            Me.columnogone_owner = MyBase.Columns("ogone_owner")
            Me.columnogone_cc_expiration_status = MyBase.Columns("ogone_cc_expiration_status")
            Me.columnoffline_payment_status = MyBase.Columns("offline_payment_status")
            Me.columncomment = MyBase.Columns("comment")
            Me.columnvip = MyBase.Columns("vip")
            Me.columnblack_listed = MyBase.Columns("black_listed")
            Me.columnred_listed = MyBase.Columns("red_listed")
            Me.columnsm_eligible = MyBase.Columns("sm_eligible")
            Me.columncustomers_enquiry_id = MyBase.Columns("customers_enquiry_id")
            Me.columndate_first_delivery = MyBase.Columns("date_first_delivery")
            Me.columnmail_wl_adult_not_sufficient = MyBase.Columns("mail_wl_adult_not_sufficient")
            Me.columnmail_wl_norm_not_sufficient = MyBase.Columns("mail_wl_norm_not_sufficient")
            Me.columnmgm_points = MyBase.Columns("mgm_points")
            Me.columnwishlist_kind = MyBase.Columns("wishlist_kind")
            Me.columnabo_action = MyBase.Columns("abo_action")
            Me.columncode_id = MyBase.Columns("code_id")
            Me.columnabo_last_action_id = MyBase.Columns("abo_last_action_id")
            Me.columnabo_action_count = MyBase.Columns("abo_action_count")
            Me.columnabo_action_id_list = MyBase.Columns("abo_action_id_list")
            Me.columnabo_action_name_list = MyBase.Columns("abo_action_name_list")
            Me.columnabo_last_action_name = MyBase.Columns("abo_last_action_name")
            Me.columncustomers_info_date_of_last_logon = MyBase.Columns("customers_info_date_of_last_logon")
            Me.columncustomers_info_number_of_logons = MyBase.Columns("customers_info_number_of_logons")
            Me.columncustomers_info_date_account_created = MyBase.Columns("customers_info_date_account_created")
            Me.columncustomers_info_date_account_last_modified = MyBase.Columns("customers_info_date_account_last_modified")
            Me.columnglobal_product_notifications = MyBase.Columns("global_product_notifications")
            Me.columncustomers_language = MyBase.Columns("customers_language")
            Me.columnpartners_id = MyBase.Columns("partners_id")
            Me.columnbelgiqueloisirs_id = MyBase.Columns("belgiqueloisirs_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_gender = New Global.System.Data.DataColumn("customers_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_gender)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_dob = New Global.System.Data.DataColumn("customers_dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_dob)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_default_address_id = New Global.System.Data.DataColumn("customers_default_address_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_default_address_id)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columncustomers_telephone_evening = New Global.System.Data.DataColumn("customers_telephone_evening", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone_evening)
            Me.columncustomers_fax = New Global.System.Data.DataColumn("customers_fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_fax)
            Me.columncustomers_password = New Global.System.Data.DataColumn("customers_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_password)
            Me.columncustomers_newsletter = New Global.System.Data.DataColumn("customers_newsletter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletter)
            Me.columncustomers_newsletterpartner = New Global.System.Data.DataColumn("customers_newsletterpartner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletterpartner)
            Me.columncustomers_privilege = New Global.System.Data.DataColumn("customers_privilege", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege)
            Me.columncustomers_privilege_balance = New Global.System.Data.DataColumn("customers_privilege_balance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege_balance)
            Me.columncustomers_garantie = New Global.System.Data.DataColumn("customers_garantie", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_garantie)
            Me.columnsponsoring_code = New Global.System.Data.DataColumn("sponsoring_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsoring_code)
            Me.columnsponsored_code = New Global.System.Data.DataColumn("sponsored_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsored_code)
            Me.columncustomers_abo = New Global.System.Data.DataColumn("customers_abo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo)
            Me.columncustomers_abo_suspended = New Global.System.Data.DataColumn("customers_abo_suspended", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_suspended)
            Me.columncustomers_abo_type = New Global.System.Data.DataColumn("customers_abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_type)
            Me.columnflagminiat1995 = New Global.System.Data.DataColumn("flagminiat1995", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnflagminiat1995)
            Me.columncustomers_abo_method = New Global.System.Data.DataColumn("customers_abo_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_method)
            Me.columncustomers_abo_dvd_norm = New Global.System.Data.DataColumn("customers_abo_dvd_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_norm)
            Me.columncustomers_abo_dvd_adult = New Global.System.Data.DataColumn("customers_abo_dvd_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_adult)
            Me.columncustomers_abo_dvd_home_norm = New Global.System.Data.DataColumn("customers_abo_dvd_home_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_norm)
            Me.columncustomers_abo_dvd_home_adult = New Global.System.Data.DataColumn("customers_abo_dvd_home_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_adult)
            Me.columnthrottling = New Global.System.Data.DataColumn("throttling", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnthrottling)
            Me.columncustomers_abo_validityto = New Global.System.Data.DataColumn("customers_abo_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_validityto)
            Me.columncustomers_abo_rank = New Global.System.Data.DataColumn("customers_abo_rank", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_rank)
            Me.columncustomers_abo_start_rentthismonth = New Global.System.Data.DataColumn("customers_abo_start_rentthismonth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_start_rentthismonth)
            Me.columncustomers_abo_dvd_credit = New Global.System.Data.DataColumn("customers_abo_dvd_credit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_credit)
            Me.columncustomers_abo_multishipment = New Global.System.Data.DataColumn("customers_abo_multishipment", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_multishipment)
            Me.columncustomers_abo_discount_recurring_to_date = New Global.System.Data.DataColumn("customers_abo_discount_recurring_to_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_discount_recurring_to_date)
            Me.columnabotested = New Global.System.Data.DataColumn("abotested", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabotested)
            Me.columncustomers_abo_status = New Global.System.Data.DataColumn("customers_abo_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_status)
            Me.columncustomers_abo_payment_method = New Global.System.Data.DataColumn("customers_abo_payment_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_payment_method)
            Me.columndomiciliation_status = New Global.System.Data.DataColumn("domiciliation_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_status)
            Me.columndomiciliation_debiter_name = New Global.System.Data.DataColumn("domiciliation_debiter_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_debiter_name)
            Me.columndomiciliation_number = New Global.System.Data.DataColumn("domiciliation_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_number)
            Me.columndomiciliation_account_number = New Global.System.Data.DataColumn("domiciliation_account_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_account_number)
            Me.columnadult_pwd = New Global.System.Data.DataColumn("adult_pwd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadult_pwd)
            Me.columnogone_card_type = New Global.System.Data.DataColumn("ogone_card_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_type)
            Me.columnogone_card_no = New Global.System.Data.DataColumn("ogone_card_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_no)
            Me.columnogone_exp_date = New Global.System.Data.DataColumn("ogone_exp_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_exp_date)
            Me.columnogone_owner = New Global.System.Data.DataColumn("ogone_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_owner)
            Me.columnogone_cc_expiration_status = New Global.System.Data.DataColumn("ogone_cc_expiration_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_cc_expiration_status)
            Me.columnoffline_payment_status = New Global.System.Data.DataColumn("offline_payment_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoffline_payment_status)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnvip = New Global.System.Data.DataColumn("vip", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvip)
            Me.columnblack_listed = New Global.System.Data.DataColumn("black_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblack_listed)
            Me.columnred_listed = New Global.System.Data.DataColumn("red_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnred_listed)
            Me.columnsm_eligible = New Global.System.Data.DataColumn("sm_eligible", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsm_eligible)
            Me.columncustomers_enquiry_id = New Global.System.Data.DataColumn("customers_enquiry_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_enquiry_id)
            Me.columndate_first_delivery = New Global.System.Data.DataColumn("date_first_delivery", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_first_delivery)
            Me.columnmail_wl_adult_not_sufficient = New Global.System.Data.DataColumn("mail_wl_adult_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_adult_not_sufficient)
            Me.columnmail_wl_norm_not_sufficient = New Global.System.Data.DataColumn("mail_wl_norm_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_norm_not_sufficient)
            Me.columnmgm_points = New Global.System.Data.DataColumn("mgm_points", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmgm_points)
            Me.columnwishlist_kind = New Global.System.Data.DataColumn("wishlist_kind", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwishlist_kind)
            Me.columnabo_action = New Global.System.Data.DataColumn("abo_action", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_action)
            Me.columncode_id = New Global.System.Data.DataColumn("code_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode_id)
            Me.columnabo_last_action_id = New Global.System.Data.DataColumn("abo_last_action_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_last_action_id)
            Me.columnabo_action_count = New Global.System.Data.DataColumn("abo_action_count", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_action_count)
            Me.columnabo_action_id_list = New Global.System.Data.DataColumn("abo_action_id_list", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_action_id_list)
            Me.columnabo_action_name_list = New Global.System.Data.DataColumn("abo_action_name_list", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_action_name_list)
            Me.columnabo_last_action_name = New Global.System.Data.DataColumn("abo_last_action_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_last_action_name)
            Me.columncustomers_info_date_of_last_logon = New Global.System.Data.DataColumn("customers_info_date_of_last_logon", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_of_last_logon)
            Me.columncustomers_info_number_of_logons = New Global.System.Data.DataColumn("customers_info_number_of_logons", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_number_of_logons)
            Me.columncustomers_info_date_account_created = New Global.System.Data.DataColumn("customers_info_date_account_created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_account_created)
            Me.columncustomers_info_date_account_last_modified = New Global.System.Data.DataColumn("customers_info_date_account_last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_account_last_modified)
            Me.columnglobal_product_notifications = New Global.System.Data.DataColumn("global_product_notifications", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnglobal_product_notifications)
            Me.columncustomers_language = New Global.System.Data.DataColumn("customers_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_language)
            Me.columnpartners_id = New Global.System.Data.DataColumn("partners_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartners_id)
            Me.columnbelgiqueloisirs_id = New Global.System.Data.DataColumn("belgiqueloisirs_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbelgiqueloisirs_id)
            Me.columncustomers_id.AutoIncrement = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_id.ReadOnly = true
            Me.columncustomers_gender.AllowDBNull = false
            Me.columncustomers_firstname.AllowDBNull = false
            Me.columncustomers_lastname.AllowDBNull = false
            Me.columncustomers_email_address.AllowDBNull = false
            Me.columncustomers_default_address_id.AllowDBNull = false
            Me.columncustomers_telephone.AllowDBNull = false
            Me.columncustomers_telephone_evening.AllowDBNull = false
            Me.columncustomers_password.AllowDBNull = false
            Me.columncustomers_privilege.AllowDBNull = false
            Me.columncustomers_privilege_balance.AllowDBNull = false
            Me.columncustomers_garantie.AllowDBNull = false
            Me.columncustomers_abo.AllowDBNull = false
            Me.columncustomers_abo_suspended.AllowDBNull = false
            Me.columncustomers_abo_type.AllowDBNull = false
            Me.columnflagminiat1995.AllowDBNull = false
            Me.columncustomers_abo_method.AllowDBNull = false
            Me.columncustomers_abo_dvd_norm.AllowDBNull = false
            Me.columncustomers_abo_dvd_adult.AllowDBNull = false
            Me.columncustomers_abo_dvd_home_norm.AllowDBNull = false
            Me.columncustomers_abo_dvd_home_adult.AllowDBNull = false
            Me.columnthrottling.AllowDBNull = false
            Me.columncustomers_abo_rank.AllowDBNull = false
            Me.columncustomers_abo_start_rentthismonth.AllowDBNull = false
            Me.columncustomers_abo_dvd_credit.AllowDBNull = false
            Me.columncustomers_abo_multishipment.AllowDBNull = false
            Me.columnabotested.AllowDBNull = false
            Me.columncustomers_abo_status.AllowDBNull = false
            Me.columncustomers_abo_payment_method.AllowDBNull = false
            Me.columndomiciliation_status.AllowDBNull = false
            Me.columnogone_cc_expiration_status.AllowDBNull = false
            Me.columnoffline_payment_status.AllowDBNull = false
            Me.columnvip.AllowDBNull = false
            Me.columnblack_listed.AllowDBNull = false
            Me.columnred_listed.AllowDBNull = false
            Me.columnsm_eligible.AllowDBNull = false
            Me.columncustomers_enquiry_id.AllowDBNull = false
            Me.columnmgm_points.AllowDBNull = false
            Me.columnwishlist_kind.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_FillCustForMailRow() As VIEW_FillCustForMailRow
            Return CType(Me.NewRow,VIEW_FillCustForMailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_FillCustForMailRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_FillCustForMailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_FillCustForMailRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_FillCustForMailRowChanged(Me, New VIEW_FillCustForMailRowChangeEvent(CType(e.Row,VIEW_FillCustForMailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_FillCustForMailRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_FillCustForMailRowChanging(Me, New VIEW_FillCustForMailRowChangeEvent(CType(e.Row,VIEW_FillCustForMailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_FillCustForMailRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_FillCustForMailRowDeleted(Me, New VIEW_FillCustForMailRowChangeEvent(CType(e.Row,VIEW_FillCustForMailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_FillCustForMailRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_FillCustForMailRowDeleting(Me, New VIEW_FillCustForMailRowChangeEvent(CType(e.Row,VIEW_FillCustForMailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_FillCustForMailRow(ByVal row As VIEW_FillCustForMailRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_FillCustForMailDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class aboDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnabo_id As Global.System.Data.DataColumn
        
        Private columncustomerid As Global.System.Data.DataColumn
        
        Private columnAction As Global.System.Data.DataColumn
        
        Private columncode_id As Global.System.Data.DataColumn
        
        Private columnDate As Global.System.Data.DataColumn
        
        Private columnproduct_id As Global.System.Data.DataColumn
        
        Private columnpayment_method As Global.System.Data.DataColumn
        
        Private columnprivilege_notified As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnname As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "abo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customeridColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomerid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ActionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property product_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproduct_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property privilege_notifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprivilege_notified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As aboRow
            Get
                Return CType(Me.Rows(index),aboRow)
            End Get
        End Property
        
        Public Event aboRowChanging As aboRowChangeEventHandler
        
        Public Event aboRowChanged As aboRowChangeEventHandler
        
        Public Event aboRowDeleting As aboRowChangeEventHandler
        
        Public Event aboRowDeleted As aboRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddaboRow(ByVal row As aboRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddaboRow(ByVal customerid As Integer, ByVal Action As Integer, ByVal code_id As Integer, ByVal _Date As Date, ByVal product_id As Integer, ByVal payment_method As String, ByVal privilege_notified As Integer, ByVal comment As String, ByVal site As Integer, ByVal id As Integer, ByVal name As String) As aboRow
            Dim rowaboRow As aboRow = CType(Me.NewRow,aboRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customerid, Action, code_id, _Date, product_id, payment_method, privilege_notified, comment, site, id, name}
            rowaboRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowaboRow)
            Return rowaboRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByabo_id(ByVal abo_id As Integer) As aboRow
            Return CType(Me.Rows.Find(New Object() {abo_id}),aboRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As aboDataTable = CType(MyBase.Clone,aboDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New aboDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnabo_id = MyBase.Columns("abo_id")
            Me.columncustomerid = MyBase.Columns("customerid")
            Me.columnAction = MyBase.Columns("Action")
            Me.columncode_id = MyBase.Columns("code_id")
            Me.columnDate = MyBase.Columns("Date")
            Me.columnproduct_id = MyBase.Columns("product_id")
            Me.columnpayment_method = MyBase.Columns("payment_method")
            Me.columnprivilege_notified = MyBase.Columns("privilege_notified")
            Me.columncomment = MyBase.Columns("comment")
            Me.columnsite = MyBase.Columns("site")
            Me.columnid = MyBase.Columns("id")
            Me.columnname = MyBase.Columns("name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnabo_id = New Global.System.Data.DataColumn("abo_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_id)
            Me.columncustomerid = New Global.System.Data.DataColumn("customerid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomerid)
            Me.columnAction = New Global.System.Data.DataColumn("Action", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAction)
            Me.columncode_id = New Global.System.Data.DataColumn("code_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode_id)
            Me.columnDate = New Global.System.Data.DataColumn("Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "DateColumn")
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnDate")
            Me.columnDate.ExtendedProperties.Add("Generator_UserColumnName", "Date")
            MyBase.Columns.Add(Me.columnDate)
            Me.columnproduct_id = New Global.System.Data.DataColumn("product_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproduct_id)
            Me.columnpayment_method = New Global.System.Data.DataColumn("payment_method", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayment_method)
            Me.columnprivilege_notified = New Global.System.Data.DataColumn("privilege_notified", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprivilege_notified)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsPur_SlsKey9", New Global.System.Data.DataColumn() {Me.columnabo_id}, true))
            Me.columnabo_id.AutoIncrement = true
            Me.columnabo_id.AllowDBNull = false
            Me.columnabo_id.ReadOnly = true
            Me.columnabo_id.Unique = true
            Me.columncustomerid.AllowDBNull = false
            Me.columnAction.AllowDBNull = false
            Me.columnproduct_id.AllowDBNull = false
            Me.columnpayment_method.AllowDBNull = false
            Me.columnprivilege_notified.AllowDBNull = false
            Me.columncomment.AllowDBNull = false
            Me.columnsite.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewaboRow() As aboRow
            Return CType(Me.NewRow,aboRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New aboRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(aboRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.aboRowChangedEvent) Is Nothing) Then
                RaiseEvent aboRowChanged(Me, New aboRowChangeEvent(CType(e.Row,aboRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.aboRowChangingEvent) Is Nothing) Then
                RaiseEvent aboRowChanging(Me, New aboRowChangeEvent(CType(e.Row,aboRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.aboRowDeletedEvent) Is Nothing) Then
                RaiseEvent aboRowDeleted(Me, New aboRowChangeEvent(CType(e.Row,aboRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.aboRowDeletingEvent) Is Nothing) Then
                RaiseEvent aboRowDeleting(Me, New aboRowChangeEvent(CType(e.Row,aboRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveaboRow(ByVal row As aboRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "aboDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_discount_ana1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columndiscount_code_id As Global.System.Data.DataColumn
        
        Private columndiscount_code As Global.System.Data.DataColumn
        
        Private columndiscount_type As Global.System.Data.DataColumn
        
        Private columndiscount_value As Global.System.Data.DataColumn
        
        Private columnogone_card_no As Global.System.Data.DataColumn
        
        Private columnogone_exp_date As Global.System.Data.DataColumn
        
        Private columnogone_owner As Global.System.Data.DataColumn
        
        Private columnogone_cc_expiration_status As Global.System.Data.DataColumn
        
        Private columnoffline_payment_status As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnvip As Global.System.Data.DataColumn
        
        Private columnblack_listed As Global.System.Data.DataColumn
        
        Private columnred_listed As Global.System.Data.DataColumn
        
        Private columnsm_eligible As Global.System.Data.DataColumn
        
        Private columncustomers_enquiry_id As Global.System.Data.DataColumn
        
        Private columndate_first_delivery As Global.System.Data.DataColumn
        
        Private columnmail_wl_adult_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmail_wl_norm_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmgm_points As Global.System.Data.DataColumn
        
        Private columnwishlist_kind As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_discount_ana1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_code_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_exp_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_exp_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_cc_expiration_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_cc_expiration_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property offline_payment_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoffline_payment_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property black_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnblack_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property red_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnred_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sm_eligibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsm_eligible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_enquiry_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_enquiry_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_first_deliveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_first_delivery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_adult_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_adult_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_norm_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_norm_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mgm_pointsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmgm_points
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wishlist_kindColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwishlist_kind
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_discount_ana1Row
            Get
                Return CType(Me.Rows(index),VIEW_discount_ana1Row)
            End Get
        End Property
        
        Public Event VIEW_discount_ana1RowChanging As VIEW_discount_ana1RowChangeEventHandler
        
        Public Event VIEW_discount_ana1RowChanged As VIEW_discount_ana1RowChangeEventHandler
        
        Public Event VIEW_discount_ana1RowDeleting As VIEW_discount_ana1RowChangeEventHandler
        
        Public Event VIEW_discount_ana1RowDeleted As VIEW_discount_ana1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_discount_ana1Row(ByVal row As VIEW_discount_ana1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_discount_ana1Row( _
                    ByVal discount_code As String,  _
                    ByVal discount_type As Integer,  _
                    ByVal discount_value As Decimal,  _
                    ByVal ogone_card_no As String,  _
                    ByVal ogone_exp_date As String,  _
                    ByVal ogone_owner As String,  _
                    ByVal ogone_cc_expiration_status As Integer,  _
                    ByVal offline_payment_status As Integer,  _
                    ByVal Expr1 As String,  _
                    ByVal vip As Integer,  _
                    ByVal black_listed As Integer,  _
                    ByVal red_listed As Integer,  _
                    ByVal sm_eligible As Integer,  _
                    ByVal customers_enquiry_id As Integer,  _
                    ByVal date_first_delivery As Date,  _
                    ByVal mail_wl_adult_not_sufficient As Date,  _
                    ByVal mail_wl_norm_not_sufficient As Date,  _
                    ByVal mgm_points As Integer,  _
                    ByVal wishlist_kind As Integer) As VIEW_discount_ana1Row
            Dim rowVIEW_discount_ana1Row As VIEW_discount_ana1Row = CType(Me.NewRow,VIEW_discount_ana1Row)
            Dim columnValuesArray() As Object = New Object() {Nothing, discount_code, discount_type, discount_value, ogone_card_no, ogone_exp_date, ogone_owner, ogone_cc_expiration_status, offline_payment_status, Expr1, vip, black_listed, red_listed, sm_eligible, customers_enquiry_id, date_first_delivery, mail_wl_adult_not_sufficient, mail_wl_norm_not_sufficient, mgm_points, wishlist_kind}
            rowVIEW_discount_ana1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_discount_ana1Row)
            Return rowVIEW_discount_ana1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_discount_ana1DataTable = CType(MyBase.Clone,VIEW_discount_ana1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_discount_ana1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndiscount_code_id = MyBase.Columns("discount_code_id")
            Me.columndiscount_code = MyBase.Columns("discount_code")
            Me.columndiscount_type = MyBase.Columns("discount_type")
            Me.columndiscount_value = MyBase.Columns("discount_value")
            Me.columnogone_card_no = MyBase.Columns("ogone_card_no")
            Me.columnogone_exp_date = MyBase.Columns("ogone_exp_date")
            Me.columnogone_owner = MyBase.Columns("ogone_owner")
            Me.columnogone_cc_expiration_status = MyBase.Columns("ogone_cc_expiration_status")
            Me.columnoffline_payment_status = MyBase.Columns("offline_payment_status")
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnvip = MyBase.Columns("vip")
            Me.columnblack_listed = MyBase.Columns("black_listed")
            Me.columnred_listed = MyBase.Columns("red_listed")
            Me.columnsm_eligible = MyBase.Columns("sm_eligible")
            Me.columncustomers_enquiry_id = MyBase.Columns("customers_enquiry_id")
            Me.columndate_first_delivery = MyBase.Columns("date_first_delivery")
            Me.columnmail_wl_adult_not_sufficient = MyBase.Columns("mail_wl_adult_not_sufficient")
            Me.columnmail_wl_norm_not_sufficient = MyBase.Columns("mail_wl_norm_not_sufficient")
            Me.columnmgm_points = MyBase.Columns("mgm_points")
            Me.columnwishlist_kind = MyBase.Columns("wishlist_kind")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndiscount_code_id = New Global.System.Data.DataColumn("discount_code_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code_id)
            Me.columndiscount_code = New Global.System.Data.DataColumn("discount_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code)
            Me.columndiscount_type = New Global.System.Data.DataColumn("discount_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_type)
            Me.columndiscount_value = New Global.System.Data.DataColumn("discount_value", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_value)
            Me.columnogone_card_no = New Global.System.Data.DataColumn("ogone_card_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_no)
            Me.columnogone_exp_date = New Global.System.Data.DataColumn("ogone_exp_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_exp_date)
            Me.columnogone_owner = New Global.System.Data.DataColumn("ogone_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_owner)
            Me.columnogone_cc_expiration_status = New Global.System.Data.DataColumn("ogone_cc_expiration_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_cc_expiration_status)
            Me.columnoffline_payment_status = New Global.System.Data.DataColumn("offline_payment_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoffline_payment_status)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnvip = New Global.System.Data.DataColumn("vip", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvip)
            Me.columnblack_listed = New Global.System.Data.DataColumn("black_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblack_listed)
            Me.columnred_listed = New Global.System.Data.DataColumn("red_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnred_listed)
            Me.columnsm_eligible = New Global.System.Data.DataColumn("sm_eligible", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsm_eligible)
            Me.columncustomers_enquiry_id = New Global.System.Data.DataColumn("customers_enquiry_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_enquiry_id)
            Me.columndate_first_delivery = New Global.System.Data.DataColumn("date_first_delivery", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_first_delivery)
            Me.columnmail_wl_adult_not_sufficient = New Global.System.Data.DataColumn("mail_wl_adult_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_adult_not_sufficient)
            Me.columnmail_wl_norm_not_sufficient = New Global.System.Data.DataColumn("mail_wl_norm_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_norm_not_sufficient)
            Me.columnmgm_points = New Global.System.Data.DataColumn("mgm_points", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmgm_points)
            Me.columnwishlist_kind = New Global.System.Data.DataColumn("wishlist_kind", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwishlist_kind)
            Me.columndiscount_code_id.AutoIncrement = true
            Me.columndiscount_code_id.AllowDBNull = false
            Me.columndiscount_code_id.ReadOnly = true
            Me.columndiscount_code.AllowDBNull = false
            Me.columndiscount_type.AllowDBNull = false
            Me.columndiscount_value.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_discount_ana1Row() As VIEW_discount_ana1Row
            Return CType(Me.NewRow,VIEW_discount_ana1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_discount_ana1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_discount_ana1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_discount_ana1RowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_discount_ana1RowChanged(Me, New VIEW_discount_ana1RowChangeEvent(CType(e.Row,VIEW_discount_ana1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_discount_ana1RowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_discount_ana1RowChanging(Me, New VIEW_discount_ana1RowChangeEvent(CType(e.Row,VIEW_discount_ana1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_discount_ana1RowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_discount_ana1RowDeleted(Me, New VIEW_discount_ana1RowChangeEvent(CType(e.Row,VIEW_discount_ana1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_discount_ana1RowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_discount_ana1RowDeleting(Me, New VIEW_discount_ana1RowChangeEvent(CType(e.Row,VIEW_discount_ana1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_discount_ana1Row(ByVal row As VIEW_discount_ana1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_discount_ana1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class products_browseDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnproducts_dvdid As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "products_browse"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvdidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvdid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As products_browseRow
            Get
                Return CType(Me.Rows(index),products_browseRow)
            End Get
        End Property
        
        Public Event products_browseRowChanging As products_browseRowChangeEventHandler
        
        Public Event products_browseRowChanged As products_browseRowChangeEventHandler
        
        Public Event products_browseRowDeleting As products_browseRowChangeEventHandler
        
        Public Event products_browseRowDeleted As products_browseRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addproducts_browseRow(ByVal row As products_browseRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addproducts_browseRow(ByVal products_id As Integer, ByVal products_dvdid As Integer) As products_browseRow
            Dim rowproducts_browseRow As products_browseRow = CType(Me.NewRow,products_browseRow)
            Dim columnValuesArray() As Object = New Object() {products_id, products_dvdid}
            rowproducts_browseRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproducts_browseRow)
            Return rowproducts_browseRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproducts_idproducts_dvdid(ByVal products_id As Integer, ByVal products_dvdid As Integer) As products_browseRow
            Return CType(Me.Rows.Find(New Object() {products_id, products_dvdid}),products_browseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As products_browseDataTable = CType(MyBase.Clone,products_browseDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New products_browseDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnproducts_dvdid = MyBase.Columns("products_dvdid")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnproducts_dvdid = New Global.System.Data.DataColumn("products_dvdid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvdid)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsPur_SlsKey11", New Global.System.Data.DataColumn() {Me.columnproducts_id, Me.columnproducts_dvdid}, true))
            Me.columnproducts_id.AllowDBNull = false
            Me.columnproducts_dvdid.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newproducts_browseRow() As products_browseRow
            Return CType(Me.NewRow,products_browseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New products_browseRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(products_browseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.products_browseRowChangedEvent) Is Nothing) Then
                RaiseEvent products_browseRowChanged(Me, New products_browseRowChangeEvent(CType(e.Row,products_browseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.products_browseRowChangingEvent) Is Nothing) Then
                RaiseEvent products_browseRowChanging(Me, New products_browseRowChangeEvent(CType(e.Row,products_browseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.products_browseRowDeletedEvent) Is Nothing) Then
                RaiseEvent products_browseRowDeleted(Me, New products_browseRowChangeEvent(CType(e.Row,products_browseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.products_browseRowDeletingEvent) Is Nothing) Then
                RaiseEvent products_browseRowDeleting(Me, New products_browseRowChangeEvent(CType(e.Row,products_browseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeproducts_browseRow(ByVal row As products_browseRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "products_browseDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_Orders_Status_HistDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnorders_status_history_id As Global.System.Data.DataColumn
        
        Private columnorders_id As Global.System.Data.DataColumn
        
        Private columnnew_value As Global.System.Data.DataColumn
        
        Private columnold_value As Global.System.Data.DataColumn
        
        Private columndate_added As Global.System.Data.DataColumn
        
        Private columncustomer_notified As Global.System.Data.DataColumn
        
        Private columnorders_status_id As Global.System.Data.DataColumn
        
        Private columnlanguage_id As Global.System.Data.DataColumn
        
        Private columnorders_status_name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_Orders_Status_Hist"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_status_history_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_status_history_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property new_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnew_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property old_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnold_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customer_notifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomer_notified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_status_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_status_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property language_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlanguage_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_status_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_status_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_Orders_Status_HistRow
            Get
                Return CType(Me.Rows(index),VIEW_Orders_Status_HistRow)
            End Get
        End Property
        
        Public Event VIEW_Orders_Status_HistRowChanging As VIEW_Orders_Status_HistRowChangeEventHandler
        
        Public Event VIEW_Orders_Status_HistRowChanged As VIEW_Orders_Status_HistRowChangeEventHandler
        
        Public Event VIEW_Orders_Status_HistRowDeleting As VIEW_Orders_Status_HistRowChangeEventHandler
        
        Public Event VIEW_Orders_Status_HistRowDeleted As VIEW_Orders_Status_HistRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddVIEW_Orders_Status_HistRow(ByVal row As VIEW_Orders_Status_HistRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddVIEW_Orders_Status_HistRow(ByVal orders_status_history_id As Integer, ByVal orders_id As Integer, ByVal new_value As Integer, ByVal old_value As Integer, ByVal date_added As Date, ByVal customer_notified As Integer, ByVal orders_status_id As Integer, ByVal language_id As Integer, ByVal orders_status_name As String) As VIEW_Orders_Status_HistRow
            Dim rowVIEW_Orders_Status_HistRow As VIEW_Orders_Status_HistRow = CType(Me.NewRow,VIEW_Orders_Status_HistRow)
            Dim columnValuesArray() As Object = New Object() {orders_status_history_id, orders_id, new_value, old_value, date_added, customer_notified, orders_status_id, language_id, orders_status_name}
            rowVIEW_Orders_Status_HistRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_Orders_Status_HistRow)
            Return rowVIEW_Orders_Status_HistRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByorders_status_history_id(ByVal orders_status_history_id As Integer) As VIEW_Orders_Status_HistRow
            Return CType(Me.Rows.Find(New Object() {orders_status_history_id}),VIEW_Orders_Status_HistRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_Orders_Status_HistDataTable = CType(MyBase.Clone,VIEW_Orders_Status_HistDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_Orders_Status_HistDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnorders_status_history_id = MyBase.Columns("orders_status_history_id")
            Me.columnorders_id = MyBase.Columns("orders_id")
            Me.columnnew_value = MyBase.Columns("new_value")
            Me.columnold_value = MyBase.Columns("old_value")
            Me.columndate_added = MyBase.Columns("date_added")
            Me.columncustomer_notified = MyBase.Columns("customer_notified")
            Me.columnorders_status_id = MyBase.Columns("orders_status_id")
            Me.columnlanguage_id = MyBase.Columns("language_id")
            Me.columnorders_status_name = MyBase.Columns("orders_status_name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnorders_status_history_id = New Global.System.Data.DataColumn("orders_status_history_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_status_history_id)
            Me.columnorders_id = New Global.System.Data.DataColumn("orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_id)
            Me.columnnew_value = New Global.System.Data.DataColumn("new_value", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnew_value)
            Me.columnold_value = New Global.System.Data.DataColumn("old_value", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnold_value)
            Me.columndate_added = New Global.System.Data.DataColumn("date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_added)
            Me.columncustomer_notified = New Global.System.Data.DataColumn("customer_notified", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomer_notified)
            Me.columnorders_status_id = New Global.System.Data.DataColumn("orders_status_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_status_id)
            Me.columnlanguage_id = New Global.System.Data.DataColumn("language_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanguage_id)
            Me.columnorders_status_name = New Global.System.Data.DataColumn("orders_status_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_status_name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsPur_SlsKey12", New Global.System.Data.DataColumn() {Me.columnorders_status_history_id}, true))
            Me.columnorders_status_history_id.AllowDBNull = false
            Me.columnorders_status_history_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewVIEW_Orders_Status_HistRow() As VIEW_Orders_Status_HistRow
            Return CType(Me.NewRow,VIEW_Orders_Status_HistRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_Orders_Status_HistRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_Orders_Status_HistRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_Orders_Status_HistRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_Orders_Status_HistRowChanged(Me, New VIEW_Orders_Status_HistRowChangeEvent(CType(e.Row,VIEW_Orders_Status_HistRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_Orders_Status_HistRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_Orders_Status_HistRowChanging(Me, New VIEW_Orders_Status_HistRowChangeEvent(CType(e.Row,VIEW_Orders_Status_HistRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_Orders_Status_HistRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_Orders_Status_HistRowDeleted(Me, New VIEW_Orders_Status_HistRowChangeEvent(CType(e.Row,VIEW_Orders_Status_HistRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_Orders_Status_HistRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_Orders_Status_HistRowDeleting(Me, New VIEW_Orders_Status_HistRowChangeEvent(CType(e.Row,VIEW_Orders_Status_HistRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveVIEW_Orders_Status_HistRow(ByVal row As VIEW_Orders_Status_HistRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_Orders_Status_HistDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class shopping_orders_statusDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnshopping_orders_status_id As Global.System.Data.DataColumn
        
        Private columnstatus_name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "shopping_orders_status"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property shopping_orders_status_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnshopping_orders_status_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property status_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstatus_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As shopping_orders_statusRow
            Get
                Return CType(Me.Rows(index),shopping_orders_statusRow)
            End Get
        End Property
        
        Public Event shopping_orders_statusRowChanging As shopping_orders_statusRowChangeEventHandler
        
        Public Event shopping_orders_statusRowChanged As shopping_orders_statusRowChangeEventHandler
        
        Public Event shopping_orders_statusRowDeleting As shopping_orders_statusRowChangeEventHandler
        
        Public Event shopping_orders_statusRowDeleted As shopping_orders_statusRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addshopping_orders_statusRow(ByVal row As shopping_orders_statusRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addshopping_orders_statusRow(ByVal shopping_orders_status_id As Integer, ByVal status_name As String) As shopping_orders_statusRow
            Dim rowshopping_orders_statusRow As shopping_orders_statusRow = CType(Me.NewRow,shopping_orders_statusRow)
            Dim columnValuesArray() As Object = New Object() {shopping_orders_status_id, status_name}
            rowshopping_orders_statusRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowshopping_orders_statusRow)
            Return rowshopping_orders_statusRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As shopping_orders_statusDataTable = CType(MyBase.Clone,shopping_orders_statusDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New shopping_orders_statusDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnshopping_orders_status_id = MyBase.Columns("shopping_orders_status_id")
            Me.columnstatus_name = MyBase.Columns("status_name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnshopping_orders_status_id = New Global.System.Data.DataColumn("shopping_orders_status_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnshopping_orders_status_id)
            Me.columnstatus_name = New Global.System.Data.DataColumn("status_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstatus_name)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newshopping_orders_statusRow() As shopping_orders_statusRow
            Return CType(Me.NewRow,shopping_orders_statusRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New shopping_orders_statusRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(shopping_orders_statusRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.shopping_orders_statusRowChangedEvent) Is Nothing) Then
                RaiseEvent shopping_orders_statusRowChanged(Me, New shopping_orders_statusRowChangeEvent(CType(e.Row,shopping_orders_statusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.shopping_orders_statusRowChangingEvent) Is Nothing) Then
                RaiseEvent shopping_orders_statusRowChanging(Me, New shopping_orders_statusRowChangeEvent(CType(e.Row,shopping_orders_statusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.shopping_orders_statusRowDeletedEvent) Is Nothing) Then
                RaiseEvent shopping_orders_statusRowDeleted(Me, New shopping_orders_statusRowChangeEvent(CType(e.Row,shopping_orders_statusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.shopping_orders_statusRowDeletingEvent) Is Nothing) Then
                RaiseEvent shopping_orders_statusRowDeleting(Me, New shopping_orders_statusRowChangeEvent(CType(e.Row,shopping_orders_statusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeshopping_orders_statusRow(ByVal row As shopping_orders_statusRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "shopping_orders_statusDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class shopping_orders_view1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnshopping_orders_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnorder_date As Global.System.Data.DataColumn
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnquantity As Global.System.Data.DataColumn
        
        Private columnorder_status As Global.System.Data.DataColumn
        
        Private columndvd_id As Global.System.Data.DataColumn
        
        Private columnprice As Global.System.Data.DataColumn
        
        Private columndiscount_code_id As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columnEntityID As Global.System.Data.DataColumn
        
        Private columncustomers_gender As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_default_address_id As Global.System.Data.DataColumn
        
        Private columncustomers_street_address As Global.System.Data.DataColumn
        
        Private columncustomers_postcode As Global.System.Data.DataColumn
        
        Private columncustomers_city As Global.System.Data.DataColumn
        
        Private columncustomers_country_id As Global.System.Data.DataColumn
        
        Private columncustomers_country As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnproducts_type As Global.System.Data.DataColumn
        
        Private columnproducts_media As Global.System.Data.DataColumn
        
        Private columnproducts_status As Global.System.Data.DataColumn
        
        Private columnproducts_dvd_status As Global.System.Data.DataColumn
        
        Private columncover_box_id As Global.System.Data.DataColumn
        
        Private columnbox_id As Global.System.Data.DataColumn
        
        Private columnpibox_id As Global.System.Data.DataColumn
        
        Private columninout As Global.System.Data.DataColumn
        
        Private columnquantity_assigned As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "shopping_orders_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property shopping_orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnshopping_orders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property order_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorder_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property order_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorder_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvd_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndvd_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_code_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EntityIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEntityID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_default_address_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_default_address_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_street_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_street_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_country_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_country_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_country
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_mediaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_media
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvd_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvd_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cover_box_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncover_box_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property box_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbox_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pibox_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpibox_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property inoutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninout
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quantity_assignedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquantity_assigned
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As shopping_orders_view1Row
            Get
                Return CType(Me.Rows(index),shopping_orders_view1Row)
            End Get
        End Property
        
        Public Event shopping_orders_view1RowChanging As shopping_orders_view1RowChangeEventHandler
        
        Public Event shopping_orders_view1RowChanged As shopping_orders_view1RowChangeEventHandler
        
        Public Event shopping_orders_view1RowDeleting As shopping_orders_view1RowChangeEventHandler
        
        Public Event shopping_orders_view1RowDeleted As shopping_orders_view1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addshopping_orders_view1Row(ByVal row As shopping_orders_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addshopping_orders_view1Row( _
                    ByVal shopping_orders_id As Integer,  _
                    ByVal customers_id As Integer,  _
                    ByVal order_date As Date,  _
                    ByVal products_id As Integer,  _
                    ByVal quantity As Integer,  _
                    ByVal order_status As Integer,  _
                    ByVal dvd_id As Integer,  _
                    ByVal price As Decimal,  _
                    ByVal discount_code_id As Integer,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_lastname As String,  _
                    ByVal EntityID As Integer,  _
                    ByVal customers_gender As String,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_default_address_id As Integer,  _
                    ByVal customers_street_address As String,  _
                    ByVal customers_postcode As String,  _
                    ByVal customers_city As String,  _
                    ByVal customers_country_id As Integer,  _
                    ByVal customers_country As String,  _
                    ByVal products_model As String,  _
                    ByVal products_type As String,  _
                    ByVal products_media As String,  _
                    ByVal products_status As Integer,  _
                    ByVal products_dvd_status As Integer,  _
                    ByVal cover_box_id As String,  _
                    ByVal box_id As Integer,  _
                    ByVal pibox_id As Integer,  _
                    ByVal inout As Integer,  _
                    ByVal quantity_assigned As Integer) As shopping_orders_view1Row
            Dim rowshopping_orders_view1Row As shopping_orders_view1Row = CType(Me.NewRow,shopping_orders_view1Row)
            Dim columnValuesArray() As Object = New Object() {shopping_orders_id, customers_id, order_date, products_id, quantity, order_status, dvd_id, price, discount_code_id, customers_firstname, customers_lastname, EntityID, customers_gender, customers_email_address, customers_default_address_id, customers_street_address, customers_postcode, customers_city, customers_country_id, customers_country, products_model, products_type, products_media, products_status, products_dvd_status, cover_box_id, box_id, pibox_id, inout, quantity_assigned}
            rowshopping_orders_view1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowshopping_orders_view1Row)
            Return rowshopping_orders_view1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As shopping_orders_view1DataTable = CType(MyBase.Clone,shopping_orders_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New shopping_orders_view1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnshopping_orders_id = MyBase.Columns("shopping_orders_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnorder_date = MyBase.Columns("order_date")
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnquantity = MyBase.Columns("quantity")
            Me.columnorder_status = MyBase.Columns("order_status")
            Me.columndvd_id = MyBase.Columns("dvd_id")
            Me.columnprice = MyBase.Columns("price")
            Me.columndiscount_code_id = MyBase.Columns("discount_code_id")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columnEntityID = MyBase.Columns("EntityID")
            Me.columncustomers_gender = MyBase.Columns("customers_gender")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_default_address_id = MyBase.Columns("customers_default_address_id")
            Me.columncustomers_street_address = MyBase.Columns("customers_street_address")
            Me.columncustomers_postcode = MyBase.Columns("customers_postcode")
            Me.columncustomers_city = MyBase.Columns("customers_city")
            Me.columncustomers_country_id = MyBase.Columns("customers_country_id")
            Me.columncustomers_country = MyBase.Columns("customers_country")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnproducts_type = MyBase.Columns("products_type")
            Me.columnproducts_media = MyBase.Columns("products_media")
            Me.columnproducts_status = MyBase.Columns("products_status")
            Me.columnproducts_dvd_status = MyBase.Columns("products_dvd_status")
            Me.columncover_box_id = MyBase.Columns("cover_box_id")
            Me.columnbox_id = MyBase.Columns("box_id")
            Me.columnpibox_id = MyBase.Columns("pibox_id")
            Me.columninout = MyBase.Columns("inout")
            Me.columnquantity_assigned = MyBase.Columns("quantity_assigned")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnshopping_orders_id = New Global.System.Data.DataColumn("shopping_orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnshopping_orders_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnorder_date = New Global.System.Data.DataColumn("order_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorder_date)
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnquantity = New Global.System.Data.DataColumn("quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquantity)
            Me.columnorder_status = New Global.System.Data.DataColumn("order_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorder_status)
            Me.columndvd_id = New Global.System.Data.DataColumn("dvd_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvd_id)
            Me.columnprice = New Global.System.Data.DataColumn("price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprice)
            Me.columndiscount_code_id = New Global.System.Data.DataColumn("discount_code_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code_id)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columnEntityID = New Global.System.Data.DataColumn("EntityID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEntityID)
            Me.columncustomers_gender = New Global.System.Data.DataColumn("customers_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_gender)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_default_address_id = New Global.System.Data.DataColumn("customers_default_address_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_default_address_id)
            Me.columncustomers_street_address = New Global.System.Data.DataColumn("customers_street_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_street_address)
            Me.columncustomers_postcode = New Global.System.Data.DataColumn("customers_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_postcode)
            Me.columncustomers_city = New Global.System.Data.DataColumn("customers_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_city)
            Me.columncustomers_country_id = New Global.System.Data.DataColumn("customers_country_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_country_id)
            Me.columncustomers_country = New Global.System.Data.DataColumn("customers_country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_country)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnproducts_type = New Global.System.Data.DataColumn("products_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_type)
            Me.columnproducts_media = New Global.System.Data.DataColumn("products_media", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_media)
            Me.columnproducts_status = New Global.System.Data.DataColumn("products_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_status)
            Me.columnproducts_dvd_status = New Global.System.Data.DataColumn("products_dvd_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvd_status)
            Me.columncover_box_id = New Global.System.Data.DataColumn("cover_box_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncover_box_id)
            Me.columnbox_id = New Global.System.Data.DataColumn("box_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbox_id)
            Me.columnpibox_id = New Global.System.Data.DataColumn("pibox_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpibox_id)
            Me.columninout = New Global.System.Data.DataColumn("inout", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninout)
            Me.columnquantity_assigned = New Global.System.Data.DataColumn("quantity_assigned", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquantity_assigned)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newshopping_orders_view1Row() As shopping_orders_view1Row
            Return CType(Me.NewRow,shopping_orders_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New shopping_orders_view1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(shopping_orders_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.shopping_orders_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent shopping_orders_view1RowChanged(Me, New shopping_orders_view1RowChangeEvent(CType(e.Row,shopping_orders_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.shopping_orders_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent shopping_orders_view1RowChanging(Me, New shopping_orders_view1RowChangeEvent(CType(e.Row,shopping_orders_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.shopping_orders_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent shopping_orders_view1RowDeleted(Me, New shopping_orders_view1RowChangeEvent(CType(e.Row,shopping_orders_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.shopping_orders_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent shopping_orders_view1RowDeleting(Me, New shopping_orders_view1RowChangeEvent(CType(e.Row,shopping_orders_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeshopping_orders_view1Row(ByVal row As shopping_orders_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "shopping_orders_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class suggestionsDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "suggestions"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As suggestionsRow
            Get
                Return CType(Me.Rows(index),suggestionsRow)
            End Get
        End Property
        
        Public Event suggestionsRowChanging As suggestionsRowChangeEventHandler
        
        Public Event suggestionsRowChanged As suggestionsRowChangeEventHandler
        
        Public Event suggestionsRowDeleting As suggestionsRowChangeEventHandler
        
        Public Event suggestionsRowDeleted As suggestionsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddsuggestionsRow(ByVal row As suggestionsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddsuggestionsRow() As suggestionsRow
            Dim rowsuggestionsRow As suggestionsRow = CType(Me.NewRow,suggestionsRow)
            Dim columnValuesArray(-1) As Object
            rowsuggestionsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowsuggestionsRow)
            Return rowsuggestionsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As suggestionsDataTable = CType(MyBase.Clone,suggestionsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New suggestionsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewsuggestionsRow() As suggestionsRow
            Return CType(Me.NewRow,suggestionsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New suggestionsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(suggestionsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.suggestionsRowChangedEvent) Is Nothing) Then
                RaiseEvent suggestionsRowChanged(Me, New suggestionsRowChangeEvent(CType(e.Row,suggestionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.suggestionsRowChangingEvent) Is Nothing) Then
                RaiseEvent suggestionsRowChanging(Me, New suggestionsRowChangeEvent(CType(e.Row,suggestionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.suggestionsRowDeletedEvent) Is Nothing) Then
                RaiseEvent suggestionsRowDeleted(Me, New suggestionsRowChangeEvent(CType(e.Row,suggestionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.suggestionsRowDeletingEvent) Is Nothing) Then
                RaiseEvent suggestionsRowDeleting(Me, New suggestionsRowChangeEvent(CType(e.Row,suggestionsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovesuggestionsRow(ByVal row As suggestionsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPur_Sls = New dsPur_Sls
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "suggestionsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class PS_AnaRow
        Inherits Global.System.Data.DataRow
        
        Private tablePS_Ana As PS_AnaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePS_Ana = CType(Me.Table,PS_AnaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property product_id() As Integer
            Get
                Return CType(Me(Me.tablePS_Ana.product_idColumn),Integer)
            End Get
            Set
                Me(Me.tablePS_Ana.product_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property w_q1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.w_q1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'w_q1' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.w_q1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property w_q2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.w_q2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'w_q2' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.w_q2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property w_q3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.w_q3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'w_q3' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.w_q3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property stock_qty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.stock_qtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'stock_qty' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.stock_qtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property p_price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.p_priceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'p_price' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.p_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property s_price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.s_priceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 's_price' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.s_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property to_sale_qty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.to_sale_qtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'to_sale_qty' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.to_sale_qtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property to_purchase_qty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.to_purchase_qtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'to_purchase_qty' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.to_purchase_qtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_title() As String
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_titleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_title' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_available() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_date_availableColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_available' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_date_availableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feeSharing() As Long
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.feeSharingColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feeSharing' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.feeSharingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property w_mini1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.w_mini1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'w_mini1' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.w_mini1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property w_mini2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.w_mini2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'w_mini2' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.w_mini2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property w_mini3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.w_mini3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'w_mini3' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.w_mini3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property stock_mini() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.stock_miniColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'stock_mini' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.stock_miniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_end() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.feesharing_endColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_end' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.feesharing_endColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property w_q0() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.w_q0Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'w_q0' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.w_q0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_studio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_studioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_studio' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_studioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property studio_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.studio_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'studio_name' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.studio_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property languages() As String
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.languagesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'languages' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.languagesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SubTitles() As String
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.SubTitlesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubTitles' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.SubTitlesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property imdb_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.imdb_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'imdb_id' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.imdb_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_ordered() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_orderedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_ordered' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_orderedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_public() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_publicColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_public' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_publicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_runtime() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_runtimeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_runtime' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_runtimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_year() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_yearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_year' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_yearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_status' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cinebel_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.cinebel_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cinebel_id' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.cinebel_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property qty_flow() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.qty_flowColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'qty_flow' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.qty_flowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvd_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_dvd_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_dvd_status' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_dvd_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvd_status_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_dvd_status_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_dvd_status_name' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_dvd_status_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_number() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_series_numberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_series_number' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_series_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_type' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property monthes_w1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.monthes_w1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'monthes_w1' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.monthes_w1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_sale_price() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_sale_priceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_sale_price' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_sale_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property stock_cover_qty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.stock_cover_qtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'stock_cover_qty' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.stock_cover_qtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_the_bags() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.in_the_bagsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'in_the_bags' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.in_the_bagsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_the_bags_next() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.in_the_bags_nextColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'in_the_bags_next' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.in_the_bags_nextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_cinema_now() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.in_cinema_nowColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'in_cinema_now' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.in_cinema_nowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quantity_to_sale() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.quantity_to_saleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quantity_to_sale' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.quantity_to_saleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_sale_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_sale_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_sale_date' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_sale_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_next() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_nextColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_next' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_nextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_media() As String
            Get
                Try 
                    Return CType(Me(Me.tablePS_Ana.products_mediaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_media' in table 'PS_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePS_Ana.products_mediaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isw_q1Null() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.w_q1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setw_q1Null()
            Me(Me.tablePS_Ana.w_q1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isw_q2Null() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.w_q2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setw_q2Null()
            Me(Me.tablePS_Ana.w_q2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isw_q3Null() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.w_q3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setw_q3Null()
            Me(Me.tablePS_Ana.w_q3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstock_qtyNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.stock_qtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstock_qtyNull()
            Me(Me.tablePS_Ana.stock_qtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isp_priceNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.p_priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setp_priceNull()
            Me(Me.tablePS_Ana.p_priceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iss_priceNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.s_priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sets_priceNull()
            Me(Me.tablePS_Ana.s_priceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isto_sale_qtyNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.to_sale_qtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setto_sale_qtyNull()
            Me(Me.tablePS_Ana.to_sale_qtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isto_purchase_qtyNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.to_purchase_qtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setto_purchase_qtyNull()
            Me(Me.tablePS_Ana.to_purchase_qtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_titleNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_titleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_titleNull()
            Me(Me.tablePS_Ana.products_titleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_availableNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_date_availableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_availableNull()
            Me(Me.tablePS_Ana.products_date_availableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfeeSharingNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.feeSharingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfeeSharingNull()
            Me(Me.tablePS_Ana.feeSharingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isw_mini1Null() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.w_mini1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setw_mini1Null()
            Me(Me.tablePS_Ana.w_mini1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isw_mini2Null() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.w_mini2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setw_mini2Null()
            Me(Me.tablePS_Ana.w_mini2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isw_mini3Null() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.w_mini3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setw_mini3Null()
            Me(Me.tablePS_Ana.w_mini3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstock_miniNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.stock_miniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstock_miniNull()
            Me(Me.tablePS_Ana.stock_miniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_endNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.feesharing_endColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_endNull()
            Me(Me.tablePS_Ana.feesharing_endColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isw_q0Null() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.w_q0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setw_q0Null()
            Me(Me.tablePS_Ana.w_q0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_studioNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_studioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_studioNull()
            Me(Me.tablePS_Ana.products_studioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstudio_nameNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.studio_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstudio_nameNull()
            Me(Me.tablePS_Ana.studio_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslanguagesNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.languagesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlanguagesNull()
            Me(Me.tablePS_Ana.languagesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSubTitlesNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.SubTitlesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSubTitlesNull()
            Me(Me.tablePS_Ana.SubTitlesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tablePS_Ana.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isimdb_idNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.imdb_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setimdb_idNull()
            Me(Me.tablePS_Ana.imdb_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_orderedNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_orderedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_orderedNull()
            Me(Me.tablePS_Ana.products_orderedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_publicNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_publicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_publicNull()
            Me(Me.tablePS_Ana.products_publicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_runtimeNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_runtimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_runtimeNull()
            Me(Me.tablePS_Ana.products_runtimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_yearNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_yearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_yearNull()
            Me(Me.tablePS_Ana.products_yearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_statusNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_statusNull()
            Me(Me.tablePS_Ana.products_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscinebel_idNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.cinebel_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcinebel_idNull()
            Me(Me.tablePS_Ana.cinebel_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isqty_flowNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.qty_flowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setqty_flowNull()
            Me(Me.tablePS_Ana.qty_flowColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_dvd_statusNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_dvd_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_dvd_statusNull()
            Me(Me.tablePS_Ana.products_dvd_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_dvd_status_nameNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_dvd_status_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_dvd_status_nameNull()
            Me(Me.tablePS_Ana.products_dvd_status_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_series_numberNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_series_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_series_numberNull()
            Me(Me.tablePS_Ana.products_series_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_typeNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_typeNull()
            Me(Me.tablePS_Ana.products_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismonthes_w1Null() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.monthes_w1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmonthes_w1Null()
            Me(Me.tablePS_Ana.monthes_w1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_sale_priceNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_sale_priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_sale_priceNull()
            Me(Me.tablePS_Ana.products_sale_priceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstock_cover_qtyNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.stock_cover_qtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstock_cover_qtyNull()
            Me(Me.tablePS_Ana.stock_cover_qtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isin_the_bagsNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.in_the_bagsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setin_the_bagsNull()
            Me(Me.tablePS_Ana.in_the_bagsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isin_the_bags_nextNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.in_the_bags_nextColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setin_the_bags_nextNull()
            Me(Me.tablePS_Ana.in_the_bags_nextColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isin_cinema_nowNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.in_cinema_nowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setin_cinema_nowNull()
            Me(Me.tablePS_Ana.in_cinema_nowColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquantity_to_saleNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.quantity_to_saleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquantity_to_saleNull()
            Me(Me.tablePS_Ana.quantity_to_saleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_sale_dateNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_sale_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_sale_dateNull()
            Me(Me.tablePS_Ana.products_sale_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_nextNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_nextColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_nextNull()
            Me(Me.tablePS_Ana.products_nextColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_mediaNull() As Boolean
            Return Me.IsNull(Me.tablePS_Ana.products_mediaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_mediaNull()
            Me(Me.tablePS_Ana.products_mediaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class customersRow
        Inherits Global.System.Data.DataRow
        
        Private tablecustomers As customersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustomers = CType(Me.Table,customersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_gender() As String
            Get
                Return CType(Me(Me.tablecustomers.customers_genderColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.customers_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Return CType(Me(Me.tablecustomers.customers_firstnameColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Return CType(Me(Me.tablecustomers.customers_lastnameColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_dob' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Return CType(Me(Me.tablecustomers.customers_email_addressColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_default_address_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_default_address_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_default_address_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Return CType(Me(Me.tablecustomers.customers_telephoneColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone_evening() As String
            Get
                Return CType(Me(Me.tablecustomers.customers_telephone_eveningColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.customers_telephone_eveningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_fax() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_faxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_fax' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_password() As String
            Get
                Return CType(Me(Me.tablecustomers.customers_passwordColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.customers_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletter() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_newsletterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletter' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_newsletterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletterpartner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_newsletterpartnerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletterpartner' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_newsletterpartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_privilegeColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_privilegeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege_balance() As Decimal
            Get
                Return CType(Me(Me.tablecustomers.customers_privilege_balanceColumn),Decimal)
            End Get
            Set
                Me(Me.tablecustomers.customers_privilege_balanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_garantie() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_garantieColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_garantieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsoring_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.sponsoring_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsoring_code' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.sponsoring_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsored_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.sponsored_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsored_code' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.sponsored_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_aboColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_suspended() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_suspendedColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_suspendedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_type() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_typeColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property flagminiat1995() As Integer
            Get
                Return CType(Me(Me.tablecustomers.flagminiat1995Column),Integer)
            End Get
            Set
                Me(Me.tablecustomers.flagminiat1995Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_method() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_methodColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_norm() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_dvd_normColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_adult() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_dvd_adultColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_norm() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_dvd_home_normColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_home_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_adult() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_dvd_home_adultColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_home_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property throttling() As Integer
            Get
                Return CType(Me(Me.tablecustomers.throttlingColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.throttlingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_validityto' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_rank() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_rankColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_rankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_start_rentthismonth() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_start_rentthismonthColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_start_rentthismonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_credit() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_dvd_creditColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_creditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_multishipment() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_multishipmentColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_multishipmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_discount_recurring_to_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_discount_recurring_to_date' in table 'custome"& _ 
                            "rs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abotested() As Integer
            Get
                Return CType(Me(Me.tablecustomers.abotestedColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.abotestedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_status() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_statusColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_payment_method() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_payment_methodColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_status() As Integer
            Get
                Return CType(Me(Me.tablecustomers.domiciliation_statusColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.domiciliation_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_debiter_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.domiciliation_debiter_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_debiter_name' in table 'customers' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.domiciliation_debiter_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.domiciliation_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_number' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.domiciliation_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_account_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.domiciliation_account_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_account_number' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.domiciliation_account_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property adult_pwd() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.adult_pwdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adult_pwd' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.adult_pwdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_card_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_type' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_card_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_card_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_no' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_card_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_exp_date() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_exp_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_exp_date' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_exp_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_owner' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_cc_expiration_status() As Integer
            Get
                Return CType(Me(Me.tablecustomers.ogone_cc_expiration_statusColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.ogone_cc_expiration_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property offline_payment_status() As Integer
            Get
                Return CType(Me(Me.tablecustomers.offline_payment_statusColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.offline_payment_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.commentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comment' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vip() As Integer
            Get
                Return CType(Me(Me.tablecustomers.vipColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.vipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property black_listed() As Integer
            Get
                Return CType(Me(Me.tablecustomers.black_listedColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.black_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property red_listed() As Integer
            Get
                Return CType(Me(Me.tablecustomers.red_listedColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.red_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sm_eligible() As Integer
            Get
                Return CType(Me(Me.tablecustomers.sm_eligibleColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.sm_eligibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_enquiry_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_enquiry_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_enquiry_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_first_delivery() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.date_first_deliveryColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_first_delivery' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.date_first_deliveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_adult_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.mail_wl_adult_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_adult_not_sufficient' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.mail_wl_adult_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_norm_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.mail_wl_norm_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_norm_not_sufficient' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.mail_wl_norm_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mgm_points() As Integer
            Get
                Return CType(Me(Me.tablecustomers.mgm_pointsColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.mgm_pointsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wishlist_kind() As Integer
            Get
                Return CType(Me(Me.tablecustomers.wishlist_kindColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.wishlist_kindColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_dobNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_dobNull()
            Me(Me.tablecustomers.customers_dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_faxNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_faxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_faxNull()
            Me(Me.tablecustomers.customers_faxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_newsletterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterNull()
            Me(Me.tablecustomers.customers_newsletterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterpartnerNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_newsletterpartnerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterpartnerNull()
            Me(Me.tablecustomers.customers_newsletterpartnerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsoring_codeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.sponsoring_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsoring_codeNull()
            Me(Me.tablecustomers.sponsoring_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsored_codeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.sponsored_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsored_codeNull()
            Me(Me.tablecustomers.sponsored_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_validitytoNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_validitytoNull()
            Me(Me.tablecustomers.customers_abo_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_discount_recurring_to_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_discount_recurring_to_dateNull()
            Me(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_debiter_nameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.domiciliation_debiter_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_debiter_nameNull()
            Me(Me.tablecustomers.domiciliation_debiter_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_numberNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.domiciliation_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_numberNull()
            Me(Me.tablecustomers.domiciliation_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_account_numberNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.domiciliation_account_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_account_numberNull()
            Me(Me.tablecustomers.domiciliation_account_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadult_pwdNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.adult_pwdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadult_pwdNull()
            Me(Me.tablecustomers.adult_pwdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_card_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_typeNull()
            Me(Me.tablecustomers.ogone_card_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_noNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_card_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_noNull()
            Me(Me.tablecustomers.ogone_card_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_exp_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_exp_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_exp_dateNull()
            Me(Me.tablecustomers.ogone_exp_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_ownerNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_ownerNull()
            Me(Me.tablecustomers.ogone_ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscommentNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.commentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcommentNull()
            Me(Me.tablecustomers.commentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_first_deliveryNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.date_first_deliveryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_first_deliveryNull()
            Me(Me.tablecustomers.date_first_deliveryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_adult_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.mail_wl_adult_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_adult_not_sufficientNull()
            Me(Me.tablecustomers.mail_wl_adult_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_norm_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.mail_wl_norm_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_norm_not_sufficientNull()
            Me(Me.tablecustomers.mail_wl_norm_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class productsRow
        Inherits Global.System.Data.DataRow
        
        Private tableproducts As productsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproducts = CType(Me.Table,productsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_quantity() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_quantityColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property imdb_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.imdb_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.imdb_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_title() As String
            Get
                Return CType(Me(Me.tableproducts.products_titleColumn),String)
            End Get
            Set
                Me(Me.tableproducts.products_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_image() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_imageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_image' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.products_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.products_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_added' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_last_modified' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_available() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_date_availableColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_available' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_date_availableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_weight() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_weightColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_weight' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_weightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_status() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tax_class_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_tax_class_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_tax_class_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property manufacturers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.manufacturers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'manufacturers_id' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.manufacturers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_ordered() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_orderedColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_orderedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_public() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_publicColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_public' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_publicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_runtime() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_runtimeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_runtime' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_runtimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_year() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_yearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_year' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_yearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_countries_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_countries_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_countries_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_picture_format() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_picture_formatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_picture_format' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_picture_formatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_rating() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_ratingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_rating' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_ratingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_directors_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_directors_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_directors_id' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_directors_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_regional_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_regional_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_regional_code' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_regional_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_studio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_studioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_studio' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_studioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_barcode() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_barcodeColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_barcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvd_quantity() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_dvd_quantityColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_dvd_quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_language_fr() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_language_frColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_language_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_undertitle_nl() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_undertitle_nlColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_undertitle_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_the_bags() As Integer
            Get
                Return CType(Me(Me.tableproducts.in_the_bagsColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.in_the_bagsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_the_bags_next() As Integer
            Get
                Return CType(Me(Me.tableproducts.in_the_bags_nextColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.in_the_bags_nextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_cinema_now() As Integer
            Get
                Return CType(Me(Me.tableproducts.in_cinema_nowColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.in_cinema_nowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvdpostchoice() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_dvdpostchoiceColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_dvdpostchoiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_other_language() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_other_languageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_other_language' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_other_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_french() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_frenchColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_frenchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_next() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_nextColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_nextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tiscali_hp_fr() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_tiscali_hp_frColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_tiscali_hp_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tiscali_hp_nl() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_tiscali_hp_nlColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_tiscali_hp_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_number() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_numberColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_aboprocess_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_aboprocess_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_aboprocess_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_aboprocess_number() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_aboprocess_numberColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_aboprocess_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cinebel_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.cinebel_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cinebel_id' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.cinebel_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cinebel_trailer() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.cinebel_trailerColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cinebel_trailer' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.cinebel_trailerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing() As Integer
            Get
                Return CType(Me(Me.tableproducts.feesharingColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.feesharingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_end() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.feesharing_endColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_end' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.feesharing_endColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_upfront_fee() As Decimal
            Get
                Return CType(Me(Me.tableproducts.feesharing_upfront_feeColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.feesharing_upfront_feeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_upfront_fee_recoverable() As Integer
            Get
                Return CType(Me(Me.tableproducts.feesharing_upfront_fee_recoverableColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.feesharing_upfront_fee_recoverableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_turn_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.feesharing_turn_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.feesharing_turn_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_turn_price_after3month() As Decimal
            Get
                Return CType(Me(Me.tableproducts.feesharing_turn_price_after3monthColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.feesharing_turn_price_after3monthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_buy_option_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.feesharing_buy_option_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.feesharing_buy_option_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_expected_nbr_turns() As Integer
            Get
                Return CType(Me(Me.tableproducts.feesharing_expected_nbr_turnsColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.feesharing_expected_nbr_turnsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_desire() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_desireColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_desireColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_desire_weighted() As Decimal
            Get
                Return CType(Me(Me.tableproducts.products_desire_weightedColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.products_desire_weightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_availability() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_availabilityColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_availabilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quantity_to_sale() As Integer
            Get
                Return CType(Me(Me.tableproducts.quantity_to_saleColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.quantity_to_saleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_sale_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.products_sale_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.products_sale_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_sale_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_sale_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_sale_date' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_sale_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tableproducts.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_imageNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_imageNull()
            Me(Me.tableproducts.products_imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_addedNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_addedNull()
            Me(Me.tableproducts.products_date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_last_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_last_modifiedNull()
            Me(Me.tableproducts.products_last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_availableNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_date_availableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_availableNull()
            Me(Me.tableproducts.products_date_availableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_weightNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_weightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_weightNull()
            Me(Me.tableproducts.products_weightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismanufacturers_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts.manufacturers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmanufacturers_idNull()
            Me(Me.tableproducts.manufacturers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_publicNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_publicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_publicNull()
            Me(Me.tableproducts.products_publicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_runtimeNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_runtimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_runtimeNull()
            Me(Me.tableproducts.products_runtimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_yearNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_yearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_yearNull()
            Me(Me.tableproducts.products_yearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_picture_formatNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_picture_formatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_picture_formatNull()
            Me(Me.tableproducts.products_picture_formatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_ratingNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_ratingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_ratingNull()
            Me(Me.tableproducts.products_ratingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_directors_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_directors_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_directors_idNull()
            Me(Me.tableproducts.products_directors_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_regional_codeNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_regional_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_regional_codeNull()
            Me(Me.tableproducts.products_regional_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_studioNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_studioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_studioNull()
            Me(Me.tableproducts.products_studioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_other_languageNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_other_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_other_languageNull()
            Me(Me.tableproducts.products_other_languageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscinebel_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts.cinebel_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcinebel_idNull()
            Me(Me.tableproducts.cinebel_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscinebel_trailerNull() As Boolean
            Return Me.IsNull(Me.tableproducts.cinebel_trailerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcinebel_trailerNull()
            Me(Me.tableproducts.cinebel_trailerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_endNull() As Boolean
            Return Me.IsNull(Me.tableproducts.feesharing_endColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_endNull()
            Me(Me.tableproducts.feesharing_endColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_sale_dateNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_sale_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_sale_dateNull()
            Me(Me.tableproducts.products_sale_dateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class wishlistRow
        Inherits Global.System.Data.DataRow
        
        Private tablewishlist As wishlistDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablewishlist = CType(Me.Table,wishlistDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wl_id() As Integer
            Get
                Return CType(Me(Me.tablewishlist.wl_idColumn),Integer)
            End Get
            Set
                Me(Me.tablewishlist.wl_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tablewishlist.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tablewishlist.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property product_id() As Integer
            Get
                Return CType(Me(Me.tablewishlist.product_idColumn),Integer)
            End Get
            Set
                Me(Me.tablewishlist.product_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rank() As Integer
            Get
                Return CType(Me(Me.tablewishlist.rankColumn),Integer)
            End Get
            Set
                Me(Me.tablewishlist.rankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property priority() As Short
            Get
                Return CType(Me(Me.tablewishlist.priorityColumn),Short)
            End Get
            Set
                Me(Me.tablewishlist.priorityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tablewishlist.date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_added' in table 'wishlist' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablewishlist.date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_addedNull() As Boolean
            Return Me.IsNull(Me.tablewishlist.date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_addedNull()
            Me(Me.tablewishlist.date_addedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class products_dvdRow
        Inherits Global.System.Data.DataRow
        
        Private tableproducts_dvd As products_dvdDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproducts_dvd = CType(Me.Table,products_dvdDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_dvd.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_dvd.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvdid() As Integer
            Get
                Return CType(Me(Me.tableproducts_dvd.products_dvdidColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_dvd.products_dvdidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvd_status() As Integer
            Get
                Return CType(Me(Me.tableproducts_dvd.products_dvd_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_dvd.products_dvd_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property inout() As Short
            Get
                Return CType(Me(Me.tableproducts_dvd.inoutColumn),Short)
            End Get
            Set
                Me(Me.tableproducts_dvd.inoutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvd_buy_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts_dvd.dvd_buy_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dvd_buy_date' in table 'products_dvd' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_dvd.dvd_buy_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_lastrented() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts_dvd.date_lastrentedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_lastrented' in table 'products_dvd' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_dvd.date_lastrentedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nbr_rotation_in_feesharing() As Integer
            Get
                Return CType(Me(Me.tableproducts_dvd.nbr_rotation_in_feesharingColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_dvd.nbr_rotation_in_feesharingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property box_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_dvd.box_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_dvd.box_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pibox_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_dvd.pibox_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_dvd.pibox_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_adminby() As Long
            Get
                Return CType(Me(Me.tableproducts_dvd.last_adminbyColumn),Long)
            End Get
            Set
                Me(Me.tableproducts_dvd.last_adminbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_admindate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts_dvd.last_admindateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_admindate' in table 'products_dvd' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_dvd.last_admindateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property preattribute_orders_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_dvd.preattribute_orders_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_dvd.preattribute_orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdvd_buy_dateNull() As Boolean
            Return Me.IsNull(Me.tableproducts_dvd.dvd_buy_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdvd_buy_dateNull()
            Me(Me.tableproducts_dvd.dvd_buy_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_lastrentedNull() As Boolean
            Return Me.IsNull(Me.tableproducts_dvd.date_lastrentedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_lastrentedNull()
            Me(Me.tableproducts_dvd.date_lastrentedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islast_admindateNull() As Boolean
            Return Me.IsNull(Me.tableproducts_dvd.last_admindateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlast_admindateNull()
            Me(Me.tableproducts_dvd.last_admindateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tmp1Row
        Inherits Global.System.Data.DataRow
        
        Private tabletmp1 As tmp1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletmp1 = CType(Me.Table,tmp1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tabletmp1.IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletmp1.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Txt1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletmp1.Txt1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Txt1' in table 'tmp1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletmp1.Txt1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Int_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletmp1.Int_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Int_1' in table 'tmp1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletmp1.Int_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Int_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletmp1.Int_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Int_2' in table 'tmp1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletmp1.Int_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Int_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletmp1.Int_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Int_3' in table 'tmp1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletmp1.Int_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTxt1Null() As Boolean
            Return Me.IsNull(Me.tabletmp1.Txt1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTxt1Null()
            Me(Me.tabletmp1.Txt1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInt_1Null() As Boolean
            Return Me.IsNull(Me.tabletmp1.Int_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInt_1Null()
            Me(Me.tabletmp1.Int_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInt_2Null() As Boolean
            Return Me.IsNull(Me.tabletmp1.Int_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInt_2Null()
            Me(Me.tabletmp1.Int_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInt_3Null() As Boolean
            Return Me.IsNull(Me.tabletmp1.Int_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInt_3Null()
            Me(Me.tabletmp1.Int_3Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class products_undertitles_View1Row
        Inherits Global.System.Data.DataRow
        
        Private tableproducts_undertitles_View1 As products_undertitles_View1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproducts_undertitles_View1 = CType(Me.Table,products_undertitles_View1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_undertitles_View1.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_undertitles_View1.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property undertitles_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_undertitles_View1.undertitles_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_undertitles_View1.undertitles_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Language_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_undertitles_View1.Language_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Language_ID' in table 'products_undertitles_View1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_undertitles_View1.Language_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts_undertitles_View1.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'products_undertitles_View1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_undertitles_View1.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLanguage_IDNull() As Boolean
            Return Me.IsNull(Me.tableproducts_undertitles_View1.Language_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLanguage_IDNull()
            Me(Me.tableproducts_undertitles_View1.Language_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableproducts_undertitles_View1.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableproducts_undertitles_View1.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class products_languages_View1Row
        Inherits Global.System.Data.DataRow
        
        Private tableproducts_languages_View1 As products_languages_View1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproducts_languages_View1 = CType(Me.Table,products_languages_View1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_languages_View1.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_languages_View1.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property languages_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_languages_View1.languages_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_languages_View1.languages_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LanguageNav_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_languages_View1.LanguageNav_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LanguageNav_ID' in table 'products_languages_View1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_languages_View1.LanguageNav_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts_languages_View1.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'products_languages_View1' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_languages_View1.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLanguageNav_IDNull() As Boolean
            Return Me.IsNull(Me.tableproducts_languages_View1.LanguageNav_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLanguageNav_IDNull()
            Me(Me.tableproducts_languages_View1.LanguageNav_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableproducts_languages_View1.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableproducts_languages_View1.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_Orders_AnaRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_Orders_Ana As VIEW_Orders_AnaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_Orders_Ana = CType(Me.Table,VIEW_Orders_AnaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_id' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_quantity() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_quantityColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_quantity' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property imdb_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.imdb_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'imdb_id' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.imdb_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_title() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_titleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_title' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_image() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_imageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_image' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_priceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_price' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_added' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_last_modified' in table 'VIEW_Orders_Ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_available() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_date_availableColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_available' in table 'VIEW_Orders_Ana' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_date_availableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_weight() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_weightColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_weight' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_weightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_status' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tax_class_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_tax_class_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_tax_class_id' in table 'VIEW_Orders_Ana' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_tax_class_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property manufacturers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.manufacturers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'manufacturers_id' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.manufacturers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.orders_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_type' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.orders_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_ordered() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_orderedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_ordered' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_orderedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_public() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_publicColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_public' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_publicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_runtime() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_runtimeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_runtime' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_runtimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_year() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_yearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_year' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_yearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_countries_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_countries_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_countries_id' in table 'VIEW_Orders_Ana' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_countries_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_picture_format() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_picture_formatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_picture_format' in table 'VIEW_Orders_Ana' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_picture_formatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_rating() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_ratingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_rating' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_ratingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_directors_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_directors_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_directors_id' in table 'VIEW_Orders_Ana' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_directors_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_regional_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_regional_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_regional_code' in table 'VIEW_Orders_Ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_regional_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_studio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_studioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_studio' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_studioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_barcode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_barcodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_barcode' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_barcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvd_quantity() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_dvd_quantityColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_dvd_quantity' in table 'VIEW_Orders_Ana' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_dvd_quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_language_fr() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_language_frColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_language_fr' in table 'VIEW_Orders_Ana' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_language_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_undertitle_nl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_undertitle_nlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_undertitle_nl' in table 'VIEW_Orders_Ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_undertitle_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_the_bags() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.in_the_bagsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'in_the_bags' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.in_the_bagsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_the_bags_next() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.in_the_bags_nextColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'in_the_bags_next' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.in_the_bags_nextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_cinema_now() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.in_cinema_nowColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'in_cinema_now' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.in_cinema_nowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvdpostchoice() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_dvdpostchoiceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_dvdpostchoice' in table 'VIEW_Orders_Ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_dvdpostchoiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_other_language() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_other_languageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_other_language' in table 'VIEW_Orders_Ana' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_other_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_french() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_frenchColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_french' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_frenchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_next() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_nextColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_next' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_nextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tiscali_hp_fr() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_tiscali_hp_frColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_tiscali_hp_fr' in table 'VIEW_Orders_Ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_tiscali_hp_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tiscali_hp_nl() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_tiscali_hp_nlColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_tiscali_hp_nl' in table 'VIEW_Orders_Ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_tiscali_hp_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_series_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_series_id' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_series_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_number() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_series_numberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_series_number' in table 'VIEW_Orders_Ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_series_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_aboprocess_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_series_aboprocess_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_series_aboprocess_id' in table 'VIEW_Orders_Ana' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_series_aboprocess_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_aboprocess_number() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_series_aboprocess_numberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_series_aboprocess_number' in table 'VIEW_Orders_An"& _ 
                            "a' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_series_aboprocess_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cinebel_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.cinebel_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cinebel_id' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.cinebel_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cinebel_trailer() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.cinebel_trailerColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cinebel_trailer' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.cinebel_trailerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.feesharingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.feesharingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_end() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.feesharing_endColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_end' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.feesharing_endColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_upfront_fee() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.feesharing_upfront_feeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_upfront_fee' in table 'VIEW_Orders_Ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.feesharing_upfront_feeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_upfront_fee_recoverable() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.feesharing_upfront_fee_recoverableColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_upfront_fee_recoverable' in table 'VIEW_Orders_A"& _ 
                            "na' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.feesharing_upfront_fee_recoverableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_turn_price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.feesharing_turn_priceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_turn_price' in table 'VIEW_Orders_Ana' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.feesharing_turn_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_turn_price_after3month() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.feesharing_turn_price_after3monthColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_turn_price_after3month' in table 'VIEW_Orders_An"& _ 
                            "a' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.feesharing_turn_price_after3monthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_buy_option_price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.feesharing_buy_option_priceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_buy_option_price' in table 'VIEW_Orders_Ana' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.feesharing_buy_option_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_expected_nbr_turns() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.feesharing_expected_nbr_turnsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_expected_nbr_turns' in table 'VIEW_Orders_Ana' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.feesharing_expected_nbr_turnsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_desire() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_desireColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_desire' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_desireColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_desire_weighted() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_desire_weightedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_desire_weighted' in table 'VIEW_Orders_Ana' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_desire_weightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_availability() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_availabilityColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_availability' in table 'VIEW_Orders_Ana' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_availabilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quantity_to_sale() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.quantity_to_saleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quantity_to_sale' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.quantity_to_saleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_sale_price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_sale_priceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_sale_price' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_sale_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_sale_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_sale_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_sale_date' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_sale_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.orders_products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_products_id' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.orders_products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.orders_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_id' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property op_products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.op_products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'op_products_model' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.op_products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_name' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property op_products_price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.op_products_priceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'op_products_price' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.op_products_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property final_price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.final_priceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'final_price' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.final_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tax() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_taxColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_tax' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_taxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property op_products_qty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.op_products_qtyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'op_products_qty' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.op_products_qtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvd() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_dvdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_dvd' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_dvdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_products_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.orders_products_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_products_status' in table 'VIEW_Orders_Ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.orders_products_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.customers_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_name' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.customers_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_street_address() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.customers_street_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_street_address' in table 'VIEW_Orders_Ana' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.customers_street_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_suburb() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.customers_suburbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_suburb' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.customers_suburbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_city() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.customers_cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_city' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.customers_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_postcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.customers_postcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_postcode' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.customers_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_state() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.customers_stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_state' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.customers_stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_country() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.customers_countryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_country' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.customers_countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.customers_telephoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_telephone' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.customers_email_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_email_address' in table 'VIEW_Orders_Ana' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_address_format_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.customers_address_format_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_address_format_id' in table 'VIEW_Orders_Ana' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.customers_address_format_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.delivery_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_name' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.delivery_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_street_address() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.delivery_street_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_street_address' in table 'VIEW_Orders_Ana' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.delivery_street_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_suburb() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.delivery_suburbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_suburb' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.delivery_suburbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_city() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.delivery_cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_city' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.delivery_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_postcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.delivery_postcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_postcode' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.delivery_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_state() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.delivery_stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_state' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.delivery_stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_country() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.delivery_countryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_country' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.delivery_countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_address_format_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.delivery_address_format_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_address_format_id' in table 'VIEW_Orders_Ana' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.delivery_address_format_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_method() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.payment_methodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'payment_method' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.cc_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_type' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.cc_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.cc_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_owner' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.cc_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.cc_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_number' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.cc_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_expires() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.cc_expiresColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_expires' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.cc_expiresColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_modified' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_purchased() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.date_purchasedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_purchased' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.date_purchasedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.orders_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_status' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.orders_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_date_finished() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.orders_date_finishedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_date_finished' in table 'VIEW_Orders_Ana' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.orders_date_finishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comments() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comments' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property currency() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.currencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'currency' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.currencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property currency_value() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.currency_valueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'currency_value' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.currency_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.siteColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'site' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property secured_mail() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.secured_mailColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'secured_mail' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.secured_mailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property multishipment_sm() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.multishipment_smColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'multishipment_sm' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.multishipment_smColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property studio_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.studio_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'studio_name' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.studio_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lang_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.customers_lang_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_lang_id' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.customers_lang_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property qty_at_home() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.qty_at_homeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'qty_at_home' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.qty_at_homeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property qty_credit() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.qty_creditColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'qty_credit' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.qty_creditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_media() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_mediaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_media' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_mediaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.products_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_type' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.products_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property paidCust() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.paidCustColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'paidCust' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.paidCustColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property user_modified() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Ana.user_modifiedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'user_modified' in table 'VIEW_Orders_Ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Ana.user_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_idNull()
            Me(Me.tableVIEW_Orders_Ana.products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_quantityNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_quantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_quantityNull()
            Me(Me.tableVIEW_Orders_Ana.products_quantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tableVIEW_Orders_Ana.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isimdb_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.imdb_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setimdb_idNull()
            Me(Me.tableVIEW_Orders_Ana.imdb_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_titleNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_titleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_titleNull()
            Me(Me.tableVIEW_Orders_Ana.products_titleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_imageNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_imageNull()
            Me(Me.tableVIEW_Orders_Ana.products_imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_priceNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_priceNull()
            Me(Me.tableVIEW_Orders_Ana.products_priceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_addedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_addedNull()
            Me(Me.tableVIEW_Orders_Ana.products_date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_last_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_last_modifiedNull()
            Me(Me.tableVIEW_Orders_Ana.products_last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_availableNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_date_availableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_availableNull()
            Me(Me.tableVIEW_Orders_Ana.products_date_availableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_weightNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_weightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_weightNull()
            Me(Me.tableVIEW_Orders_Ana.products_weightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_statusNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_statusNull()
            Me(Me.tableVIEW_Orders_Ana.products_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_tax_class_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_tax_class_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_tax_class_idNull()
            Me(Me.tableVIEW_Orders_Ana.products_tax_class_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismanufacturers_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.manufacturers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmanufacturers_idNull()
            Me(Me.tableVIEW_Orders_Ana.manufacturers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_typeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.orders_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_typeNull()
            Me(Me.tableVIEW_Orders_Ana.orders_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_orderedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_orderedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_orderedNull()
            Me(Me.tableVIEW_Orders_Ana.products_orderedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_publicNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_publicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_publicNull()
            Me(Me.tableVIEW_Orders_Ana.products_publicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_runtimeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_runtimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_runtimeNull()
            Me(Me.tableVIEW_Orders_Ana.products_runtimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_yearNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_yearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_yearNull()
            Me(Me.tableVIEW_Orders_Ana.products_yearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_countries_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_countries_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_countries_idNull()
            Me(Me.tableVIEW_Orders_Ana.products_countries_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_picture_formatNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_picture_formatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_picture_formatNull()
            Me(Me.tableVIEW_Orders_Ana.products_picture_formatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_ratingNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_ratingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_ratingNull()
            Me(Me.tableVIEW_Orders_Ana.products_ratingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_directors_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_directors_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_directors_idNull()
            Me(Me.tableVIEW_Orders_Ana.products_directors_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_regional_codeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_regional_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_regional_codeNull()
            Me(Me.tableVIEW_Orders_Ana.products_regional_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_studioNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_studioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_studioNull()
            Me(Me.tableVIEW_Orders_Ana.products_studioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_barcodeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_barcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_barcodeNull()
            Me(Me.tableVIEW_Orders_Ana.products_barcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_dvd_quantityNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_dvd_quantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_dvd_quantityNull()
            Me(Me.tableVIEW_Orders_Ana.products_dvd_quantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_language_frNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_language_frColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_language_frNull()
            Me(Me.tableVIEW_Orders_Ana.products_language_frColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_undertitle_nlNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_undertitle_nlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_undertitle_nlNull()
            Me(Me.tableVIEW_Orders_Ana.products_undertitle_nlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isin_the_bagsNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.in_the_bagsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setin_the_bagsNull()
            Me(Me.tableVIEW_Orders_Ana.in_the_bagsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isin_the_bags_nextNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.in_the_bags_nextColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setin_the_bags_nextNull()
            Me(Me.tableVIEW_Orders_Ana.in_the_bags_nextColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isin_cinema_nowNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.in_cinema_nowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setin_cinema_nowNull()
            Me(Me.tableVIEW_Orders_Ana.in_cinema_nowColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_dvdpostchoiceNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_dvdpostchoiceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_dvdpostchoiceNull()
            Me(Me.tableVIEW_Orders_Ana.products_dvdpostchoiceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_other_languageNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_other_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_other_languageNull()
            Me(Me.tableVIEW_Orders_Ana.products_other_languageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_frenchNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_frenchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_frenchNull()
            Me(Me.tableVIEW_Orders_Ana.products_frenchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_nextNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_nextColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_nextNull()
            Me(Me.tableVIEW_Orders_Ana.products_nextColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_tiscali_hp_frNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_tiscali_hp_frColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_tiscali_hp_frNull()
            Me(Me.tableVIEW_Orders_Ana.products_tiscali_hp_frColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_tiscali_hp_nlNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_tiscali_hp_nlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_tiscali_hp_nlNull()
            Me(Me.tableVIEW_Orders_Ana.products_tiscali_hp_nlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_series_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_series_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_series_idNull()
            Me(Me.tableVIEW_Orders_Ana.products_series_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_series_numberNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_series_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_series_numberNull()
            Me(Me.tableVIEW_Orders_Ana.products_series_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_series_aboprocess_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_series_aboprocess_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_series_aboprocess_idNull()
            Me(Me.tableVIEW_Orders_Ana.products_series_aboprocess_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_series_aboprocess_numberNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_series_aboprocess_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_series_aboprocess_numberNull()
            Me(Me.tableVIEW_Orders_Ana.products_series_aboprocess_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscinebel_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.cinebel_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcinebel_idNull()
            Me(Me.tableVIEW_Orders_Ana.cinebel_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscinebel_trailerNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.cinebel_trailerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcinebel_trailerNull()
            Me(Me.tableVIEW_Orders_Ana.cinebel_trailerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfeesharingNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.feesharingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfeesharingNull()
            Me(Me.tableVIEW_Orders_Ana.feesharingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_endNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.feesharing_endColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_endNull()
            Me(Me.tableVIEW_Orders_Ana.feesharing_endColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_upfront_feeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.feesharing_upfront_feeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_upfront_feeNull()
            Me(Me.tableVIEW_Orders_Ana.feesharing_upfront_feeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_upfront_fee_recoverableNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.feesharing_upfront_fee_recoverableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_upfront_fee_recoverableNull()
            Me(Me.tableVIEW_Orders_Ana.feesharing_upfront_fee_recoverableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_turn_priceNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.feesharing_turn_priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_turn_priceNull()
            Me(Me.tableVIEW_Orders_Ana.feesharing_turn_priceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_turn_price_after3monthNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.feesharing_turn_price_after3monthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_turn_price_after3monthNull()
            Me(Me.tableVIEW_Orders_Ana.feesharing_turn_price_after3monthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_buy_option_priceNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.feesharing_buy_option_priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_buy_option_priceNull()
            Me(Me.tableVIEW_Orders_Ana.feesharing_buy_option_priceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_expected_nbr_turnsNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.feesharing_expected_nbr_turnsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_expected_nbr_turnsNull()
            Me(Me.tableVIEW_Orders_Ana.feesharing_expected_nbr_turnsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_desireNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_desireColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_desireNull()
            Me(Me.tableVIEW_Orders_Ana.products_desireColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_desire_weightedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_desire_weightedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_desire_weightedNull()
            Me(Me.tableVIEW_Orders_Ana.products_desire_weightedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_availabilityNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_availabilityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_availabilityNull()
            Me(Me.tableVIEW_Orders_Ana.products_availabilityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquantity_to_saleNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.quantity_to_saleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquantity_to_saleNull()
            Me(Me.tableVIEW_Orders_Ana.quantity_to_saleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_sale_priceNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_sale_priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_sale_priceNull()
            Me(Me.tableVIEW_Orders_Ana.products_sale_priceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_sale_dateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_sale_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_sale_dateNull()
            Me(Me.tableVIEW_Orders_Ana.products_sale_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_products_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.orders_products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_products_idNull()
            Me(Me.tableVIEW_Orders_Ana.orders_products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.orders_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_idNull()
            Me(Me.tableVIEW_Orders_Ana.orders_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isop_products_modelNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.op_products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setop_products_modelNull()
            Me(Me.tableVIEW_Orders_Ana.op_products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_nameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_nameNull()
            Me(Me.tableVIEW_Orders_Ana.products_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isop_products_priceNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.op_products_priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setop_products_priceNull()
            Me(Me.tableVIEW_Orders_Ana.op_products_priceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfinal_priceNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.final_priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfinal_priceNull()
            Me(Me.tableVIEW_Orders_Ana.final_priceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_taxNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_taxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_taxNull()
            Me(Me.tableVIEW_Orders_Ana.products_taxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isop_products_qtyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.op_products_qtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setop_products_qtyNull()
            Me(Me.tableVIEW_Orders_Ana.op_products_qtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_dvdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_dvdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_dvdNull()
            Me(Me.tableVIEW_Orders_Ana.products_dvdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_products_statusNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.orders_products_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_products_statusNull()
            Me(Me.tableVIEW_Orders_Ana.orders_products_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableVIEW_Orders_Ana.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_nameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.customers_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_nameNull()
            Me(Me.tableVIEW_Orders_Ana.customers_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_street_addressNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.customers_street_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_street_addressNull()
            Me(Me.tableVIEW_Orders_Ana.customers_street_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_suburbNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.customers_suburbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_suburbNull()
            Me(Me.tableVIEW_Orders_Ana.customers_suburbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_cityNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.customers_cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_cityNull()
            Me(Me.tableVIEW_Orders_Ana.customers_cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_postcodeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.customers_postcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_postcodeNull()
            Me(Me.tableVIEW_Orders_Ana.customers_postcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_stateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.customers_stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_stateNull()
            Me(Me.tableVIEW_Orders_Ana.customers_stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_countryNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.customers_countryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_countryNull()
            Me(Me.tableVIEW_Orders_Ana.customers_countryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_telephoneNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.customers_telephoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_telephoneNull()
            Me(Me.tableVIEW_Orders_Ana.customers_telephoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_email_addressNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.customers_email_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_email_addressNull()
            Me(Me.tableVIEW_Orders_Ana.customers_email_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_address_format_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.customers_address_format_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_address_format_idNull()
            Me(Me.tableVIEW_Orders_Ana.customers_address_format_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_nameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.delivery_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_nameNull()
            Me(Me.tableVIEW_Orders_Ana.delivery_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_street_addressNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.delivery_street_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_street_addressNull()
            Me(Me.tableVIEW_Orders_Ana.delivery_street_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_suburbNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.delivery_suburbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_suburbNull()
            Me(Me.tableVIEW_Orders_Ana.delivery_suburbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_cityNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.delivery_cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_cityNull()
            Me(Me.tableVIEW_Orders_Ana.delivery_cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_postcodeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.delivery_postcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_postcodeNull()
            Me(Me.tableVIEW_Orders_Ana.delivery_postcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_stateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.delivery_stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_stateNull()
            Me(Me.tableVIEW_Orders_Ana.delivery_stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_countryNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.delivery_countryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_countryNull()
            Me(Me.tableVIEW_Orders_Ana.delivery_countryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_address_format_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.delivery_address_format_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_address_format_idNull()
            Me(Me.tableVIEW_Orders_Ana.delivery_address_format_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispayment_methodNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.payment_methodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpayment_methodNull()
            Me(Me.tableVIEW_Orders_Ana.payment_methodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_typeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.cc_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_typeNull()
            Me(Me.tableVIEW_Orders_Ana.cc_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_ownerNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.cc_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_ownerNull()
            Me(Me.tableVIEW_Orders_Ana.cc_ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_numberNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.cc_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_numberNull()
            Me(Me.tableVIEW_Orders_Ana.cc_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_expiresNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.cc_expiresColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_expiresNull()
            Me(Me.tableVIEW_Orders_Ana.cc_expiresColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islast_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlast_modifiedNull()
            Me(Me.tableVIEW_Orders_Ana.last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_purchasedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.date_purchasedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_purchasedNull()
            Me(Me.tableVIEW_Orders_Ana.date_purchasedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_statusNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.orders_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_statusNull()
            Me(Me.tableVIEW_Orders_Ana.orders_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_date_finishedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.orders_date_finishedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_date_finishedNull()
            Me(Me.tableVIEW_Orders_Ana.orders_date_finishedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscommentsNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcommentsNull()
            Me(Me.tableVIEW_Orders_Ana.commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurrencyNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.currencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurrencyNull()
            Me(Me.tableVIEW_Orders_Ana.currencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscurrency_valueNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.currency_valueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcurrency_valueNull()
            Me(Me.tableVIEW_Orders_Ana.currency_valueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssiteNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.siteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsiteNull()
            Me(Me.tableVIEW_Orders_Ana.siteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issecured_mailNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.secured_mailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsecured_mailNull()
            Me(Me.tableVIEW_Orders_Ana.secured_mailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismultishipment_smNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.multishipment_smColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmultishipment_smNull()
            Me(Me.tableVIEW_Orders_Ana.multishipment_smColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstudio_nameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.studio_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstudio_nameNull()
            Me(Me.tableVIEW_Orders_Ana.studio_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_lang_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.customers_lang_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_lang_idNull()
            Me(Me.tableVIEW_Orders_Ana.customers_lang_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isqty_at_homeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.qty_at_homeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setqty_at_homeNull()
            Me(Me.tableVIEW_Orders_Ana.qty_at_homeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isqty_creditNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.qty_creditColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setqty_creditNull()
            Me(Me.tableVIEW_Orders_Ana.qty_creditColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_mediaNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_mediaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_mediaNull()
            Me(Me.tableVIEW_Orders_Ana.products_mediaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_typeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.products_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_typeNull()
            Me(Me.tableVIEW_Orders_Ana.products_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspaidCustNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.paidCustColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpaidCustNull()
            Me(Me.tableVIEW_Orders_Ana.paidCustColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isuser_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Ana.user_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setuser_modifiedNull()
            Me(Me.tableVIEW_Orders_Ana.user_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_discount_anaRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_discount_ana As VIEW_discount_anaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_discount_ana = CType(Me.Table,VIEW_discount_anaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code_id() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_code_idColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code() As String
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_codeColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_type() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_typeColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_value() As Decimal
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_valueColumn),Decimal)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_limit() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_limitColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_limitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_commitment() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_commitmentColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_commitmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_status() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_text_fr() As String
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_text_frColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_text_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_text_nl() As String
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_text_nlColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_text_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_text_en() As String
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_text_enColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_text_enColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_abo_validityto_type() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_abo_validityto_typeColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_abo_validityto_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_abo_validityto_value() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_abo_validityto_valueColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_abo_validityto_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.commentColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_nbr_month_before_reuse() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_nbr_month_before_reuseColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_nbr_month_before_reuseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_recurring_nbr_of_month() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.discount_recurring_nbr_of_monthColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_recurring_nbr_of_monthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bypass_discountuse() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.bypass_discountuseColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.bypass_discountuseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.discount_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discount_validityto' in table 'VIEW_discount_ana' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payable() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana.payableColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.payableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_use_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.discount_use_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discount_use_id' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_use_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_use_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.discount_use_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discount_use_date' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_use_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_explained() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.discount_explainedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discount_explained' in table 'VIEW_discount_ana' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.discount_explainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_gender() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_genderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_gender' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_firstname' in table 'VIEW_discount_ana' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_lastname' in table 'VIEW_discount_ana' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_dob' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_email_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_email_address' in table 'VIEW_discount_ana' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_default_address_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_default_address_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_default_address_id' in table 'VIEW_discount_ana' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_default_address_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_telephoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_telephone' in table 'VIEW_discount_ana' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone_evening() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_telephone_eveningColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_telephone_evening' in table 'VIEW_discount_ana' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_telephone_eveningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_fax() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_faxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_fax' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_password() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_passwordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_password' in table 'VIEW_discount_ana' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletter() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_newsletterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletter' in table 'VIEW_discount_ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_newsletterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletterpartner() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_newsletterpartnerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletterpartner' in table 'VIEW_discount_ana' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_newsletterpartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_privilegeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_privilege' in table 'VIEW_discount_ana' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_privilegeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege_balance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_privilege_balanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_privilege_balance' in table 'VIEW_discount_ana' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_privilege_balanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_garantie() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_garantieColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_garantie' in table 'VIEW_discount_ana' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_garantieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsoring_code() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.sponsoring_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsoring_code' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.sponsoring_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsored_code() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.sponsored_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsored_code' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.sponsored_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_aboColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_suspended() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_suspendedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_suspended' in table 'VIEW_discount_ana' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_suspendedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_type() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_typeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_type' in table 'VIEW_discount_ana' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property flagminiat1995() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.flagminiat1995Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'flagminiat1995' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.flagminiat1995Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_method() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_methodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_method' in table 'VIEW_discount_ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_norm() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_dvd_normColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_norm' in table 'VIEW_discount_ana' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_dvd_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_adult() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_dvd_adultColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_adult' in table 'VIEW_discount_ana' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_dvd_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_norm() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_dvd_home_normColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_home_norm' in table 'VIEW_discount_ana' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_dvd_home_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_adult() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_dvd_home_adultColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_home_adult' in table 'VIEW_discount_ana' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_dvd_home_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property throttling() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.throttlingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'throttling' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.throttlingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_validityto' in table 'VIEW_discount_ana' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_rank() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_rankColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_rank' in table 'VIEW_discount_ana' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_rankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_start_rentthismonth() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_start_rentthismonthColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_start_rentthismonth' in table 'VIEW_discount_"& _ 
                            "ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_start_rentthismonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_credit() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_dvd_creditColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_credit' in table 'VIEW_discount_ana' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_dvd_creditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_multishipment() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_multishipmentColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_multishipment' in table 'VIEW_discount_ana' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_multishipmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_discount_recurring_to_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_discount_recurring_to_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_discount_recurring_to_date' in table 'VIEW_di"& _ 
                            "scount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_discount_recurring_to_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abotested() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.abotestedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abotested' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.abotestedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_status' in table 'VIEW_discount_ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_payment_method() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_abo_payment_methodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_payment_method' in table 'VIEW_discount_ana' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_abo_payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.domiciliation_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_status' in table 'VIEW_discount_ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.domiciliation_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_debiter_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.domiciliation_debiter_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_debiter_name' in table 'VIEW_discount_ana' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.domiciliation_debiter_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.domiciliation_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_number' in table 'VIEW_discount_ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.domiciliation_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_account_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.domiciliation_account_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_account_number' in table 'VIEW_discount_ana' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.domiciliation_account_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property adult_pwd() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.adult_pwdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adult_pwd' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.adult_pwdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.ogone_card_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_type' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.ogone_card_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_no() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.ogone_card_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_no' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.ogone_card_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_exp_date() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.ogone_exp_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_exp_date' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.ogone_exp_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.ogone_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_owner' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.ogone_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_cc_expiration_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.ogone_cc_expiration_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_cc_expiration_status' in table 'VIEW_discount_ana' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.ogone_cc_expiration_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property offline_payment_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.offline_payment_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'offline_payment_status' in table 'VIEW_discount_ana' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.offline_payment_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.Expr1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr1' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vip() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.vipColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vip' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.vipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property black_listed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.black_listedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'black_listed' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.black_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property red_listed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.red_listedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'red_listed' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.red_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sm_eligible() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.sm_eligibleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sm_eligible' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.sm_eligibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_enquiry_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.customers_enquiry_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_enquiry_id' in table 'VIEW_discount_ana' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.customers_enquiry_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_first_delivery() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.date_first_deliveryColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_first_delivery' in table 'VIEW_discount_ana' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.date_first_deliveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_adult_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.mail_wl_adult_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_adult_not_sufficient' in table 'VIEW_discount_ana' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.mail_wl_adult_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_norm_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.mail_wl_norm_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_norm_not_sufficient' in table 'VIEW_discount_ana' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.mail_wl_norm_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mgm_points() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.mgm_pointsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mgm_points' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.mgm_pointsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wishlist_kind() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana.wishlist_kindColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wishlist_kind' in table 'VIEW_discount_ana' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana.wishlist_kindColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_validitytoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.discount_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_validitytoNull()
            Me(Me.tableVIEW_discount_ana.discount_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_use_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.discount_use_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_use_idNull()
            Me(Me.tableVIEW_discount_ana.discount_use_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_use_dateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.discount_use_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_use_dateNull()
            Me(Me.tableVIEW_discount_ana.discount_use_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableVIEW_discount_ana.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_explainedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.discount_explainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_explainedNull()
            Me(Me.tableVIEW_discount_ana.discount_explainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_genderNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_genderNull()
            Me(Me.tableVIEW_discount_ana.customers_genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_firstnameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_firstnameNull()
            Me(Me.tableVIEW_discount_ana.customers_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_lastnameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_lastnameNull()
            Me(Me.tableVIEW_discount_ana.customers_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_dobNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_dobNull()
            Me(Me.tableVIEW_discount_ana.customers_dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_email_addressNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_email_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_email_addressNull()
            Me(Me.tableVIEW_discount_ana.customers_email_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_default_address_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_default_address_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_default_address_idNull()
            Me(Me.tableVIEW_discount_ana.customers_default_address_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_telephoneNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_telephoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_telephoneNull()
            Me(Me.tableVIEW_discount_ana.customers_telephoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_telephone_eveningNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_telephone_eveningColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_telephone_eveningNull()
            Me(Me.tableVIEW_discount_ana.customers_telephone_eveningColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_faxNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_faxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_faxNull()
            Me(Me.tableVIEW_discount_ana.customers_faxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_passwordNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_passwordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_passwordNull()
            Me(Me.tableVIEW_discount_ana.customers_passwordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_newsletterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterNull()
            Me(Me.tableVIEW_discount_ana.customers_newsletterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterpartnerNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_newsletterpartnerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterpartnerNull()
            Me(Me.tableVIEW_discount_ana.customers_newsletterpartnerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_privilegeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_privilegeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_privilegeNull()
            Me(Me.tableVIEW_discount_ana.customers_privilegeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_privilege_balanceNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_privilege_balanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_privilege_balanceNull()
            Me(Me.tableVIEW_discount_ana.customers_privilege_balanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_garantieNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_garantieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_garantieNull()
            Me(Me.tableVIEW_discount_ana.customers_garantieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsoring_codeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.sponsoring_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsoring_codeNull()
            Me(Me.tableVIEW_discount_ana.sponsoring_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsored_codeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.sponsored_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsored_codeNull()
            Me(Me.tableVIEW_discount_ana.sponsored_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_aboNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_aboColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_aboNull()
            Me(Me.tableVIEW_discount_ana.customers_aboColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_suspendedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_suspendedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_suspendedNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_suspendedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_typeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_typeNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isflagminiat1995Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.flagminiat1995Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setflagminiat1995Null()
            Me(Me.tableVIEW_discount_ana.flagminiat1995Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_methodNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_methodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_methodNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_methodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_normNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_dvd_normColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_normNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_dvd_normColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_adultNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_dvd_adultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_adultNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_dvd_adultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_home_normNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_dvd_home_normColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_home_normNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_dvd_home_normColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_home_adultNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_dvd_home_adultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_home_adultNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_dvd_home_adultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsthrottlingNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.throttlingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetthrottlingNull()
            Me(Me.tableVIEW_discount_ana.throttlingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_validitytoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_validitytoNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_rankNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_rankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_rankNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_rankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_start_rentthismonthNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_start_rentthismonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_start_rentthismonthNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_start_rentthismonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_creditNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_dvd_creditColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_creditNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_dvd_creditColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_multishipmentNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_multishipmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_multishipmentNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_multishipmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_discount_recurring_to_dateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_discount_recurring_to_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_discount_recurring_to_dateNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_discount_recurring_to_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsabotestedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.abotestedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetabotestedNull()
            Me(Me.tableVIEW_discount_ana.abotestedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_statusNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_statusNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_payment_methodNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_abo_payment_methodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_payment_methodNull()
            Me(Me.tableVIEW_discount_ana.customers_abo_payment_methodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_statusNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.domiciliation_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_statusNull()
            Me(Me.tableVIEW_discount_ana.domiciliation_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_debiter_nameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.domiciliation_debiter_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_debiter_nameNull()
            Me(Me.tableVIEW_discount_ana.domiciliation_debiter_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_numberNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.domiciliation_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_numberNull()
            Me(Me.tableVIEW_discount_ana.domiciliation_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_account_numberNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.domiciliation_account_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_account_numberNull()
            Me(Me.tableVIEW_discount_ana.domiciliation_account_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadult_pwdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.adult_pwdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadult_pwdNull()
            Me(Me.tableVIEW_discount_ana.adult_pwdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_typeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.ogone_card_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_typeNull()
            Me(Me.tableVIEW_discount_ana.ogone_card_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_noNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.ogone_card_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_noNull()
            Me(Me.tableVIEW_discount_ana.ogone_card_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_exp_dateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.ogone_exp_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_exp_dateNull()
            Me(Me.tableVIEW_discount_ana.ogone_exp_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_ownerNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.ogone_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_ownerNull()
            Me(Me.tableVIEW_discount_ana.ogone_ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_cc_expiration_statusNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.ogone_cc_expiration_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_cc_expiration_statusNull()
            Me(Me.tableVIEW_discount_ana.ogone_cc_expiration_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isoffline_payment_statusNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.offline_payment_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setoffline_payment_statusNull()
            Me(Me.tableVIEW_discount_ana.offline_payment_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr1Null()
            Me(Me.tableVIEW_discount_ana.Expr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsvipNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.vipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetvipNull()
            Me(Me.tableVIEW_discount_ana.vipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isblack_listedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.black_listedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setblack_listedNull()
            Me(Me.tableVIEW_discount_ana.black_listedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isred_listedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.red_listedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setred_listedNull()
            Me(Me.tableVIEW_discount_ana.red_listedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issm_eligibleNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.sm_eligibleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsm_eligibleNull()
            Me(Me.tableVIEW_discount_ana.sm_eligibleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_enquiry_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.customers_enquiry_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_enquiry_idNull()
            Me(Me.tableVIEW_discount_ana.customers_enquiry_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_first_deliveryNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.date_first_deliveryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_first_deliveryNull()
            Me(Me.tableVIEW_discount_ana.date_first_deliveryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_adult_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.mail_wl_adult_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_adult_not_sufficientNull()
            Me(Me.tableVIEW_discount_ana.mail_wl_adult_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_norm_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.mail_wl_norm_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_norm_not_sufficientNull()
            Me(Me.tableVIEW_discount_ana.mail_wl_norm_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismgm_pointsNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.mgm_pointsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmgm_pointsNull()
            Me(Me.tableVIEW_discount_ana.mgm_pointsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iswishlist_kindNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana.wishlist_kindColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setwishlist_kindNull()
            Me(Me.tableVIEW_discount_ana.wishlist_kindColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class discount_codeRow
        Inherits Global.System.Data.DataRow
        
        Private tablediscount_code As discount_codeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablediscount_code = CType(Me.Table,discount_codeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code_id() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_code_idColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code() As String
            Get
                Return CType(Me(Me.tablediscount_code.discount_codeColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code.discount_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_type() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_typeColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_value() As Decimal
            Get
                Return CType(Me(Me.tablediscount_code.discount_valueColumn),Decimal)
            End Get
            Set
                Me(Me.tablediscount_code.discount_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_limit() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_limitColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_limitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_commitment() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_commitmentColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_commitmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_status() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_statusColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_text_fr() As String
            Get
                Return CType(Me(Me.tablediscount_code.discount_text_frColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code.discount_text_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_text_nl() As String
            Get
                Return CType(Me(Me.tablediscount_code.discount_text_nlColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code.discount_text_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_text_en() As String
            Get
                Return CType(Me(Me.tablediscount_code.discount_text_enColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code.discount_text_enColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_abo_validityto_type() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_abo_validityto_typeColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_abo_validityto_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_abo_validityto_value() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_abo_validityto_valueColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_abo_validityto_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Return CType(Me(Me.tablediscount_code.commentColumn),String)
            End Get
            Set
                Me(Me.tablediscount_code.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_nbr_month_before_reuse() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_nbr_month_before_reuseColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_nbr_month_before_reuseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_recurring_nbr_of_month() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.discount_recurring_nbr_of_monthColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.discount_recurring_nbr_of_monthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bypass_discountuse() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.bypass_discountuseColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.bypass_discountuseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tablediscount_code.discount_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discount_validityto' in table 'discount_code' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablediscount_code.discount_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payable() As Integer
            Get
                Return CType(Me(Me.tablediscount_code.payableColumn),Integer)
            End Get
            Set
                Me(Me.tablediscount_code.payableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_validitytoNull() As Boolean
            Return Me.IsNull(Me.tablediscount_code.discount_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_validitytoNull()
            Me(Me.tablediscount_code.discount_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_FillCustForMailRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_FillCustForMail As VIEW_FillCustForMailDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_FillCustForMail = CType(Me.Table,VIEW_FillCustForMailDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_gender() As String
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_genderColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_firstnameColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_lastnameColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.customers_dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_dob' in table 'VIEW_FillCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_email_addressColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_default_address_id() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_default_address_idColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_default_address_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_telephoneColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone_evening() As String
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_telephone_eveningColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_telephone_eveningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_fax() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.customers_faxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_fax' in table 'VIEW_FillCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_password() As String
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_passwordColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletter() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.customers_newsletterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletter' in table 'VIEW_FillCustForMail' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_newsletterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletterpartner() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.customers_newsletterpartnerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletterpartner' in table 'VIEW_FillCustForMail"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_newsletterpartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_privilegeColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_privilegeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege_balance() As Decimal
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_privilege_balanceColumn),Decimal)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_privilege_balanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_garantie() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_garantieColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_garantieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsoring_code() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.sponsoring_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsoring_code' in table 'VIEW_FillCustForMail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.sponsoring_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsored_code() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.sponsored_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsored_code' in table 'VIEW_FillCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.sponsored_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_aboColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_suspended() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_suspendedColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_suspendedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_type() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_typeColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property flagminiat1995() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.flagminiat1995Column),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.flagminiat1995Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_method() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_methodColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_norm() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_dvd_normColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_dvd_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_adult() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_dvd_adultColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_dvd_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_norm() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_dvd_home_normColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_dvd_home_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_adult() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_dvd_home_adultColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_dvd_home_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property throttling() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.throttlingColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.throttlingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_validityto' in table 'VIEW_FillCustForMail' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_rank() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_rankColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_rankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_start_rentthismonth() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_start_rentthismonthColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_start_rentthismonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_credit() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_dvd_creditColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_dvd_creditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_multishipment() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_multishipmentColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_multishipmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_discount_recurring_to_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_discount_recurring_to_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_discount_recurring_to_date' in table 'VIEW_Fi"& _ 
                            "llCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_discount_recurring_to_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abotested() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.abotestedColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.abotestedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_status() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_payment_method() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_abo_payment_methodColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_abo_payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_status() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.domiciliation_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.domiciliation_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_debiter_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.domiciliation_debiter_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_debiter_name' in table 'VIEW_FillCustForMail'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.domiciliation_debiter_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.domiciliation_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_number' in table 'VIEW_FillCustForMail' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.domiciliation_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_account_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.domiciliation_account_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_account_number' in table 'VIEW_FillCustForMai"& _ 
                            "l' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.domiciliation_account_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property adult_pwd() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.adult_pwdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adult_pwd' in table 'VIEW_FillCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.adult_pwdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.ogone_card_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_type' in table 'VIEW_FillCustForMail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.ogone_card_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_no() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.ogone_card_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_no' in table 'VIEW_FillCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.ogone_card_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_exp_date() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.ogone_exp_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_exp_date' in table 'VIEW_FillCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.ogone_exp_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.ogone_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_owner' in table 'VIEW_FillCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.ogone_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_cc_expiration_status() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.ogone_cc_expiration_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.ogone_cc_expiration_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property offline_payment_status() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.offline_payment_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.offline_payment_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.commentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comment' in table 'VIEW_FillCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vip() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.vipColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.vipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property black_listed() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.black_listedColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.black_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property red_listed() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.red_listedColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.red_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sm_eligible() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.sm_eligibleColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.sm_eligibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_enquiry_id() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.customers_enquiry_idColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_enquiry_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_first_delivery() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.date_first_deliveryColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_first_delivery' in table 'VIEW_FillCustForMail' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.date_first_deliveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_adult_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.mail_wl_adult_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_adult_not_sufficient' in table 'VIEW_FillCustForMai"& _ 
                            "l' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.mail_wl_adult_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_norm_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.mail_wl_norm_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_norm_not_sufficient' in table 'VIEW_FillCustForMail"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.mail_wl_norm_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mgm_points() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.mgm_pointsColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.mgm_pointsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wishlist_kind() As Integer
            Get
                Return CType(Me(Me.tableVIEW_FillCustForMail.wishlist_kindColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.wishlist_kindColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_action() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.abo_actionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_action' in table 'VIEW_FillCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.abo_actionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.code_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code_id' in table 'VIEW_FillCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_last_action_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.abo_last_action_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_last_action_id' in table 'VIEW_FillCustForMail' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.abo_last_action_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_action_count() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.abo_action_countColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_action_count' in table 'VIEW_FillCustForMail' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.abo_action_countColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_action_id_list() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.abo_action_id_listColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_action_id_list' in table 'VIEW_FillCustForMail' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.abo_action_id_listColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_action_name_list() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.abo_action_name_listColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_action_name_list' in table 'VIEW_FillCustForMail' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.abo_action_name_listColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_last_action_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.abo_last_action_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_last_action_name' in table 'VIEW_FillCustForMail' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.abo_last_action_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_of_last_logon() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.customers_info_date_of_last_logonColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_of_last_logon' in table 'VIEW_FillCustF"& _ 
                            "orMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_info_date_of_last_logonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_number_of_logons() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.customers_info_number_of_logonsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_number_of_logons' in table 'VIEW_FillCustFor"& _ 
                            "Mail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_info_number_of_logonsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_account_created() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.customers_info_date_account_createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_account_created' in table 'VIEW_FillCus"& _ 
                            "tForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_info_date_account_createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_account_last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.customers_info_date_account_last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_account_last_modified' in table 'VIEW_F"& _ 
                            "illCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_info_date_account_last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property global_product_notifications() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.global_product_notificationsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'global_product_notifications' in table 'VIEW_FillCustForMai"& _ 
                            "l' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.global_product_notificationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_language() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.customers_languageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_language' in table 'VIEW_FillCustForMail' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.customers_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property partners_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.partners_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partners_id' in table 'VIEW_FillCustForMail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.partners_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property belgiqueloisirs_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_FillCustForMail.belgiqueloisirs_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'belgiqueloisirs_id' in table 'VIEW_FillCustForMail' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_FillCustForMail.belgiqueloisirs_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_dobNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.customers_dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_dobNull()
            Me(Me.tableVIEW_FillCustForMail.customers_dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_faxNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.customers_faxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_faxNull()
            Me(Me.tableVIEW_FillCustForMail.customers_faxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.customers_newsletterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterNull()
            Me(Me.tableVIEW_FillCustForMail.customers_newsletterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterpartnerNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.customers_newsletterpartnerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterpartnerNull()
            Me(Me.tableVIEW_FillCustForMail.customers_newsletterpartnerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsoring_codeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.sponsoring_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsoring_codeNull()
            Me(Me.tableVIEW_FillCustForMail.sponsoring_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsored_codeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.sponsored_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsored_codeNull()
            Me(Me.tableVIEW_FillCustForMail.sponsored_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_validitytoNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.customers_abo_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_validitytoNull()
            Me(Me.tableVIEW_FillCustForMail.customers_abo_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_discount_recurring_to_dateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.customers_abo_discount_recurring_to_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_discount_recurring_to_dateNull()
            Me(Me.tableVIEW_FillCustForMail.customers_abo_discount_recurring_to_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_debiter_nameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.domiciliation_debiter_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_debiter_nameNull()
            Me(Me.tableVIEW_FillCustForMail.domiciliation_debiter_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_numberNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.domiciliation_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_numberNull()
            Me(Me.tableVIEW_FillCustForMail.domiciliation_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_account_numberNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.domiciliation_account_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_account_numberNull()
            Me(Me.tableVIEW_FillCustForMail.domiciliation_account_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadult_pwdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.adult_pwdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadult_pwdNull()
            Me(Me.tableVIEW_FillCustForMail.adult_pwdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_typeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.ogone_card_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_typeNull()
            Me(Me.tableVIEW_FillCustForMail.ogone_card_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_noNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.ogone_card_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_noNull()
            Me(Me.tableVIEW_FillCustForMail.ogone_card_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_exp_dateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.ogone_exp_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_exp_dateNull()
            Me(Me.tableVIEW_FillCustForMail.ogone_exp_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_ownerNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.ogone_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_ownerNull()
            Me(Me.tableVIEW_FillCustForMail.ogone_ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscommentNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.commentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcommentNull()
            Me(Me.tableVIEW_FillCustForMail.commentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_first_deliveryNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.date_first_deliveryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_first_deliveryNull()
            Me(Me.tableVIEW_FillCustForMail.date_first_deliveryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_adult_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.mail_wl_adult_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_adult_not_sufficientNull()
            Me(Me.tableVIEW_FillCustForMail.mail_wl_adult_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_norm_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.mail_wl_norm_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_norm_not_sufficientNull()
            Me(Me.tableVIEW_FillCustForMail.mail_wl_norm_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_actionNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.abo_actionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_actionNull()
            Me(Me.tableVIEW_FillCustForMail.abo_actionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscode_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.code_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcode_idNull()
            Me(Me.tableVIEW_FillCustForMail.code_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_last_action_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.abo_last_action_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_last_action_idNull()
            Me(Me.tableVIEW_FillCustForMail.abo_last_action_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_action_countNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.abo_action_countColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_action_countNull()
            Me(Me.tableVIEW_FillCustForMail.abo_action_countColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_action_id_listNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.abo_action_id_listColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_action_id_listNull()
            Me(Me.tableVIEW_FillCustForMail.abo_action_id_listColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_action_name_listNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.abo_action_name_listColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_action_name_listNull()
            Me(Me.tableVIEW_FillCustForMail.abo_action_name_listColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_last_action_nameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.abo_last_action_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_last_action_nameNull()
            Me(Me.tableVIEW_FillCustForMail.abo_last_action_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_of_last_logonNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.customers_info_date_of_last_logonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_of_last_logonNull()
            Me(Me.tableVIEW_FillCustForMail.customers_info_date_of_last_logonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_number_of_logonsNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.customers_info_number_of_logonsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_number_of_logonsNull()
            Me(Me.tableVIEW_FillCustForMail.customers_info_number_of_logonsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_account_createdNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.customers_info_date_account_createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_account_createdNull()
            Me(Me.tableVIEW_FillCustForMail.customers_info_date_account_createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_account_last_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.customers_info_date_account_last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_account_last_modifiedNull()
            Me(Me.tableVIEW_FillCustForMail.customers_info_date_account_last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isglobal_product_notificationsNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.global_product_notificationsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setglobal_product_notificationsNull()
            Me(Me.tableVIEW_FillCustForMail.global_product_notificationsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_languageNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.customers_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_languageNull()
            Me(Me.tableVIEW_FillCustForMail.customers_languageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispartners_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.partners_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpartners_idNull()
            Me(Me.tableVIEW_FillCustForMail.partners_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbelgiqueloisirs_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_FillCustForMail.belgiqueloisirs_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbelgiqueloisirs_idNull()
            Me(Me.tableVIEW_FillCustForMail.belgiqueloisirs_idColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class aboRow
        Inherits Global.System.Data.DataRow
        
        Private tableabo As aboDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableabo = CType(Me.Table,aboDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_id() As Integer
            Get
                Return CType(Me(Me.tableabo.abo_idColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.abo_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customerid() As Integer
            Get
                Return CType(Me(Me.tableabo.customeridColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.customeridColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Action() As Integer
            Get
                Return CType(Me(Me.tableabo.ActionColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.ActionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo.code_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code_id' in table 'abo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo.code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo.DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date' in table 'abo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo.DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property product_id() As Integer
            Get
                Return CType(Me(Me.tableabo.product_idColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.product_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_method() As String
            Get
                Return CType(Me(Me.tableabo.payment_methodColumn),String)
            End Get
            Set
                Me(Me.tableabo.payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property privilege_notified() As Integer
            Get
                Return CType(Me(Me.tableabo.privilege_notifiedColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.privilege_notifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Return CType(Me(Me.tableabo.commentColumn),String)
            End Get
            Set
                Me(Me.tableabo.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As Integer
            Get
                Return CType(Me(Me.tableabo.siteColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo.idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id' in table 'abo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo.nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'name' in table 'abo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscode_idNull() As Boolean
            Return Me.IsNull(Me.tableabo.code_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcode_idNull()
            Me(Me.tableabo.code_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_DateNull() As Boolean
            Return Me.IsNull(Me.tableabo.DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_DateNull()
            Me(Me.tableabo.DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tableabo.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidNull()
            Me(Me.tableabo.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnameNull() As Boolean
            Return Me.IsNull(Me.tableabo.nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnameNull()
            Me(Me.tableabo.nameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_discount_ana1Row
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_discount_ana1 As VIEW_discount_ana1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_discount_ana1 = CType(Me.Table,VIEW_discount_ana1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code_id() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana1.discount_code_idColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.discount_code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code() As String
            Get
                Return CType(Me(Me.tableVIEW_discount_ana1.discount_codeColumn),String)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.discount_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_type() As Integer
            Get
                Return CType(Me(Me.tableVIEW_discount_ana1.discount_typeColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.discount_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_value() As Decimal
            Get
                Return CType(Me(Me.tableVIEW_discount_ana1.discount_valueColumn),Decimal)
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.discount_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_no() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.ogone_card_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_no' in table 'VIEW_discount_ana1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.ogone_card_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_exp_date() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.ogone_exp_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_exp_date' in table 'VIEW_discount_ana1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.ogone_exp_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.ogone_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_owner' in table 'VIEW_discount_ana1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.ogone_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_cc_expiration_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.ogone_cc_expiration_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_cc_expiration_status' in table 'VIEW_discount_ana1' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.ogone_cc_expiration_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property offline_payment_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.offline_payment_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'offline_payment_status' in table 'VIEW_discount_ana1' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.offline_payment_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.Expr1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr1' in table 'VIEW_discount_ana1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vip() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.vipColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vip' in table 'VIEW_discount_ana1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.vipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property black_listed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.black_listedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'black_listed' in table 'VIEW_discount_ana1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.black_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property red_listed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.red_listedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'red_listed' in table 'VIEW_discount_ana1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.red_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sm_eligible() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.sm_eligibleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sm_eligible' in table 'VIEW_discount_ana1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.sm_eligibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_enquiry_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.customers_enquiry_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_enquiry_id' in table 'VIEW_discount_ana1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.customers_enquiry_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_first_delivery() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.date_first_deliveryColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_first_delivery' in table 'VIEW_discount_ana1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.date_first_deliveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_adult_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.mail_wl_adult_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_adult_not_sufficient' in table 'VIEW_discount_ana1'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.mail_wl_adult_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_norm_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.mail_wl_norm_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_norm_not_sufficient' in table 'VIEW_discount_ana1' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.mail_wl_norm_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mgm_points() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.mgm_pointsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mgm_points' in table 'VIEW_discount_ana1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.mgm_pointsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wishlist_kind() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_discount_ana1.wishlist_kindColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wishlist_kind' in table 'VIEW_discount_ana1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_discount_ana1.wishlist_kindColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_noNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.ogone_card_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_noNull()
            Me(Me.tableVIEW_discount_ana1.ogone_card_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_exp_dateNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.ogone_exp_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_exp_dateNull()
            Me(Me.tableVIEW_discount_ana1.ogone_exp_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_ownerNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.ogone_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_ownerNull()
            Me(Me.tableVIEW_discount_ana1.ogone_ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_cc_expiration_statusNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.ogone_cc_expiration_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_cc_expiration_statusNull()
            Me(Me.tableVIEW_discount_ana1.ogone_cc_expiration_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isoffline_payment_statusNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.offline_payment_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setoffline_payment_statusNull()
            Me(Me.tableVIEW_discount_ana1.offline_payment_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr1Null()
            Me(Me.tableVIEW_discount_ana1.Expr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsvipNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.vipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetvipNull()
            Me(Me.tableVIEW_discount_ana1.vipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isblack_listedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.black_listedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setblack_listedNull()
            Me(Me.tableVIEW_discount_ana1.black_listedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isred_listedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.red_listedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setred_listedNull()
            Me(Me.tableVIEW_discount_ana1.red_listedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issm_eligibleNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.sm_eligibleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsm_eligibleNull()
            Me(Me.tableVIEW_discount_ana1.sm_eligibleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_enquiry_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.customers_enquiry_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_enquiry_idNull()
            Me(Me.tableVIEW_discount_ana1.customers_enquiry_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_first_deliveryNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.date_first_deliveryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_first_deliveryNull()
            Me(Me.tableVIEW_discount_ana1.date_first_deliveryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_adult_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.mail_wl_adult_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_adult_not_sufficientNull()
            Me(Me.tableVIEW_discount_ana1.mail_wl_adult_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_norm_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.mail_wl_norm_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_norm_not_sufficientNull()
            Me(Me.tableVIEW_discount_ana1.mail_wl_norm_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismgm_pointsNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.mgm_pointsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmgm_pointsNull()
            Me(Me.tableVIEW_discount_ana1.mgm_pointsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iswishlist_kindNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_discount_ana1.wishlist_kindColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setwishlist_kindNull()
            Me(Me.tableVIEW_discount_ana1.wishlist_kindColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class products_browseRow
        Inherits Global.System.Data.DataRow
        
        Private tableproducts_browse As products_browseDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproducts_browse = CType(Me.Table,products_browseDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_browse.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_browse.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvdid() As Integer
            Get
                Return CType(Me(Me.tableproducts_browse.products_dvdidColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_browse.products_dvdidColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class VIEW_Orders_Status_HistRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_Orders_Status_Hist As VIEW_Orders_Status_HistDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_Orders_Status_Hist = CType(Me.Table,VIEW_Orders_Status_HistDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_status_history_id() As Integer
            Get
                Return CType(Me(Me.tableVIEW_Orders_Status_Hist.orders_status_history_idColumn),Integer)
            End Get
            Set
                Me(Me.tableVIEW_Orders_Status_Hist.orders_status_history_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Status_Hist.orders_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_id' in table 'VIEW_Orders_Status_Hist' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Status_Hist.orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property new_value() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Status_Hist.new_valueColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'new_value' in table 'VIEW_Orders_Status_Hist' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Status_Hist.new_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property old_value() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Status_Hist.old_valueColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'old_value' in table 'VIEW_Orders_Status_Hist' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Status_Hist.old_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Status_Hist.date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_added' in table 'VIEW_Orders_Status_Hist' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Status_Hist.date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customer_notified() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Status_Hist.customer_notifiedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customer_notified' in table 'VIEW_Orders_Status_Hist' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Status_Hist.customer_notifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_status_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Status_Hist.orders_status_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_status_id' in table 'VIEW_Orders_Status_Hist' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Status_Hist.orders_status_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property language_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Status_Hist.language_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'language_id' in table 'VIEW_Orders_Status_Hist' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Status_Hist.language_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_status_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_Orders_Status_Hist.orders_status_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_status_name' in table 'VIEW_Orders_Status_Hist' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_Orders_Status_Hist.orders_status_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Status_Hist.orders_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_idNull()
            Me(Me.tableVIEW_Orders_Status_Hist.orders_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnew_valueNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Status_Hist.new_valueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnew_valueNull()
            Me(Me.tableVIEW_Orders_Status_Hist.new_valueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isold_valueNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Status_Hist.old_valueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setold_valueNull()
            Me(Me.tableVIEW_Orders_Status_Hist.old_valueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_addedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Status_Hist.date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_addedNull()
            Me(Me.tableVIEW_Orders_Status_Hist.date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomer_notifiedNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Status_Hist.customer_notifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomer_notifiedNull()
            Me(Me.tableVIEW_Orders_Status_Hist.customer_notifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_status_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Status_Hist.orders_status_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_status_idNull()
            Me(Me.tableVIEW_Orders_Status_Hist.orders_status_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islanguage_idNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Status_Hist.language_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlanguage_idNull()
            Me(Me.tableVIEW_Orders_Status_Hist.language_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_status_nameNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_Orders_Status_Hist.orders_status_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_status_nameNull()
            Me(Me.tableVIEW_Orders_Status_Hist.orders_status_nameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class shopping_orders_statusRow
        Inherits Global.System.Data.DataRow
        
        Private tableshopping_orders_status As shopping_orders_statusDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableshopping_orders_status = CType(Me.Table,shopping_orders_statusDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property shopping_orders_status_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_status.shopping_orders_status_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'shopping_orders_status_id' in table 'shopping_orders_status"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_status.shopping_orders_status_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property status_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_status.status_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'status_name' in table 'shopping_orders_status' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_status.status_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isshopping_orders_status_idNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_status.shopping_orders_status_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setshopping_orders_status_idNull()
            Me(Me.tableshopping_orders_status.shopping_orders_status_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstatus_nameNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_status.status_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstatus_nameNull()
            Me(Me.tableshopping_orders_status.status_nameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class shopping_orders_view1Row
        Inherits Global.System.Data.DataRow
        
        Private tableshopping_orders_view1 As shopping_orders_view1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableshopping_orders_view1 = CType(Me.Table,shopping_orders_view1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property shopping_orders_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.shopping_orders_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'shopping_orders_id' in table 'shopping_orders_view1' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.shopping_orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property order_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.order_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'order_date' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.order_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_id' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quantity() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.quantityColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quantity' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property order_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.order_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'order_status' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.order_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvd_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.dvd_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dvd_id' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.dvd_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.priceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'price' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.discount_code_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discount_code_id' in table 'shopping_orders_view1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.discount_code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.customers_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_firstname' in table 'shopping_orders_view1' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.customers_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_lastname' in table 'shopping_orders_view1' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EntityID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.EntityIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EntityID' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.EntityIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_gender() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.customers_genderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_gender' in table 'shopping_orders_view1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.customers_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.customers_email_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_email_address' in table 'shopping_orders_view1' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_default_address_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.customers_default_address_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_default_address_id' in table 'shopping_orders_vie"& _ 
                            "w1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.customers_default_address_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_street_address() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.customers_street_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_street_address' in table 'shopping_orders_view1' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.customers_street_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_postcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.customers_postcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_postcode' in table 'shopping_orders_view1' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.customers_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_city() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.customers_cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_city' in table 'shopping_orders_view1' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.customers_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_country_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.customers_country_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_country_id' in table 'shopping_orders_view1' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.customers_country_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_country() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.customers_countryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_country' in table 'shopping_orders_view1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.customers_countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'shopping_orders_view1' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.products_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_type' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.products_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_media() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.products_mediaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_media' in table 'shopping_orders_view1' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.products_mediaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.products_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_status' in table 'shopping_orders_view1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.products_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvd_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.products_dvd_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_dvd_status' in table 'shopping_orders_view1' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.products_dvd_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cover_box_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.cover_box_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cover_box_id' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.cover_box_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property box_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.box_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'box_id' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.box_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pibox_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.pibox_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pibox_id' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.pibox_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property inout() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.inoutColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'inout' in table 'shopping_orders_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.inoutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quantity_assigned() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableshopping_orders_view1.quantity_assignedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quantity_assigned' in table 'shopping_orders_view1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableshopping_orders_view1.quantity_assignedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isshopping_orders_idNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.shopping_orders_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setshopping_orders_idNull()
            Me(Me.tableshopping_orders_view1.shopping_orders_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableshopping_orders_view1.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorder_dateNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.order_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorder_dateNull()
            Me(Me.tableshopping_orders_view1.order_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_idNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_idNull()
            Me(Me.tableshopping_orders_view1.products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsquantityNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.quantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetquantityNull()
            Me(Me.tableshopping_orders_view1.quantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorder_statusNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.order_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorder_statusNull()
            Me(Me.tableshopping_orders_view1.order_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdvd_idNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.dvd_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdvd_idNull()
            Me(Me.tableshopping_orders_view1.dvd_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspriceNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpriceNull()
            Me(Me.tableshopping_orders_view1.priceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_code_idNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.discount_code_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_code_idNull()
            Me(Me.tableshopping_orders_view1.discount_code_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_firstnameNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.customers_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_firstnameNull()
            Me(Me.tableshopping_orders_view1.customers_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_lastnameNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.customers_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_lastnameNull()
            Me(Me.tableshopping_orders_view1.customers_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEntityIDNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.EntityIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEntityIDNull()
            Me(Me.tableshopping_orders_view1.EntityIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_genderNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.customers_genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_genderNull()
            Me(Me.tableshopping_orders_view1.customers_genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_email_addressNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.customers_email_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_email_addressNull()
            Me(Me.tableshopping_orders_view1.customers_email_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_default_address_idNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.customers_default_address_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_default_address_idNull()
            Me(Me.tableshopping_orders_view1.customers_default_address_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_street_addressNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.customers_street_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_street_addressNull()
            Me(Me.tableshopping_orders_view1.customers_street_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_postcodeNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.customers_postcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_postcodeNull()
            Me(Me.tableshopping_orders_view1.customers_postcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_cityNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.customers_cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_cityNull()
            Me(Me.tableshopping_orders_view1.customers_cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_country_idNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.customers_country_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_country_idNull()
            Me(Me.tableshopping_orders_view1.customers_country_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_countryNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.customers_countryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_countryNull()
            Me(Me.tableshopping_orders_view1.customers_countryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tableshopping_orders_view1.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_typeNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.products_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_typeNull()
            Me(Me.tableshopping_orders_view1.products_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_mediaNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.products_mediaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_mediaNull()
            Me(Me.tableshopping_orders_view1.products_mediaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_statusNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.products_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_statusNull()
            Me(Me.tableshopping_orders_view1.products_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_dvd_statusNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.products_dvd_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_dvd_statusNull()
            Me(Me.tableshopping_orders_view1.products_dvd_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscover_box_idNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.cover_box_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcover_box_idNull()
            Me(Me.tableshopping_orders_view1.cover_box_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbox_idNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.box_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbox_idNull()
            Me(Me.tableshopping_orders_view1.box_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispibox_idNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.pibox_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpibox_idNull()
            Me(Me.tableshopping_orders_view1.pibox_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsinoutNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.inoutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetinoutNull()
            Me(Me.tableshopping_orders_view1.inoutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquantity_assignedNull() As Boolean
            Return Me.IsNull(Me.tableshopping_orders_view1.quantity_assignedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquantity_assignedNull()
            Me(Me.tableshopping_orders_view1.quantity_assignedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class suggestionsRow
        Inherits Global.System.Data.DataRow
        
        Private tablesuggestions As suggestionsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablesuggestions = CType(Me.Table,suggestionsDataTable)
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class PS_AnaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PS_AnaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As PS_AnaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As PS_AnaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class customersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As customersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As customersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As customersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class productsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As productsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As productsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As productsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class wishlistRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As wishlistRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As wishlistRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As wishlistRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class products_dvdRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As products_dvdRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As products_dvdRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As products_dvdRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tmp1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tmp1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tmp1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tmp1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class products_undertitles_View1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As products_undertitles_View1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As products_undertitles_View1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As products_undertitles_View1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class products_languages_View1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As products_languages_View1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As products_languages_View1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As products_languages_View1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_Orders_AnaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_Orders_AnaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_Orders_AnaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_Orders_AnaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_discount_anaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_discount_anaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_discount_anaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_discount_anaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class discount_codeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As discount_codeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As discount_codeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As discount_codeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_FillCustForMailRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_FillCustForMailRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_FillCustForMailRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_FillCustForMailRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class aboRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As aboRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As aboRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As aboRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_discount_ana1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_discount_ana1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_discount_ana1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_discount_ana1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class products_browseRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As products_browseRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As products_browseRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As products_browseRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class VIEW_Orders_Status_HistRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_Orders_Status_HistRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As VIEW_Orders_Status_HistRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As VIEW_Orders_Status_HistRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class shopping_orders_statusRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As shopping_orders_statusRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As shopping_orders_statusRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As shopping_orders_statusRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class shopping_orders_view1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As shopping_orders_view1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As shopping_orders_view1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As shopping_orders_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class suggestionsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As suggestionsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As suggestionsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As suggestionsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
