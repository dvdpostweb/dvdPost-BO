'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5477
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsEnvelopeLabels"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsEnvelopeLabels
    Inherits Global.System.Data.DataSet
    
    Private tableenvelope_labels_multishipment As envelope_labels_multishipmentDataTable
    
    Private tableorders As ordersDataTable
    
    Private tableenvelope_labels_multishipment_det As envelope_labels_multishipment_detDataTable
    
    Private tableenvelope_labels As envelope_labelsDataTable
    
    Private tableorders_out_view1 As orders_out_view1DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("envelope_labels_multishipment")) Is Nothing) Then
                MyBase.Tables.Add(New envelope_labels_multishipmentDataTable(ds.Tables("envelope_labels_multishipment")))
            End If
            If (Not (ds.Tables("orders")) Is Nothing) Then
                MyBase.Tables.Add(New ordersDataTable(ds.Tables("orders")))
            End If
            If (Not (ds.Tables("envelope_labels_multishipment_det")) Is Nothing) Then
                MyBase.Tables.Add(New envelope_labels_multishipment_detDataTable(ds.Tables("envelope_labels_multishipment_det")))
            End If
            If (Not (ds.Tables("envelope_labels")) Is Nothing) Then
                MyBase.Tables.Add(New envelope_labelsDataTable(ds.Tables("envelope_labels")))
            End If
            If (Not (ds.Tables("orders_out_view1")) Is Nothing) Then
                MyBase.Tables.Add(New orders_out_view1DataTable(ds.Tables("orders_out_view1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property envelope_labels_multishipment() As envelope_labels_multishipmentDataTable
        Get
            Return Me.tableenvelope_labels_multishipment
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property orders() As ordersDataTable
        Get
            Return Me.tableorders
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property envelope_labels_multishipment_det() As envelope_labels_multishipment_detDataTable
        Get
            Return Me.tableenvelope_labels_multishipment_det
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property envelope_labels() As envelope_labelsDataTable
        Get
            Return Me.tableenvelope_labels
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property orders_out_view1() As orders_out_view1DataTable
        Get
            Return Me.tableorders_out_view1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsEnvelopeLabels = CType(MyBase.Clone,dsEnvelopeLabels)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("envelope_labels_multishipment")) Is Nothing) Then
                MyBase.Tables.Add(New envelope_labels_multishipmentDataTable(ds.Tables("envelope_labels_multishipment")))
            End If
            If (Not (ds.Tables("orders")) Is Nothing) Then
                MyBase.Tables.Add(New ordersDataTable(ds.Tables("orders")))
            End If
            If (Not (ds.Tables("envelope_labels_multishipment_det")) Is Nothing) Then
                MyBase.Tables.Add(New envelope_labels_multishipment_detDataTable(ds.Tables("envelope_labels_multishipment_det")))
            End If
            If (Not (ds.Tables("envelope_labels")) Is Nothing) Then
                MyBase.Tables.Add(New envelope_labelsDataTable(ds.Tables("envelope_labels")))
            End If
            If (Not (ds.Tables("orders_out_view1")) Is Nothing) Then
                MyBase.Tables.Add(New orders_out_view1DataTable(ds.Tables("orders_out_view1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableenvelope_labels_multishipment = CType(MyBase.Tables("envelope_labels_multishipment"),envelope_labels_multishipmentDataTable)
        If (initTable = true) Then
            If (Not (Me.tableenvelope_labels_multishipment) Is Nothing) Then
                Me.tableenvelope_labels_multishipment.InitVars
            End If
        End If
        Me.tableorders = CType(MyBase.Tables("orders"),ordersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableorders) Is Nothing) Then
                Me.tableorders.InitVars
            End If
        End If
        Me.tableenvelope_labels_multishipment_det = CType(MyBase.Tables("envelope_labels_multishipment_det"),envelope_labels_multishipment_detDataTable)
        If (initTable = true) Then
            If (Not (Me.tableenvelope_labels_multishipment_det) Is Nothing) Then
                Me.tableenvelope_labels_multishipment_det.InitVars
            End If
        End If
        Me.tableenvelope_labels = CType(MyBase.Tables("envelope_labels"),envelope_labelsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableenvelope_labels) Is Nothing) Then
                Me.tableenvelope_labels.InitVars
            End If
        End If
        Me.tableorders_out_view1 = CType(MyBase.Tables("orders_out_view1"),orders_out_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableorders_out_view1) Is Nothing) Then
                Me.tableorders_out_view1.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsEnvelopeLabels"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsEnvelopeLabels.xsd"
        Me.Locale = New Global.System.Globalization.CultureInfo("en-US")
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableenvelope_labels_multishipment = New envelope_labels_multishipmentDataTable
        MyBase.Tables.Add(Me.tableenvelope_labels_multishipment)
        Me.tableorders = New ordersDataTable
        MyBase.Tables.Add(Me.tableorders)
        Me.tableenvelope_labels_multishipment_det = New envelope_labels_multishipment_detDataTable
        MyBase.Tables.Add(Me.tableenvelope_labels_multishipment_det)
        Me.tableenvelope_labels = New envelope_labelsDataTable
        MyBase.Tables.Add(Me.tableenvelope_labels)
        Me.tableorders_out_view1 = New orders_out_view1DataTable
        MyBase.Tables.Add(Me.tableorders_out_view1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeenvelope_labels_multishipment() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeorders() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeenvelope_labels_multishipment_det() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeenvelope_labels() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeorders_out_view1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsEnvelopeLabels = New dsEnvelopeLabels
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub envelope_labels_multishipmentRowChangeEventHandler(ByVal sender As Object, ByVal e As envelope_labels_multishipmentRowChangeEvent)
    
    Public Delegate Sub ordersRowChangeEventHandler(ByVal sender As Object, ByVal e As ordersRowChangeEvent)
    
    Public Delegate Sub envelope_labels_multishipment_detRowChangeEventHandler(ByVal sender As Object, ByVal e As envelope_labels_multishipment_detRowChangeEvent)
    
    Public Delegate Sub envelope_labelsRowChangeEventHandler(ByVal sender As Object, ByVal e As envelope_labelsRowChangeEvent)
    
    Public Delegate Sub orders_out_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As orders_out_view1RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class envelope_labels_multishipmentDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnenvelope_labels_id As Global.System.Data.DataColumn
        
        Private columndestination_countries_id As Global.System.Data.DataColumn
        
        Private columngroup_id As Global.System.Data.DataColumn
        
        Private columnmultishipment_id As Global.System.Data.DataColumn
        
        Private columngroup_abc As Global.System.Data.DataColumn
        
        Private columnbinome_xy As Global.System.Data.DataColumn
        
        Private columnorders_id As Global.System.Data.DataColumn
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columndvd_id As Global.System.Data.DataColumn
        
        Private columndate_added As Global.System.Data.DataColumn
        
        Private columnlabel_status As Global.System.Data.DataColumn
        
        Private columnbox_id As Global.System.Data.DataColumn
        
        Private columnbox_dvd_id As Global.System.Data.DataColumn
        
        Private columnfirst_delivery As Global.System.Data.DataColumn
        
        Private columnean128 As Global.System.Data.DataColumn
        
        Private columnflyer_code As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "envelope_labels_multishipment"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property envelope_labels_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnenvelope_labels_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property destination_countries_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndestination_countries_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property group_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngroup_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property multishipment_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmultishipment_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property group_abcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngroup_abc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property binome_xyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbinome_xy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvd_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndvd_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property label_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlabel_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property box_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbox_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property box_dvd_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbox_dvd_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property first_deliveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfirst_delivery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ean128Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnean128
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property flyer_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnflyer_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As envelope_labels_multishipmentRow
            Get
                Return CType(Me.Rows(index),envelope_labels_multishipmentRow)
            End Get
        End Property
        
        Public Event envelope_labels_multishipmentRowChanging As envelope_labels_multishipmentRowChangeEventHandler
        
        Public Event envelope_labels_multishipmentRowChanged As envelope_labels_multishipmentRowChangeEventHandler
        
        Public Event envelope_labels_multishipmentRowDeleting As envelope_labels_multishipmentRowChangeEventHandler
        
        Public Event envelope_labels_multishipmentRowDeleted As envelope_labels_multishipmentRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addenvelope_labels_multishipmentRow(ByVal row As envelope_labels_multishipmentRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addenvelope_labels_multishipmentRow(ByVal destination_countries_id As Integer, ByVal group_id As Integer, ByVal multishipment_id As Integer, ByVal group_abc As String, ByVal binome_xy As String, ByVal orders_id As Integer, ByVal products_id As Integer, ByVal dvd_id As Integer, ByVal date_added As Date, ByVal label_status As Integer, ByVal box_id As Integer, ByVal box_dvd_id As Integer, ByVal first_delivery As Short, ByVal ean128 As String, ByVal flyer_code As String) As envelope_labels_multishipmentRow
            Dim rowenvelope_labels_multishipmentRow As envelope_labels_multishipmentRow = CType(Me.NewRow,envelope_labels_multishipmentRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, destination_countries_id, group_id, multishipment_id, group_abc, binome_xy, orders_id, products_id, dvd_id, date_added, label_status, box_id, box_dvd_id, first_delivery, ean128, flyer_code}
            rowenvelope_labels_multishipmentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowenvelope_labels_multishipmentRow)
            Return rowenvelope_labels_multishipmentRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByenvelope_labels_id(ByVal envelope_labels_id As Integer) As envelope_labels_multishipmentRow
            Return CType(Me.Rows.Find(New Object() {envelope_labels_id}),envelope_labels_multishipmentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As envelope_labels_multishipmentDataTable = CType(MyBase.Clone,envelope_labels_multishipmentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New envelope_labels_multishipmentDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnenvelope_labels_id = MyBase.Columns("envelope_labels_id")
            Me.columndestination_countries_id = MyBase.Columns("destination_countries_id")
            Me.columngroup_id = MyBase.Columns("group_id")
            Me.columnmultishipment_id = MyBase.Columns("multishipment_id")
            Me.columngroup_abc = MyBase.Columns("group_abc")
            Me.columnbinome_xy = MyBase.Columns("binome_xy")
            Me.columnorders_id = MyBase.Columns("orders_id")
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columndvd_id = MyBase.Columns("dvd_id")
            Me.columndate_added = MyBase.Columns("date_added")
            Me.columnlabel_status = MyBase.Columns("label_status")
            Me.columnbox_id = MyBase.Columns("box_id")
            Me.columnbox_dvd_id = MyBase.Columns("box_dvd_id")
            Me.columnfirst_delivery = MyBase.Columns("first_delivery")
            Me.columnean128 = MyBase.Columns("ean128")
            Me.columnflyer_code = MyBase.Columns("flyer_code")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnenvelope_labels_id = New Global.System.Data.DataColumn("envelope_labels_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnenvelope_labels_id)
            Me.columndestination_countries_id = New Global.System.Data.DataColumn("destination_countries_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndestination_countries_id)
            Me.columngroup_id = New Global.System.Data.DataColumn("group_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngroup_id)
            Me.columnmultishipment_id = New Global.System.Data.DataColumn("multishipment_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmultishipment_id)
            Me.columngroup_abc = New Global.System.Data.DataColumn("group_abc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngroup_abc)
            Me.columnbinome_xy = New Global.System.Data.DataColumn("binome_xy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbinome_xy)
            Me.columnorders_id = New Global.System.Data.DataColumn("orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_id)
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columndvd_id = New Global.System.Data.DataColumn("dvd_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvd_id)
            Me.columndate_added = New Global.System.Data.DataColumn("date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_added)
            Me.columnlabel_status = New Global.System.Data.DataColumn("label_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlabel_status)
            Me.columnbox_id = New Global.System.Data.DataColumn("box_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbox_id)
            Me.columnbox_dvd_id = New Global.System.Data.DataColumn("box_dvd_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbox_dvd_id)
            Me.columnfirst_delivery = New Global.System.Data.DataColumn("first_delivery", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfirst_delivery)
            Me.columnean128 = New Global.System.Data.DataColumn("ean128", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnean128)
            Me.columnflyer_code = New Global.System.Data.DataColumn("flyer_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnflyer_code)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsEnvelopeLabelsKey1", New Global.System.Data.DataColumn() {Me.columnenvelope_labels_id}, true))
            Me.columnenvelope_labels_id.AutoIncrement = true
            Me.columnenvelope_labels_id.AllowDBNull = false
            Me.columnenvelope_labels_id.ReadOnly = true
            Me.columnenvelope_labels_id.Unique = true
            Me.columnmultishipment_id.AllowDBNull = false
            Me.columngroup_abc.AllowDBNull = false
            Me.columnbinome_xy.AllowDBNull = false
            Me.columnfirst_delivery.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newenvelope_labels_multishipmentRow() As envelope_labels_multishipmentRow
            Return CType(Me.NewRow,envelope_labels_multishipmentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New envelope_labels_multishipmentRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(envelope_labels_multishipmentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.envelope_labels_multishipmentRowChangedEvent) Is Nothing) Then
                RaiseEvent envelope_labels_multishipmentRowChanged(Me, New envelope_labels_multishipmentRowChangeEvent(CType(e.Row,envelope_labels_multishipmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.envelope_labels_multishipmentRowChangingEvent) Is Nothing) Then
                RaiseEvent envelope_labels_multishipmentRowChanging(Me, New envelope_labels_multishipmentRowChangeEvent(CType(e.Row,envelope_labels_multishipmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.envelope_labels_multishipmentRowDeletedEvent) Is Nothing) Then
                RaiseEvent envelope_labels_multishipmentRowDeleted(Me, New envelope_labels_multishipmentRowChangeEvent(CType(e.Row,envelope_labels_multishipmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.envelope_labels_multishipmentRowDeletingEvent) Is Nothing) Then
                RaiseEvent envelope_labels_multishipmentRowDeleting(Me, New envelope_labels_multishipmentRowChangeEvent(CType(e.Row,envelope_labels_multishipmentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeenvelope_labels_multishipmentRow(ByVal row As envelope_labels_multishipmentRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsEnvelopeLabels = New dsEnvelopeLabels
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "envelope_labels_multishipmentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ordersDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnorders_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_name As Global.System.Data.DataColumn
        
        Private columncustomers_street_address As Global.System.Data.DataColumn
        
        Private columncustomers_suburb As Global.System.Data.DataColumn
        
        Private columncustomers_city As Global.System.Data.DataColumn
        
        Private columncustomers_postcode As Global.System.Data.DataColumn
        
        Private columncustomers_state As Global.System.Data.DataColumn
        
        Private columncustomers_country As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_address_format_id As Global.System.Data.DataColumn
        
        Private columndelivery_name As Global.System.Data.DataColumn
        
        Private columndelivery_street_address As Global.System.Data.DataColumn
        
        Private columndelivery_suburb As Global.System.Data.DataColumn
        
        Private columndelivery_city As Global.System.Data.DataColumn
        
        Private columndelivery_postcode As Global.System.Data.DataColumn
        
        Private columndelivery_state As Global.System.Data.DataColumn
        
        Private columndelivery_country As Global.System.Data.DataColumn
        
        Private columndelivery_address_format_id As Global.System.Data.DataColumn
        
        Private columnpayment_method As Global.System.Data.DataColumn
        
        Private columncc_type As Global.System.Data.DataColumn
        
        Private columncc_owner As Global.System.Data.DataColumn
        
        Private columncc_number As Global.System.Data.DataColumn
        
        Private columncc_expires As Global.System.Data.DataColumn
        
        Private columnlast_modified As Global.System.Data.DataColumn
        
        Private columndate_purchased As Global.System.Data.DataColumn
        
        Private columnorders_status As Global.System.Data.DataColumn
        
        Private columnorders_date_finished As Global.System.Data.DataColumn
        
        Private columncomments As Global.System.Data.DataColumn
        
        Private columncurrency As Global.System.Data.DataColumn
        
        Private columncurrency_value As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        Private columnsecured_mail As Global.System.Data.DataColumn
        
        Private columnmultishipment_sm As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "orders"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_street_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_street_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_suburbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_suburb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_state
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_country
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_address_format_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_address_format_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_street_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_street_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_suburbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_suburb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_state
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_country
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_address_format_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_address_format_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_expiresColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_expires
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_purchasedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_purchased
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_date_finishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_date_finished
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property currencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncurrency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property currency_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncurrency_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property secured_mailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsecured_mail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property multishipment_smColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmultishipment_sm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ordersRow
            Get
                Return CType(Me.Rows(index),ordersRow)
            End Get
        End Property
        
        Public Event ordersRowChanging As ordersRowChangeEventHandler
        
        Public Event ordersRowChanged As ordersRowChangeEventHandler
        
        Public Event ordersRowDeleting As ordersRowChangeEventHandler
        
        Public Event ordersRowDeleted As ordersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddordersRow(ByVal row As ordersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddordersRow( _
                    ByVal customers_id As Integer,  _
                    ByVal customers_name As String,  _
                    ByVal customers_street_address As String,  _
                    ByVal customers_suburb As String,  _
                    ByVal customers_city As String,  _
                    ByVal customers_postcode As String,  _
                    ByVal customers_state As String,  _
                    ByVal customers_country As String,  _
                    ByVal customers_telephone As String,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_address_format_id As Integer,  _
                    ByVal delivery_name As String,  _
                    ByVal delivery_street_address As String,  _
                    ByVal delivery_suburb As String,  _
                    ByVal delivery_city As String,  _
                    ByVal delivery_postcode As String,  _
                    ByVal delivery_state As String,  _
                    ByVal delivery_country As String,  _
                    ByVal delivery_address_format_id As Integer,  _
                    ByVal payment_method As String,  _
                    ByVal cc_type As String,  _
                    ByVal cc_owner As String,  _
                    ByVal cc_number As String,  _
                    ByVal cc_expires As String,  _
                    ByVal last_modified As Date,  _
                    ByVal date_purchased As Date,  _
                    ByVal orders_status As Integer,  _
                    ByVal orders_date_finished As Date,  _
                    ByVal comments As String,  _
                    ByVal currency As String,  _
                    ByVal currency_value As Decimal,  _
                    ByVal site As Integer,  _
                    ByVal secured_mail As Integer,  _
                    ByVal multishipment_sm As String) As ordersRow
            Dim rowordersRow As ordersRow = CType(Me.NewRow,ordersRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customers_id, customers_name, customers_street_address, customers_suburb, customers_city, customers_postcode, customers_state, customers_country, customers_telephone, customers_email_address, customers_address_format_id, delivery_name, delivery_street_address, delivery_suburb, delivery_city, delivery_postcode, delivery_state, delivery_country, delivery_address_format_id, payment_method, cc_type, cc_owner, cc_number, cc_expires, last_modified, date_purchased, orders_status, orders_date_finished, comments, currency, currency_value, site, secured_mail, multishipment_sm}
            rowordersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowordersRow)
            Return rowordersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByorders_id(ByVal orders_id As Integer) As ordersRow
            Return CType(Me.Rows.Find(New Object() {orders_id}),ordersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ordersDataTable = CType(MyBase.Clone,ordersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ordersDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnorders_id = MyBase.Columns("orders_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_name = MyBase.Columns("customers_name")
            Me.columncustomers_street_address = MyBase.Columns("customers_street_address")
            Me.columncustomers_suburb = MyBase.Columns("customers_suburb")
            Me.columncustomers_city = MyBase.Columns("customers_city")
            Me.columncustomers_postcode = MyBase.Columns("customers_postcode")
            Me.columncustomers_state = MyBase.Columns("customers_state")
            Me.columncustomers_country = MyBase.Columns("customers_country")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_address_format_id = MyBase.Columns("customers_address_format_id")
            Me.columndelivery_name = MyBase.Columns("delivery_name")
            Me.columndelivery_street_address = MyBase.Columns("delivery_street_address")
            Me.columndelivery_suburb = MyBase.Columns("delivery_suburb")
            Me.columndelivery_city = MyBase.Columns("delivery_city")
            Me.columndelivery_postcode = MyBase.Columns("delivery_postcode")
            Me.columndelivery_state = MyBase.Columns("delivery_state")
            Me.columndelivery_country = MyBase.Columns("delivery_country")
            Me.columndelivery_address_format_id = MyBase.Columns("delivery_address_format_id")
            Me.columnpayment_method = MyBase.Columns("payment_method")
            Me.columncc_type = MyBase.Columns("cc_type")
            Me.columncc_owner = MyBase.Columns("cc_owner")
            Me.columncc_number = MyBase.Columns("cc_number")
            Me.columncc_expires = MyBase.Columns("cc_expires")
            Me.columnlast_modified = MyBase.Columns("last_modified")
            Me.columndate_purchased = MyBase.Columns("date_purchased")
            Me.columnorders_status = MyBase.Columns("orders_status")
            Me.columnorders_date_finished = MyBase.Columns("orders_date_finished")
            Me.columncomments = MyBase.Columns("comments")
            Me.columncurrency = MyBase.Columns("currency")
            Me.columncurrency_value = MyBase.Columns("currency_value")
            Me.columnsite = MyBase.Columns("site")
            Me.columnsecured_mail = MyBase.Columns("secured_mail")
            Me.columnmultishipment_sm = MyBase.Columns("multishipment_sm")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnorders_id = New Global.System.Data.DataColumn("orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_name = New Global.System.Data.DataColumn("customers_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_name)
            Me.columncustomers_street_address = New Global.System.Data.DataColumn("customers_street_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_street_address)
            Me.columncustomers_suburb = New Global.System.Data.DataColumn("customers_suburb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_suburb)
            Me.columncustomers_city = New Global.System.Data.DataColumn("customers_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_city)
            Me.columncustomers_postcode = New Global.System.Data.DataColumn("customers_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_postcode)
            Me.columncustomers_state = New Global.System.Data.DataColumn("customers_state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_state)
            Me.columncustomers_country = New Global.System.Data.DataColumn("customers_country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_country)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_address_format_id = New Global.System.Data.DataColumn("customers_address_format_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_address_format_id)
            Me.columndelivery_name = New Global.System.Data.DataColumn("delivery_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_name)
            Me.columndelivery_street_address = New Global.System.Data.DataColumn("delivery_street_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_street_address)
            Me.columndelivery_suburb = New Global.System.Data.DataColumn("delivery_suburb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_suburb)
            Me.columndelivery_city = New Global.System.Data.DataColumn("delivery_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_city)
            Me.columndelivery_postcode = New Global.System.Data.DataColumn("delivery_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_postcode)
            Me.columndelivery_state = New Global.System.Data.DataColumn("delivery_state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_state)
            Me.columndelivery_country = New Global.System.Data.DataColumn("delivery_country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_country)
            Me.columndelivery_address_format_id = New Global.System.Data.DataColumn("delivery_address_format_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_address_format_id)
            Me.columnpayment_method = New Global.System.Data.DataColumn("payment_method", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayment_method)
            Me.columncc_type = New Global.System.Data.DataColumn("cc_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_type)
            Me.columncc_owner = New Global.System.Data.DataColumn("cc_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_owner)
            Me.columncc_number = New Global.System.Data.DataColumn("cc_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_number)
            Me.columncc_expires = New Global.System.Data.DataColumn("cc_expires", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_expires)
            Me.columnlast_modified = New Global.System.Data.DataColumn("last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_modified)
            Me.columndate_purchased = New Global.System.Data.DataColumn("date_purchased", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_purchased)
            Me.columnorders_status = New Global.System.Data.DataColumn("orders_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_status)
            Me.columnorders_date_finished = New Global.System.Data.DataColumn("orders_date_finished", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_date_finished)
            Me.columncomments = New Global.System.Data.DataColumn("comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomments)
            Me.columncurrency = New Global.System.Data.DataColumn("currency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurrency)
            Me.columncurrency_value = New Global.System.Data.DataColumn("currency_value", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurrency_value)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.columnsecured_mail = New Global.System.Data.DataColumn("secured_mail", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsecured_mail)
            Me.columnmultishipment_sm = New Global.System.Data.DataColumn("multishipment_sm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmultishipment_sm)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsEnvelopeLabelsKey2", New Global.System.Data.DataColumn() {Me.columnorders_id}, true))
            Me.columnorders_id.AutoIncrement = true
            Me.columnorders_id.AllowDBNull = false
            Me.columnorders_id.ReadOnly = true
            Me.columnorders_id.Unique = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_name.AllowDBNull = false
            Me.columncustomers_street_address.AllowDBNull = false
            Me.columncustomers_city.AllowDBNull = false
            Me.columncustomers_postcode.AllowDBNull = false
            Me.columncustomers_country.AllowDBNull = false
            Me.columncustomers_telephone.AllowDBNull = false
            Me.columncustomers_email_address.AllowDBNull = false
            Me.columncustomers_address_format_id.AllowDBNull = false
            Me.columndelivery_name.AllowDBNull = false
            Me.columndelivery_street_address.AllowDBNull = false
            Me.columndelivery_city.AllowDBNull = false
            Me.columndelivery_postcode.AllowDBNull = false
            Me.columndelivery_country.AllowDBNull = false
            Me.columndelivery_address_format_id.AllowDBNull = false
            Me.columnpayment_method.AllowDBNull = false
            Me.columnorders_status.AllowDBNull = false
            Me.columnsite.AllowDBNull = false
            Me.columnsecured_mail.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewordersRow() As ordersRow
            Return CType(Me.NewRow,ordersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ordersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ordersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ordersRowChangedEvent) Is Nothing) Then
                RaiseEvent ordersRowChanged(Me, New ordersRowChangeEvent(CType(e.Row,ordersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ordersRowChangingEvent) Is Nothing) Then
                RaiseEvent ordersRowChanging(Me, New ordersRowChangeEvent(CType(e.Row,ordersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ordersRowDeletedEvent) Is Nothing) Then
                RaiseEvent ordersRowDeleted(Me, New ordersRowChangeEvent(CType(e.Row,ordersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ordersRowDeletingEvent) Is Nothing) Then
                RaiseEvent ordersRowDeleting(Me, New ordersRowChangeEvent(CType(e.Row,ordersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveordersRow(ByVal row As ordersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsEnvelopeLabels = New dsEnvelopeLabels
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ordersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class envelope_labels_multishipment_detDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnmultishipment_id As Global.System.Data.DataColumn
        
        Private columngroup_abc As Global.System.Data.DataColumn
        
        Private columnx_orders_id As Global.System.Data.DataColumn
        
        Private columnx_products_id As Global.System.Data.DataColumn
        
        Private columnx_dvd_id As Global.System.Data.DataColumn
        
        Private columnx_box_id As Global.System.Data.DataColumn
        
        Private columnx_box_dvd_id As Global.System.Data.DataColumn
        
        Private columny_orders_id As Global.System.Data.DataColumn
        
        Private columnx_group_login_id As Global.System.Data.DataColumn
        
        Private columnx_ean128 As Global.System.Data.DataColumn
        
        Private columny_products_id As Global.System.Data.DataColumn
        
        Private columny_dvd_id As Global.System.Data.DataColumn
        
        Private columny_box_id As Global.System.Data.DataColumn
        
        Private columny_group_login_id As Global.System.Data.DataColumn
        
        Private columny_box_dvd_id As Global.System.Data.DataColumn
        
        Private columndelivery_name As Global.System.Data.DataColumn
        
        Private columny_ean128 As Global.System.Data.DataColumn
        
        Private columndelivery_street_address As Global.System.Data.DataColumn
        
        Private columndelivery_city As Global.System.Data.DataColumn
        
        Private columndelivery_country As Global.System.Data.DataColumn
        
        Private columndelivery_postcode As Global.System.Data.DataColumn
        
        Private columnsecured_mail As Global.System.Data.DataColumn
        
        Private columndate_added As Global.System.Data.DataColumn
        
        Private columnlang_name As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnflyer_code As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "envelope_labels_multishipment_det"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property multishipment_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmultishipment_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property group_abcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngroup_abc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property x_orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnx_orders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property x_products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnx_products_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property x_dvd_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnx_dvd_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property x_box_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnx_box_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property x_box_dvd_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnx_box_dvd_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property y_orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columny_orders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property x_group_login_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnx_group_login_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property x_ean128Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnx_ean128
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property y_products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columny_products_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property y_dvd_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columny_dvd_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property y_box_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columny_box_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property y_group_login_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columny_group_login_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property y_box_dvd_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columny_box_dvd_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property y_ean128Column() As Global.System.Data.DataColumn
            Get
                Return Me.columny_ean128
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_street_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_street_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_country
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property secured_mailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsecured_mail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lang_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlang_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property flyer_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnflyer_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As envelope_labels_multishipment_detRow
            Get
                Return CType(Me.Rows(index),envelope_labels_multishipment_detRow)
            End Get
        End Property
        
        Public Event envelope_labels_multishipment_detRowChanging As envelope_labels_multishipment_detRowChangeEventHandler
        
        Public Event envelope_labels_multishipment_detRowChanged As envelope_labels_multishipment_detRowChangeEventHandler
        
        Public Event envelope_labels_multishipment_detRowDeleting As envelope_labels_multishipment_detRowChangeEventHandler
        
        Public Event envelope_labels_multishipment_detRowDeleted As envelope_labels_multishipment_detRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addenvelope_labels_multishipment_detRow(ByVal row As envelope_labels_multishipment_detRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addenvelope_labels_multishipment_detRow( _
                    ByVal multishipment_id As Integer,  _
                    ByVal group_abc As String,  _
                    ByVal x_orders_id As Integer,  _
                    ByVal x_products_id As Integer,  _
                    ByVal x_dvd_id As Integer,  _
                    ByVal x_box_id As Integer,  _
                    ByVal x_box_dvd_id As Integer,  _
                    ByVal y_orders_id As Integer,  _
                    ByVal x_group_login_id As Integer,  _
                    ByVal x_ean128 As String,  _
                    ByVal y_products_id As Integer,  _
                    ByVal y_dvd_id As Integer,  _
                    ByVal y_box_id As Integer,  _
                    ByVal y_group_login_id As Integer,  _
                    ByVal y_box_dvd_id As Integer,  _
                    ByVal delivery_name As String,  _
                    ByVal y_ean128 As String,  _
                    ByVal delivery_street_address As String,  _
                    ByVal delivery_city As String,  _
                    ByVal delivery_country As String,  _
                    ByVal delivery_postcode As String,  _
                    ByVal secured_mail As String,  _
                    ByVal date_added As Date,  _
                    ByVal lang_name As String,  _
                    ByVal customers_id As Integer,  _
                    ByVal flyer_code As String) As envelope_labels_multishipment_detRow
            Dim rowenvelope_labels_multishipment_detRow As envelope_labels_multishipment_detRow = CType(Me.NewRow,envelope_labels_multishipment_detRow)
            Dim columnValuesArray() As Object = New Object() {multishipment_id, group_abc, x_orders_id, x_products_id, x_dvd_id, x_box_id, x_box_dvd_id, y_orders_id, x_group_login_id, x_ean128, y_products_id, y_dvd_id, y_box_id, y_group_login_id, y_box_dvd_id, delivery_name, y_ean128, delivery_street_address, delivery_city, delivery_country, delivery_postcode, secured_mail, date_added, lang_name, customers_id, flyer_code}
            rowenvelope_labels_multishipment_detRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowenvelope_labels_multishipment_detRow)
            Return rowenvelope_labels_multishipment_detRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBymultishipment_id(ByVal multishipment_id As Integer) As envelope_labels_multishipment_detRow
            Return CType(Me.Rows.Find(New Object() {multishipment_id}),envelope_labels_multishipment_detRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As envelope_labels_multishipment_detDataTable = CType(MyBase.Clone,envelope_labels_multishipment_detDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New envelope_labels_multishipment_detDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnmultishipment_id = MyBase.Columns("multishipment_id")
            Me.columngroup_abc = MyBase.Columns("group_abc")
            Me.columnx_orders_id = MyBase.Columns("x_orders_id")
            Me.columnx_products_id = MyBase.Columns("x_products_id")
            Me.columnx_dvd_id = MyBase.Columns("x_dvd_id")
            Me.columnx_box_id = MyBase.Columns("x_box_id")
            Me.columnx_box_dvd_id = MyBase.Columns("x_box_dvd_id")
            Me.columny_orders_id = MyBase.Columns("y_orders_id")
            Me.columnx_group_login_id = MyBase.Columns("x_group_login_id")
            Me.columnx_ean128 = MyBase.Columns("x_ean128")
            Me.columny_products_id = MyBase.Columns("y_products_id")
            Me.columny_dvd_id = MyBase.Columns("y_dvd_id")
            Me.columny_box_id = MyBase.Columns("y_box_id")
            Me.columny_group_login_id = MyBase.Columns("y_group_login_id")
            Me.columny_box_dvd_id = MyBase.Columns("y_box_dvd_id")
            Me.columndelivery_name = MyBase.Columns("delivery_name")
            Me.columny_ean128 = MyBase.Columns("y_ean128")
            Me.columndelivery_street_address = MyBase.Columns("delivery_street_address")
            Me.columndelivery_city = MyBase.Columns("delivery_city")
            Me.columndelivery_country = MyBase.Columns("delivery_country")
            Me.columndelivery_postcode = MyBase.Columns("delivery_postcode")
            Me.columnsecured_mail = MyBase.Columns("secured_mail")
            Me.columndate_added = MyBase.Columns("date_added")
            Me.columnlang_name = MyBase.Columns("lang_name")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnflyer_code = MyBase.Columns("flyer_code")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnmultishipment_id = New Global.System.Data.DataColumn("multishipment_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmultishipment_id)
            Me.columngroup_abc = New Global.System.Data.DataColumn("group_abc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngroup_abc)
            Me.columnx_orders_id = New Global.System.Data.DataColumn("x_orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnx_orders_id)
            Me.columnx_products_id = New Global.System.Data.DataColumn("x_products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnx_products_id)
            Me.columnx_dvd_id = New Global.System.Data.DataColumn("x_dvd_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnx_dvd_id)
            Me.columnx_box_id = New Global.System.Data.DataColumn("x_box_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnx_box_id)
            Me.columnx_box_dvd_id = New Global.System.Data.DataColumn("x_box_dvd_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnx_box_dvd_id)
            Me.columny_orders_id = New Global.System.Data.DataColumn("y_orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columny_orders_id)
            Me.columnx_group_login_id = New Global.System.Data.DataColumn("x_group_login_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnx_group_login_id)
            Me.columnx_ean128 = New Global.System.Data.DataColumn("x_ean128", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnx_ean128)
            Me.columny_products_id = New Global.System.Data.DataColumn("y_products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columny_products_id)
            Me.columny_dvd_id = New Global.System.Data.DataColumn("y_dvd_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columny_dvd_id)
            Me.columny_box_id = New Global.System.Data.DataColumn("y_box_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columny_box_id)
            Me.columny_group_login_id = New Global.System.Data.DataColumn("y_group_login_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columny_group_login_id)
            Me.columny_box_dvd_id = New Global.System.Data.DataColumn("y_box_dvd_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columny_box_dvd_id)
            Me.columndelivery_name = New Global.System.Data.DataColumn("delivery_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_name)
            Me.columny_ean128 = New Global.System.Data.DataColumn("y_ean128", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columny_ean128)
            Me.columndelivery_street_address = New Global.System.Data.DataColumn("delivery_street_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_street_address)
            Me.columndelivery_city = New Global.System.Data.DataColumn("delivery_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_city)
            Me.columndelivery_country = New Global.System.Data.DataColumn("delivery_country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_country)
            Me.columndelivery_postcode = New Global.System.Data.DataColumn("delivery_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_postcode)
            Me.columnsecured_mail = New Global.System.Data.DataColumn("secured_mail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsecured_mail)
            Me.columndate_added = New Global.System.Data.DataColumn("date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_added)
            Me.columnlang_name = New Global.System.Data.DataColumn("lang_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlang_name)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnflyer_code = New Global.System.Data.DataColumn("flyer_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnflyer_code)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsEnvelopeLabelsKey3", New Global.System.Data.DataColumn() {Me.columnmultishipment_id}, true))
            Me.columnmultishipment_id.AllowDBNull = false
            Me.columnmultishipment_id.Unique = true
            Me.columngroup_abc.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newenvelope_labels_multishipment_detRow() As envelope_labels_multishipment_detRow
            Return CType(Me.NewRow,envelope_labels_multishipment_detRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New envelope_labels_multishipment_detRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(envelope_labels_multishipment_detRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.envelope_labels_multishipment_detRowChangedEvent) Is Nothing) Then
                RaiseEvent envelope_labels_multishipment_detRowChanged(Me, New envelope_labels_multishipment_detRowChangeEvent(CType(e.Row,envelope_labels_multishipment_detRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.envelope_labels_multishipment_detRowChangingEvent) Is Nothing) Then
                RaiseEvent envelope_labels_multishipment_detRowChanging(Me, New envelope_labels_multishipment_detRowChangeEvent(CType(e.Row,envelope_labels_multishipment_detRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.envelope_labels_multishipment_detRowDeletedEvent) Is Nothing) Then
                RaiseEvent envelope_labels_multishipment_detRowDeleted(Me, New envelope_labels_multishipment_detRowChangeEvent(CType(e.Row,envelope_labels_multishipment_detRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.envelope_labels_multishipment_detRowDeletingEvent) Is Nothing) Then
                RaiseEvent envelope_labels_multishipment_detRowDeleting(Me, New envelope_labels_multishipment_detRowChangeEvent(CType(e.Row,envelope_labels_multishipment_detRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeenvelope_labels_multishipment_detRow(ByVal row As envelope_labels_multishipment_detRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsEnvelopeLabels = New dsEnvelopeLabels
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "envelope_labels_multishipment_detDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class envelope_labelsDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnenvelope_labels_id As Global.System.Data.DataColumn
        
        Private columndestination_countries_id As Global.System.Data.DataColumn
        
        Private columngroup_id As Global.System.Data.DataColumn
        
        Private columnorders_id As Global.System.Data.DataColumn
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columndvd_id As Global.System.Data.DataColumn
        
        Private columndate_added As Global.System.Data.DataColumn
        
        Private columnlabel_status As Global.System.Data.DataColumn
        
        Private columnbox_id As Global.System.Data.DataColumn
        
        Private columnbox_dvd_id As Global.System.Data.DataColumn
        
        Private columnfirst_delivery As Global.System.Data.DataColumn
        
        Private columnean128 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "envelope_labels"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property envelope_labels_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnenvelope_labels_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property destination_countries_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndestination_countries_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property group_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngroup_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvd_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndvd_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property label_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlabel_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property box_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbox_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property box_dvd_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbox_dvd_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property first_deliveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfirst_delivery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ean128Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnean128
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As envelope_labelsRow
            Get
                Return CType(Me.Rows(index),envelope_labelsRow)
            End Get
        End Property
        
        Public Event envelope_labelsRowChanging As envelope_labelsRowChangeEventHandler
        
        Public Event envelope_labelsRowChanged As envelope_labelsRowChangeEventHandler
        
        Public Event envelope_labelsRowDeleting As envelope_labelsRowChangeEventHandler
        
        Public Event envelope_labelsRowDeleted As envelope_labelsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addenvelope_labelsRow(ByVal row As envelope_labelsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addenvelope_labelsRow(ByVal destination_countries_id As Integer, ByVal group_id As Integer, ByVal orders_id As Integer, ByVal products_id As Integer, ByVal dvd_id As Integer, ByVal date_added As Date, ByVal label_status As Integer, ByVal box_id As Integer, ByVal box_dvd_id As Integer, ByVal first_delivery As Short, ByVal ean128 As String) As envelope_labelsRow
            Dim rowenvelope_labelsRow As envelope_labelsRow = CType(Me.NewRow,envelope_labelsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, destination_countries_id, group_id, orders_id, products_id, dvd_id, date_added, label_status, box_id, box_dvd_id, first_delivery, ean128}
            rowenvelope_labelsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowenvelope_labelsRow)
            Return rowenvelope_labelsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByenvelope_labels_id(ByVal envelope_labels_id As Integer) As envelope_labelsRow
            Return CType(Me.Rows.Find(New Object() {envelope_labels_id}),envelope_labelsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As envelope_labelsDataTable = CType(MyBase.Clone,envelope_labelsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New envelope_labelsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnenvelope_labels_id = MyBase.Columns("envelope_labels_id")
            Me.columndestination_countries_id = MyBase.Columns("destination_countries_id")
            Me.columngroup_id = MyBase.Columns("group_id")
            Me.columnorders_id = MyBase.Columns("orders_id")
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columndvd_id = MyBase.Columns("dvd_id")
            Me.columndate_added = MyBase.Columns("date_added")
            Me.columnlabel_status = MyBase.Columns("label_status")
            Me.columnbox_id = MyBase.Columns("box_id")
            Me.columnbox_dvd_id = MyBase.Columns("box_dvd_id")
            Me.columnfirst_delivery = MyBase.Columns("first_delivery")
            Me.columnean128 = MyBase.Columns("ean128")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnenvelope_labels_id = New Global.System.Data.DataColumn("envelope_labels_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnenvelope_labels_id)
            Me.columndestination_countries_id = New Global.System.Data.DataColumn("destination_countries_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndestination_countries_id)
            Me.columngroup_id = New Global.System.Data.DataColumn("group_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngroup_id)
            Me.columnorders_id = New Global.System.Data.DataColumn("orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_id)
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columndvd_id = New Global.System.Data.DataColumn("dvd_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvd_id)
            Me.columndate_added = New Global.System.Data.DataColumn("date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_added)
            Me.columnlabel_status = New Global.System.Data.DataColumn("label_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlabel_status)
            Me.columnbox_id = New Global.System.Data.DataColumn("box_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbox_id)
            Me.columnbox_dvd_id = New Global.System.Data.DataColumn("box_dvd_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbox_dvd_id)
            Me.columnfirst_delivery = New Global.System.Data.DataColumn("first_delivery", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfirst_delivery)
            Me.columnean128 = New Global.System.Data.DataColumn("ean128", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnean128)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsEnvelopeLabelsKey4", New Global.System.Data.DataColumn() {Me.columnenvelope_labels_id}, true))
            Me.columnenvelope_labels_id.AutoIncrement = true
            Me.columnenvelope_labels_id.AllowDBNull = false
            Me.columnenvelope_labels_id.ReadOnly = true
            Me.columnenvelope_labels_id.Unique = true
            Me.columnfirst_delivery.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newenvelope_labelsRow() As envelope_labelsRow
            Return CType(Me.NewRow,envelope_labelsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New envelope_labelsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(envelope_labelsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.envelope_labelsRowChangedEvent) Is Nothing) Then
                RaiseEvent envelope_labelsRowChanged(Me, New envelope_labelsRowChangeEvent(CType(e.Row,envelope_labelsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.envelope_labelsRowChangingEvent) Is Nothing) Then
                RaiseEvent envelope_labelsRowChanging(Me, New envelope_labelsRowChangeEvent(CType(e.Row,envelope_labelsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.envelope_labelsRowDeletedEvent) Is Nothing) Then
                RaiseEvent envelope_labelsRowDeleted(Me, New envelope_labelsRowChangeEvent(CType(e.Row,envelope_labelsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.envelope_labelsRowDeletingEvent) Is Nothing) Then
                RaiseEvent envelope_labelsRowDeleting(Me, New envelope_labelsRowChangeEvent(CType(e.Row,envelope_labelsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeenvelope_labelsRow(ByVal row As envelope_labelsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsEnvelopeLabels = New dsEnvelopeLabels
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "envelope_labelsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class orders_out_view1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnorders_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columndvd_id As Global.System.Data.DataColumn
        
        Private columnbox_id As Global.System.Data.DataColumn
        
        Private columnpibox_id As Global.System.Data.DataColumn
        
        Private columnlanguage_id As Global.System.Data.DataColumn
        
        Private columndelivery_country As Global.System.Data.DataColumn
        
        Private columnpick_group As Global.System.Data.DataColumn
        
        Private columngroup_id As Global.System.Data.DataColumn
        
        Private columnput_separator As Global.System.Data.DataColumn
        
        Private columnpick_group1 As Global.System.Data.DataColumn
        
        Private columnpick_boxid As Global.System.Data.DataColumn
        
        Private columndate_purchased As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "orders_out_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvd_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndvd_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property box_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbox_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pibox_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpibox_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property language_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlanguage_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_country
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pick_groupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpick_group
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property group_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngroup_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property put_separatorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnput_separator
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pick_group1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnpick_group1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pick_boxidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpick_boxid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_purchasedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_purchased
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As orders_out_view1Row
            Get
                Return CType(Me.Rows(index),orders_out_view1Row)
            End Get
        End Property
        
        Public Event orders_out_view1RowChanging As orders_out_view1RowChangeEventHandler
        
        Public Event orders_out_view1RowChanged As orders_out_view1RowChangeEventHandler
        
        Public Event orders_out_view1RowDeleting As orders_out_view1RowChangeEventHandler
        
        Public Event orders_out_view1RowDeleted As orders_out_view1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addorders_out_view1Row(ByVal row As orders_out_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addorders_out_view1Row(ByVal orders_id As Integer, ByVal customers_id As Integer, ByVal products_id As Integer, ByVal dvd_id As Integer, ByVal box_id As Integer, ByVal pibox_id As Integer, ByVal language_id As Integer, ByVal delivery_country As String, ByVal pick_group As String, ByVal group_id As Integer, ByVal put_separator As Integer, ByVal pick_group1 As String, ByVal pick_boxid As Integer, ByVal date_purchased As Date) As orders_out_view1Row
            Dim roworders_out_view1Row As orders_out_view1Row = CType(Me.NewRow,orders_out_view1Row)
            Dim columnValuesArray() As Object = New Object() {orders_id, customers_id, products_id, dvd_id, box_id, pibox_id, language_id, delivery_country, pick_group, group_id, put_separator, pick_group1, pick_boxid, date_purchased}
            roworders_out_view1Row.ItemArray = columnValuesArray
            Me.Rows.Add(roworders_out_view1Row)
            Return roworders_out_view1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As orders_out_view1DataTable = CType(MyBase.Clone,orders_out_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New orders_out_view1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnorders_id = MyBase.Columns("orders_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columndvd_id = MyBase.Columns("dvd_id")
            Me.columnbox_id = MyBase.Columns("box_id")
            Me.columnpibox_id = MyBase.Columns("pibox_id")
            Me.columnlanguage_id = MyBase.Columns("language_id")
            Me.columndelivery_country = MyBase.Columns("delivery_country")
            Me.columnpick_group = MyBase.Columns("pick_group")
            Me.columngroup_id = MyBase.Columns("group_id")
            Me.columnput_separator = MyBase.Columns("put_separator")
            Me.columnpick_group1 = MyBase.Columns("pick_group1")
            Me.columnpick_boxid = MyBase.Columns("pick_boxid")
            Me.columndate_purchased = MyBase.Columns("date_purchased")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnorders_id = New Global.System.Data.DataColumn("orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columndvd_id = New Global.System.Data.DataColumn("dvd_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvd_id)
            Me.columnbox_id = New Global.System.Data.DataColumn("box_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbox_id)
            Me.columnpibox_id = New Global.System.Data.DataColumn("pibox_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpibox_id)
            Me.columnlanguage_id = New Global.System.Data.DataColumn("language_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanguage_id)
            Me.columndelivery_country = New Global.System.Data.DataColumn("delivery_country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_country)
            Me.columnpick_group = New Global.System.Data.DataColumn("pick_group", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpick_group)
            Me.columngroup_id = New Global.System.Data.DataColumn("group_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngroup_id)
            Me.columnput_separator = New Global.System.Data.DataColumn("put_separator", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnput_separator)
            Me.columnpick_group1 = New Global.System.Data.DataColumn("pick_group1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpick_group1)
            Me.columnpick_boxid = New Global.System.Data.DataColumn("pick_boxid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpick_boxid)
            Me.columndate_purchased = New Global.System.Data.DataColumn("date_purchased", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_purchased)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Neworders_out_view1Row() As orders_out_view1Row
            Return CType(Me.NewRow,orders_out_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New orders_out_view1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(orders_out_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.orders_out_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent orders_out_view1RowChanged(Me, New orders_out_view1RowChangeEvent(CType(e.Row,orders_out_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.orders_out_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent orders_out_view1RowChanging(Me, New orders_out_view1RowChangeEvent(CType(e.Row,orders_out_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.orders_out_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent orders_out_view1RowDeleted(Me, New orders_out_view1RowChangeEvent(CType(e.Row,orders_out_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.orders_out_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent orders_out_view1RowDeleting(Me, New orders_out_view1RowChangeEvent(CType(e.Row,orders_out_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeorders_out_view1Row(ByVal row As orders_out_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsEnvelopeLabels = New dsEnvelopeLabels
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "orders_out_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class envelope_labels_multishipmentRow
        Inherits Global.System.Data.DataRow
        
        Private tableenvelope_labels_multishipment As envelope_labels_multishipmentDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableenvelope_labels_multishipment = CType(Me.Table,envelope_labels_multishipmentDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property envelope_labels_id() As Integer
            Get
                Return CType(Me(Me.tableenvelope_labels_multishipment.envelope_labels_idColumn),Integer)
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.envelope_labels_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property destination_countries_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment.destination_countries_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'destination_countries_id' in table 'envelope_labels_multish"& _ 
                            "ipment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.destination_countries_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property group_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment.group_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'group_id' in table 'envelope_labels_multishipment' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.group_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property multishipment_id() As Integer
            Get
                Return CType(Me(Me.tableenvelope_labels_multishipment.multishipment_idColumn),Integer)
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.multishipment_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property group_abc() As String
            Get
                Return CType(Me(Me.tableenvelope_labels_multishipment.group_abcColumn),String)
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.group_abcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property binome_xy() As String
            Get
                Return CType(Me(Me.tableenvelope_labels_multishipment.binome_xyColumn),String)
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.binome_xyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment.orders_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_id' in table 'envelope_labels_multishipment' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment.products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_id' in table 'envelope_labels_multishipment' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvd_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment.dvd_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dvd_id' in table 'envelope_labels_multishipment' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.dvd_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment.date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_added' in table 'envelope_labels_multishipment' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property label_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment.label_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'label_status' in table 'envelope_labels_multishipment' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.label_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property box_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment.box_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'box_id' in table 'envelope_labels_multishipment' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.box_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property box_dvd_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment.box_dvd_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'box_dvd_id' in table 'envelope_labels_multishipment' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.box_dvd_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property first_delivery() As Short
            Get
                Return CType(Me(Me.tableenvelope_labels_multishipment.first_deliveryColumn),Short)
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.first_deliveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ean128() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment.ean128Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ean128' in table 'envelope_labels_multishipment' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.ean128Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property flyer_code() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment.flyer_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'flyer_code' in table 'envelope_labels_multishipment' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment.flyer_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdestination_countries_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment.destination_countries_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdestination_countries_idNull()
            Me(Me.tableenvelope_labels_multishipment.destination_countries_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isgroup_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment.group_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setgroup_idNull()
            Me(Me.tableenvelope_labels_multishipment.group_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment.orders_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_idNull()
            Me(Me.tableenvelope_labels_multishipment.orders_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment.products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_idNull()
            Me(Me.tableenvelope_labels_multishipment.products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdvd_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment.dvd_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdvd_idNull()
            Me(Me.tableenvelope_labels_multishipment.dvd_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_addedNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment.date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_addedNull()
            Me(Me.tableenvelope_labels_multishipment.date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islabel_statusNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment.label_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlabel_statusNull()
            Me(Me.tableenvelope_labels_multishipment.label_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbox_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment.box_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbox_idNull()
            Me(Me.tableenvelope_labels_multishipment.box_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbox_dvd_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment.box_dvd_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbox_dvd_idNull()
            Me(Me.tableenvelope_labels_multishipment.box_dvd_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isean128Null() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment.ean128Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setean128Null()
            Me(Me.tableenvelope_labels_multishipment.ean128Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isflyer_codeNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment.flyer_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setflyer_codeNull()
            Me(Me.tableenvelope_labels_multishipment.flyer_codeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ordersRow
        Inherits Global.System.Data.DataRow
        
        Private tableorders As ordersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableorders = CType(Me.Table,ordersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_id() As Integer
            Get
                Return CType(Me(Me.tableorders.orders_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tableorders.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_name() As String
            Get
                Return CType(Me(Me.tableorders.customers_nameColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_street_address() As String
            Get
                Return CType(Me(Me.tableorders.customers_street_addressColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_street_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_suburb() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.customers_suburbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_suburb' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.customers_suburbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_city() As String
            Get
                Return CType(Me(Me.tableorders.customers_cityColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_postcode() As String
            Get
                Return CType(Me(Me.tableorders.customers_postcodeColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_state() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.customers_stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_state' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.customers_stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_country() As String
            Get
                Return CType(Me(Me.tableorders.customers_countryColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Return CType(Me(Me.tableorders.customers_telephoneColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Return CType(Me(Me.tableorders.customers_email_addressColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_address_format_id() As Integer
            Get
                Return CType(Me(Me.tableorders.customers_address_format_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.customers_address_format_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_name() As String
            Get
                Return CType(Me(Me.tableorders.delivery_nameColumn),String)
            End Get
            Set
                Me(Me.tableorders.delivery_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_street_address() As String
            Get
                Return CType(Me(Me.tableorders.delivery_street_addressColumn),String)
            End Get
            Set
                Me(Me.tableorders.delivery_street_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_suburb() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.delivery_suburbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_suburb' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.delivery_suburbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_city() As String
            Get
                Return CType(Me(Me.tableorders.delivery_cityColumn),String)
            End Get
            Set
                Me(Me.tableorders.delivery_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_postcode() As String
            Get
                Return CType(Me(Me.tableorders.delivery_postcodeColumn),String)
            End Get
            Set
                Me(Me.tableorders.delivery_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_state() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.delivery_stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_state' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.delivery_stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_country() As String
            Get
                Return CType(Me(Me.tableorders.delivery_countryColumn),String)
            End Get
            Set
                Me(Me.tableorders.delivery_countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_address_format_id() As Integer
            Get
                Return CType(Me(Me.tableorders.delivery_address_format_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.delivery_address_format_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_method() As String
            Get
                Return CType(Me(Me.tableorders.payment_methodColumn),String)
            End Get
            Set
                Me(Me.tableorders.payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.cc_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_type' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.cc_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.cc_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_owner' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.cc_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.cc_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_number' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.cc_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_expires() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.cc_expiresColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_expires' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.cc_expiresColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableorders.last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_modified' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_purchased() As Date
            Get
                Try 
                    Return CType(Me(Me.tableorders.date_purchasedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_purchased' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.date_purchasedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_status() As Integer
            Get
                Return CType(Me(Me.tableorders.orders_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.orders_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_date_finished() As Date
            Get
                Try 
                    Return CType(Me(Me.tableorders.orders_date_finishedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_date_finished' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.orders_date_finishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comments() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comments' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property currency() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.currencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'currency' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.currencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property currency_value() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableorders.currency_valueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'currency_value' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.currency_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As Integer
            Get
                Return CType(Me(Me.tableorders.siteColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property secured_mail() As Integer
            Get
                Return CType(Me(Me.tableorders.secured_mailColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.secured_mailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property multishipment_sm() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.multishipment_smColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'multishipment_sm' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.multishipment_smColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_suburbNull() As Boolean
            Return Me.IsNull(Me.tableorders.customers_suburbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_suburbNull()
            Me(Me.tableorders.customers_suburbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_stateNull() As Boolean
            Return Me.IsNull(Me.tableorders.customers_stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_stateNull()
            Me(Me.tableorders.customers_stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_suburbNull() As Boolean
            Return Me.IsNull(Me.tableorders.delivery_suburbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_suburbNull()
            Me(Me.tableorders.delivery_suburbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_stateNull() As Boolean
            Return Me.IsNull(Me.tableorders.delivery_stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_stateNull()
            Me(Me.tableorders.delivery_stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_typeNull() As Boolean
            Return Me.IsNull(Me.tableorders.cc_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_typeNull()
            Me(Me.tableorders.cc_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_ownerNull() As Boolean
            Return Me.IsNull(Me.tableorders.cc_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_ownerNull()
            Me(Me.tableorders.cc_ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_numberNull() As Boolean
            Return Me.IsNull(Me.tableorders.cc_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_numberNull()
            Me(Me.tableorders.cc_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_expiresNull() As Boolean
            Return Me.IsNull(Me.tableorders.cc_expiresColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_expiresNull()
            Me(Me.tableorders.cc_expiresColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islast_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableorders.last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlast_modifiedNull()
            Me(Me.tableorders.last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_purchasedNull() As Boolean
            Return Me.IsNull(Me.tableorders.date_purchasedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_purchasedNull()
            Me(Me.tableorders.date_purchasedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_date_finishedNull() As Boolean
            Return Me.IsNull(Me.tableorders.orders_date_finishedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_date_finishedNull()
            Me(Me.tableorders.orders_date_finishedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscommentsNull() As Boolean
            Return Me.IsNull(Me.tableorders.commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcommentsNull()
            Me(Me.tableorders.commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurrencyNull() As Boolean
            Return Me.IsNull(Me.tableorders.currencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurrencyNull()
            Me(Me.tableorders.currencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscurrency_valueNull() As Boolean
            Return Me.IsNull(Me.tableorders.currency_valueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcurrency_valueNull()
            Me(Me.tableorders.currency_valueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismultishipment_smNull() As Boolean
            Return Me.IsNull(Me.tableorders.multishipment_smColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmultishipment_smNull()
            Me(Me.tableorders.multishipment_smColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class envelope_labels_multishipment_detRow
        Inherits Global.System.Data.DataRow
        
        Private tableenvelope_labels_multishipment_det As envelope_labels_multishipment_detDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableenvelope_labels_multishipment_det = CType(Me.Table,envelope_labels_multishipment_detDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property multishipment_id() As Integer
            Get
                Return CType(Me(Me.tableenvelope_labels_multishipment_det.multishipment_idColumn),Integer)
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.multishipment_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property group_abc() As String
            Get
                Return CType(Me(Me.tableenvelope_labels_multishipment_det.group_abcColumn),String)
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.group_abcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property x_orders_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.x_orders_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'x_orders_id' in table 'envelope_labels_multishipment_det' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.x_orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property x_products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.x_products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'x_products_id' in table 'envelope_labels_multishipment_det'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.x_products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property x_dvd_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.x_dvd_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'x_dvd_id' in table 'envelope_labels_multishipment_det' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.x_dvd_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property x_box_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.x_box_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'x_box_id' in table 'envelope_labels_multishipment_det' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.x_box_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property x_box_dvd_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.x_box_dvd_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'x_box_dvd_id' in table 'envelope_labels_multishipment_det' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.x_box_dvd_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property y_orders_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.y_orders_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'y_orders_id' in table 'envelope_labels_multishipment_det' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.y_orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property x_group_login_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.x_group_login_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'x_group_login_id' in table 'envelope_labels_multishipment_d"& _ 
                            "et' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.x_group_login_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property x_ean128() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.x_ean128Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'x_ean128' in table 'envelope_labels_multishipment_det' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.x_ean128Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property y_products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.y_products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'y_products_id' in table 'envelope_labels_multishipment_det'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.y_products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property y_dvd_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.y_dvd_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'y_dvd_id' in table 'envelope_labels_multishipment_det' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.y_dvd_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property y_box_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.y_box_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'y_box_id' in table 'envelope_labels_multishipment_det' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.y_box_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property y_group_login_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.y_group_login_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'y_group_login_id' in table 'envelope_labels_multishipment_d"& _ 
                            "et' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.y_group_login_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property y_box_dvd_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.y_box_dvd_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'y_box_dvd_id' in table 'envelope_labels_multishipment_det' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.y_box_dvd_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.delivery_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_name' in table 'envelope_labels_multishipment_det'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.delivery_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property y_ean128() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.y_ean128Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'y_ean128' in table 'envelope_labels_multishipment_det' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.y_ean128Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_street_address() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.delivery_street_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_street_address' in table 'envelope_labels_multishi"& _ 
                            "pment_det' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.delivery_street_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_city() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.delivery_cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_city' in table 'envelope_labels_multishipment_det'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.delivery_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_country() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.delivery_countryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_country' in table 'envelope_labels_multishipment_d"& _ 
                            "et' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.delivery_countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_postcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.delivery_postcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_postcode' in table 'envelope_labels_multishipment_"& _ 
                            "det' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.delivery_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property secured_mail() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.secured_mailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'secured_mail' in table 'envelope_labels_multishipment_det' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.secured_mailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_added' in table 'envelope_labels_multishipment_det' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lang_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.lang_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lang_name' in table 'envelope_labels_multishipment_det' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.lang_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'envelope_labels_multishipment_det' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property flyer_code() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels_multishipment_det.flyer_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'flyer_code' in table 'envelope_labels_multishipment_det' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels_multishipment_det.flyer_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isx_orders_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.x_orders_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setx_orders_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.x_orders_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isx_products_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.x_products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setx_products_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.x_products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isx_dvd_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.x_dvd_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setx_dvd_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.x_dvd_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isx_box_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.x_box_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setx_box_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.x_box_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isx_box_dvd_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.x_box_dvd_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setx_box_dvd_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.x_box_dvd_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isy_orders_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.y_orders_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sety_orders_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.y_orders_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isx_group_login_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.x_group_login_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setx_group_login_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.x_group_login_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isx_ean128Null() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.x_ean128Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setx_ean128Null()
            Me(Me.tableenvelope_labels_multishipment_det.x_ean128Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isy_products_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.y_products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sety_products_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.y_products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isy_dvd_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.y_dvd_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sety_dvd_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.y_dvd_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isy_box_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.y_box_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sety_box_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.y_box_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isy_group_login_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.y_group_login_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sety_group_login_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.y_group_login_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isy_box_dvd_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.y_box_dvd_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sety_box_dvd_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.y_box_dvd_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_nameNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.delivery_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_nameNull()
            Me(Me.tableenvelope_labels_multishipment_det.delivery_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isy_ean128Null() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.y_ean128Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sety_ean128Null()
            Me(Me.tableenvelope_labels_multishipment_det.y_ean128Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_street_addressNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.delivery_street_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_street_addressNull()
            Me(Me.tableenvelope_labels_multishipment_det.delivery_street_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_cityNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.delivery_cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_cityNull()
            Me(Me.tableenvelope_labels_multishipment_det.delivery_cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_countryNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.delivery_countryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_countryNull()
            Me(Me.tableenvelope_labels_multishipment_det.delivery_countryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_postcodeNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.delivery_postcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_postcodeNull()
            Me(Me.tableenvelope_labels_multishipment_det.delivery_postcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issecured_mailNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.secured_mailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsecured_mailNull()
            Me(Me.tableenvelope_labels_multishipment_det.secured_mailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_addedNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_addedNull()
            Me(Me.tableenvelope_labels_multishipment_det.date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islang_nameNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.lang_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlang_nameNull()
            Me(Me.tableenvelope_labels_multishipment_det.lang_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableenvelope_labels_multishipment_det.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isflyer_codeNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels_multishipment_det.flyer_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setflyer_codeNull()
            Me(Me.tableenvelope_labels_multishipment_det.flyer_codeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class envelope_labelsRow
        Inherits Global.System.Data.DataRow
        
        Private tableenvelope_labels As envelope_labelsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableenvelope_labels = CType(Me.Table,envelope_labelsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property envelope_labels_id() As Integer
            Get
                Return CType(Me(Me.tableenvelope_labels.envelope_labels_idColumn),Integer)
            End Get
            Set
                Me(Me.tableenvelope_labels.envelope_labels_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property destination_countries_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels.destination_countries_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'destination_countries_id' in table 'envelope_labels' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels.destination_countries_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property group_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels.group_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'group_id' in table 'envelope_labels' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels.group_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels.orders_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_id' in table 'envelope_labels' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels.orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels.products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_id' in table 'envelope_labels' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvd_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels.dvd_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dvd_id' in table 'envelope_labels' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels.dvd_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels.date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_added' in table 'envelope_labels' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels.date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property label_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels.label_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'label_status' in table 'envelope_labels' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels.label_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property box_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels.box_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'box_id' in table 'envelope_labels' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels.box_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property box_dvd_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels.box_dvd_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'box_dvd_id' in table 'envelope_labels' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels.box_dvd_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property first_delivery() As Short
            Get
                Return CType(Me(Me.tableenvelope_labels.first_deliveryColumn),Short)
            End Get
            Set
                Me(Me.tableenvelope_labels.first_deliveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ean128() As String
            Get
                Try 
                    Return CType(Me(Me.tableenvelope_labels.ean128Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ean128' in table 'envelope_labels' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableenvelope_labels.ean128Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdestination_countries_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels.destination_countries_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdestination_countries_idNull()
            Me(Me.tableenvelope_labels.destination_countries_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isgroup_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels.group_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setgroup_idNull()
            Me(Me.tableenvelope_labels.group_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels.orders_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_idNull()
            Me(Me.tableenvelope_labels.orders_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels.products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_idNull()
            Me(Me.tableenvelope_labels.products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdvd_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels.dvd_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdvd_idNull()
            Me(Me.tableenvelope_labels.dvd_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_addedNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels.date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_addedNull()
            Me(Me.tableenvelope_labels.date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islabel_statusNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels.label_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlabel_statusNull()
            Me(Me.tableenvelope_labels.label_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbox_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels.box_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbox_idNull()
            Me(Me.tableenvelope_labels.box_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbox_dvd_idNull() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels.box_dvd_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbox_dvd_idNull()
            Me(Me.tableenvelope_labels.box_dvd_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isean128Null() As Boolean
            Return Me.IsNull(Me.tableenvelope_labels.ean128Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setean128Null()
            Me(Me.tableenvelope_labels.ean128Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class orders_out_view1Row
        Inherits Global.System.Data.DataRow
        
        Private tableorders_out_view1 As orders_out_view1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableorders_out_view1 = CType(Me.Table,orders_out_view1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.orders_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_id' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_id' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvd_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.dvd_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dvd_id' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.dvd_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property box_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.box_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'box_id' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.box_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pibox_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.pibox_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pibox_id' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.pibox_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property language_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.language_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'language_id' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.language_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_country() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.delivery_countryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_country' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.delivery_countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pick_group() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.pick_groupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pick_group' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.pick_groupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property group_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.group_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'group_id' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.group_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property put_separator() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.put_separatorColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'put_separator' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.put_separatorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pick_group1() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.pick_group1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pick_group1' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.pick_group1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pick_boxid() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.pick_boxidColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pick_boxid' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.pick_boxidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_purchased() As Date
            Get
                Try 
                    Return CType(Me(Me.tableorders_out_view1.date_purchasedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_purchased' in table 'orders_out_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_out_view1.date_purchasedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_idNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.orders_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_idNull()
            Me(Me.tableorders_out_view1.orders_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableorders_out_view1.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_idNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_idNull()
            Me(Me.tableorders_out_view1.products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdvd_idNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.dvd_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdvd_idNull()
            Me(Me.tableorders_out_view1.dvd_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbox_idNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.box_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbox_idNull()
            Me(Me.tableorders_out_view1.box_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispibox_idNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.pibox_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpibox_idNull()
            Me(Me.tableorders_out_view1.pibox_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islanguage_idNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.language_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlanguage_idNull()
            Me(Me.tableorders_out_view1.language_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_countryNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.delivery_countryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_countryNull()
            Me(Me.tableorders_out_view1.delivery_countryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispick_groupNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.pick_groupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpick_groupNull()
            Me(Me.tableorders_out_view1.pick_groupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isgroup_idNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.group_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setgroup_idNull()
            Me(Me.tableorders_out_view1.group_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isput_separatorNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.put_separatorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setput_separatorNull()
            Me(Me.tableorders_out_view1.put_separatorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispick_group1Null() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.pick_group1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpick_group1Null()
            Me(Me.tableorders_out_view1.pick_group1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispick_boxidNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.pick_boxidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpick_boxidNull()
            Me(Me.tableorders_out_view1.pick_boxidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_purchasedNull() As Boolean
            Return Me.IsNull(Me.tableorders_out_view1.date_purchasedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_purchasedNull()
            Me(Me.tableorders_out_view1.date_purchasedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class envelope_labels_multishipmentRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As envelope_labels_multishipmentRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As envelope_labels_multishipmentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As envelope_labels_multishipmentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ordersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ordersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ordersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ordersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class envelope_labels_multishipment_detRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As envelope_labels_multishipment_detRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As envelope_labels_multishipment_detRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As envelope_labels_multishipment_detRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class envelope_labelsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As envelope_labelsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As envelope_labelsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As envelope_labelsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class orders_out_view1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As orders_out_view1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As orders_out_view1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As orders_out_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
