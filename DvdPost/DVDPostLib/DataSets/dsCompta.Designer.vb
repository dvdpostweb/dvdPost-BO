'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5446
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsCompta"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsCompta
    Inherits Global.System.Data.DataSet
    
    Private tableEurofides As EurofidesDataTable
    
    Private tablepayment_offline_request As payment_offline_requestDataTable
    
    Private tableOgoneExp As OgoneExpDataTable
    
    Private tablecustomers As customersDataTable
    
    Private tablecustomersView1 As customersView1DataTable
    
    Private tablelanguages As languagesDataTable
    
    Private tablesite As siteDataTable
    
    Private tablemail_messages As mail_messagesDataTable
    
    Private tableOffline_Payment_Recovery_Flow As Offline_Payment_Recovery_FlowDataTable
    
    Private tableOffline_Payment_Step_View1 As Offline_Payment_Step_View1DataTable
    
    Private tableOffline_DvdAtHome As Offline_DvdAtHomeDataTable
    
    Private tableogone_batch As ogone_batchDataTable
    
    Private relationOffline_Payment_Step_View1_Offline_DvdAtHome As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Eurofides")) Is Nothing) Then
                MyBase.Tables.Add(New EurofidesDataTable(ds.Tables("Eurofides")))
            End If
            If (Not (ds.Tables("payment_offline_request")) Is Nothing) Then
                MyBase.Tables.Add(New payment_offline_requestDataTable(ds.Tables("payment_offline_request")))
            End If
            If (Not (ds.Tables("OgoneExp")) Is Nothing) Then
                MyBase.Tables.Add(New OgoneExpDataTable(ds.Tables("OgoneExp")))
            End If
            If (Not (ds.Tables("customers")) Is Nothing) Then
                MyBase.Tables.Add(New customersDataTable(ds.Tables("customers")))
            End If
            If (Not (ds.Tables("customersView1")) Is Nothing) Then
                MyBase.Tables.Add(New customersView1DataTable(ds.Tables("customersView1")))
            End If
            If (Not (ds.Tables("languages")) Is Nothing) Then
                MyBase.Tables.Add(New languagesDataTable(ds.Tables("languages")))
            End If
            If (Not (ds.Tables("site")) Is Nothing) Then
                MyBase.Tables.Add(New siteDataTable(ds.Tables("site")))
            End If
            If (Not (ds.Tables("mail_messages")) Is Nothing) Then
                MyBase.Tables.Add(New mail_messagesDataTable(ds.Tables("mail_messages")))
            End If
            If (Not (ds.Tables("Offline_Payment_Recovery_Flow")) Is Nothing) Then
                MyBase.Tables.Add(New Offline_Payment_Recovery_FlowDataTable(ds.Tables("Offline_Payment_Recovery_Flow")))
            End If
            If (Not (ds.Tables("Offline_Payment_Step_View1")) Is Nothing) Then
                MyBase.Tables.Add(New Offline_Payment_Step_View1DataTable(ds.Tables("Offline_Payment_Step_View1")))
            End If
            If (Not (ds.Tables("Offline_DvdAtHome")) Is Nothing) Then
                MyBase.Tables.Add(New Offline_DvdAtHomeDataTable(ds.Tables("Offline_DvdAtHome")))
            End If
            If (Not (ds.Tables("ogone_batch")) Is Nothing) Then
                MyBase.Tables.Add(New ogone_batchDataTable(ds.Tables("ogone_batch")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Eurofides() As EurofidesDataTable
        Get
            Return Me.tableEurofides
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property payment_offline_request() As payment_offline_requestDataTable
        Get
            Return Me.tablepayment_offline_request
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OgoneExp() As OgoneExpDataTable
        Get
            Return Me.tableOgoneExp
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property customers() As customersDataTable
        Get
            Return Me.tablecustomers
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property customersView1() As customersView1DataTable
        Get
            Return Me.tablecustomersView1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property languages() As languagesDataTable
        Get
            Return Me.tablelanguages
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property site() As siteDataTable
        Get
            Return Me.tablesite
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property mail_messages() As mail_messagesDataTable
        Get
            Return Me.tablemail_messages
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Offline_Payment_Recovery_Flow() As Offline_Payment_Recovery_FlowDataTable
        Get
            Return Me.tableOffline_Payment_Recovery_Flow
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Offline_Payment_Step_View1() As Offline_Payment_Step_View1DataTable
        Get
            Return Me.tableOffline_Payment_Step_View1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Offline_DvdAtHome() As Offline_DvdAtHomeDataTable
        Get
            Return Me.tableOffline_DvdAtHome
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ogone_batch() As ogone_batchDataTable
        Get
            Return Me.tableogone_batch
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsCompta = CType(MyBase.Clone,dsCompta)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("Eurofides")) Is Nothing) Then
                MyBase.Tables.Add(New EurofidesDataTable(ds.Tables("Eurofides")))
            End If
            If (Not (ds.Tables("payment_offline_request")) Is Nothing) Then
                MyBase.Tables.Add(New payment_offline_requestDataTable(ds.Tables("payment_offline_request")))
            End If
            If (Not (ds.Tables("OgoneExp")) Is Nothing) Then
                MyBase.Tables.Add(New OgoneExpDataTable(ds.Tables("OgoneExp")))
            End If
            If (Not (ds.Tables("customers")) Is Nothing) Then
                MyBase.Tables.Add(New customersDataTable(ds.Tables("customers")))
            End If
            If (Not (ds.Tables("customersView1")) Is Nothing) Then
                MyBase.Tables.Add(New customersView1DataTable(ds.Tables("customersView1")))
            End If
            If (Not (ds.Tables("languages")) Is Nothing) Then
                MyBase.Tables.Add(New languagesDataTable(ds.Tables("languages")))
            End If
            If (Not (ds.Tables("site")) Is Nothing) Then
                MyBase.Tables.Add(New siteDataTable(ds.Tables("site")))
            End If
            If (Not (ds.Tables("mail_messages")) Is Nothing) Then
                MyBase.Tables.Add(New mail_messagesDataTable(ds.Tables("mail_messages")))
            End If
            If (Not (ds.Tables("Offline_Payment_Recovery_Flow")) Is Nothing) Then
                MyBase.Tables.Add(New Offline_Payment_Recovery_FlowDataTable(ds.Tables("Offline_Payment_Recovery_Flow")))
            End If
            If (Not (ds.Tables("Offline_Payment_Step_View1")) Is Nothing) Then
                MyBase.Tables.Add(New Offline_Payment_Step_View1DataTable(ds.Tables("Offline_Payment_Step_View1")))
            End If
            If (Not (ds.Tables("Offline_DvdAtHome")) Is Nothing) Then
                MyBase.Tables.Add(New Offline_DvdAtHomeDataTable(ds.Tables("Offline_DvdAtHome")))
            End If
            If (Not (ds.Tables("ogone_batch")) Is Nothing) Then
                MyBase.Tables.Add(New ogone_batchDataTable(ds.Tables("ogone_batch")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableEurofides = CType(MyBase.Tables("Eurofides"),EurofidesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEurofides) Is Nothing) Then
                Me.tableEurofides.InitVars
            End If
        End If
        Me.tablepayment_offline_request = CType(MyBase.Tables("payment_offline_request"),payment_offline_requestDataTable)
        If (initTable = true) Then
            If (Not (Me.tablepayment_offline_request) Is Nothing) Then
                Me.tablepayment_offline_request.InitVars
            End If
        End If
        Me.tableOgoneExp = CType(MyBase.Tables("OgoneExp"),OgoneExpDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOgoneExp) Is Nothing) Then
                Me.tableOgoneExp.InitVars
            End If
        End If
        Me.tablecustomers = CType(MyBase.Tables("customers"),customersDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustomers) Is Nothing) Then
                Me.tablecustomers.InitVars
            End If
        End If
        Me.tablecustomersView1 = CType(MyBase.Tables("customersView1"),customersView1DataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustomersView1) Is Nothing) Then
                Me.tablecustomersView1.InitVars
            End If
        End If
        Me.tablelanguages = CType(MyBase.Tables("languages"),languagesDataTable)
        If (initTable = true) Then
            If (Not (Me.tablelanguages) Is Nothing) Then
                Me.tablelanguages.InitVars
            End If
        End If
        Me.tablesite = CType(MyBase.Tables("site"),siteDataTable)
        If (initTable = true) Then
            If (Not (Me.tablesite) Is Nothing) Then
                Me.tablesite.InitVars
            End If
        End If
        Me.tablemail_messages = CType(MyBase.Tables("mail_messages"),mail_messagesDataTable)
        If (initTable = true) Then
            If (Not (Me.tablemail_messages) Is Nothing) Then
                Me.tablemail_messages.InitVars
            End If
        End If
        Me.tableOffline_Payment_Recovery_Flow = CType(MyBase.Tables("Offline_Payment_Recovery_Flow"),Offline_Payment_Recovery_FlowDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOffline_Payment_Recovery_Flow) Is Nothing) Then
                Me.tableOffline_Payment_Recovery_Flow.InitVars
            End If
        End If
        Me.tableOffline_Payment_Step_View1 = CType(MyBase.Tables("Offline_Payment_Step_View1"),Offline_Payment_Step_View1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableOffline_Payment_Step_View1) Is Nothing) Then
                Me.tableOffline_Payment_Step_View1.InitVars
            End If
        End If
        Me.tableOffline_DvdAtHome = CType(MyBase.Tables("Offline_DvdAtHome"),Offline_DvdAtHomeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOffline_DvdAtHome) Is Nothing) Then
                Me.tableOffline_DvdAtHome.InitVars
            End If
        End If
        Me.tableogone_batch = CType(MyBase.Tables("ogone_batch"),ogone_batchDataTable)
        If (initTable = true) Then
            If (Not (Me.tableogone_batch) Is Nothing) Then
                Me.tableogone_batch.InitVars
            End If
        End If
        Me.relationOffline_Payment_Step_View1_Offline_DvdAtHome = Me.Relations("Offline_Payment_Step_View1_Offline_DvdAtHome")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsCompta"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsCompta.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableEurofides = New EurofidesDataTable
        MyBase.Tables.Add(Me.tableEurofides)
        Me.tablepayment_offline_request = New payment_offline_requestDataTable
        MyBase.Tables.Add(Me.tablepayment_offline_request)
        Me.tableOgoneExp = New OgoneExpDataTable
        MyBase.Tables.Add(Me.tableOgoneExp)
        Me.tablecustomers = New customersDataTable
        MyBase.Tables.Add(Me.tablecustomers)
        Me.tablecustomersView1 = New customersView1DataTable
        MyBase.Tables.Add(Me.tablecustomersView1)
        Me.tablelanguages = New languagesDataTable
        MyBase.Tables.Add(Me.tablelanguages)
        Me.tablesite = New siteDataTable
        MyBase.Tables.Add(Me.tablesite)
        Me.tablemail_messages = New mail_messagesDataTable
        MyBase.Tables.Add(Me.tablemail_messages)
        Me.tableOffline_Payment_Recovery_Flow = New Offline_Payment_Recovery_FlowDataTable
        MyBase.Tables.Add(Me.tableOffline_Payment_Recovery_Flow)
        Me.tableOffline_Payment_Step_View1 = New Offline_Payment_Step_View1DataTable
        MyBase.Tables.Add(Me.tableOffline_Payment_Step_View1)
        Me.tableOffline_DvdAtHome = New Offline_DvdAtHomeDataTable
        MyBase.Tables.Add(Me.tableOffline_DvdAtHome)
        Me.tableogone_batch = New ogone_batchDataTable
        MyBase.Tables.Add(Me.tableogone_batch)
        Me.relationOffline_Payment_Step_View1_Offline_DvdAtHome = New Global.System.Data.DataRelation("Offline_Payment_Step_View1_Offline_DvdAtHome", New Global.System.Data.DataColumn() {Me.tableOffline_Payment_Step_View1.customers_idColumn}, New Global.System.Data.DataColumn() {Me.tableOffline_DvdAtHome.customers_idColumn}, false)
        Me.Relations.Add(Me.relationOffline_Payment_Step_View1_Offline_DvdAtHome)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeEurofides() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializepayment_offline_request() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeOgoneExp() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustomers() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustomersView1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializelanguages() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializesite() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializemail_messages() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeOffline_Payment_Recovery_Flow() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeOffline_Payment_Step_View1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeOffline_DvdAtHome() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeogone_batch() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsCompta = New dsCompta
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub EurofidesRowChangeEventHandler(ByVal sender As Object, ByVal e As EurofidesRowChangeEvent)
    
    Public Delegate Sub payment_offline_requestRowChangeEventHandler(ByVal sender As Object, ByVal e As payment_offline_requestRowChangeEvent)
    
    Public Delegate Sub OgoneExpRowChangeEventHandler(ByVal sender As Object, ByVal e As OgoneExpRowChangeEvent)
    
    Public Delegate Sub customersRowChangeEventHandler(ByVal sender As Object, ByVal e As customersRowChangeEvent)
    
    Public Delegate Sub customersView1RowChangeEventHandler(ByVal sender As Object, ByVal e As customersView1RowChangeEvent)
    
    Public Delegate Sub languagesRowChangeEventHandler(ByVal sender As Object, ByVal e As languagesRowChangeEvent)
    
    Public Delegate Sub siteRowChangeEventHandler(ByVal sender As Object, ByVal e As siteRowChangeEvent)
    
    Public Delegate Sub mail_messagesRowChangeEventHandler(ByVal sender As Object, ByVal e As mail_messagesRowChangeEvent)
    
    Public Delegate Sub Offline_Payment_Recovery_FlowRowChangeEventHandler(ByVal sender As Object, ByVal e As Offline_Payment_Recovery_FlowRowChangeEvent)
    
    Public Delegate Sub Offline_Payment_Step_View1RowChangeEventHandler(ByVal sender As Object, ByVal e As Offline_Payment_Step_View1RowChangeEvent)
    
    Public Delegate Sub Offline_DvdAtHomeRowChangeEventHandler(ByVal sender As Object, ByVal e As Offline_DvdAtHomeRowChangeEvent)
    
    Public Delegate Sub ogone_batchRowChangeEventHandler(ByVal sender As Object, ByVal e As ogone_batchRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EurofidesDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnDossier As Global.System.Data.DataColumn
        
        Private columnDebiteur As Global.System.Data.DataColumn
        
        Private columnNotreRef As Global.System.Data.DataColumn
        
        Private columnDateOuverture As Global.System.Data.DataColumn
        
        Private columnDu_Total As Global.System.Data.DataColumn
        
        Private columnDu_Principal As Global.System.Data.DataColumn
        
        Private columnDu_ClausePenale As Global.System.Data.DataColumn
        
        Private columnDu_Interet As Global.System.Data.DataColumn
        
        Private columnDu_FraisAdmin As Global.System.Data.DataColumn
        
        Private columnDu_FraisHuissier As Global.System.Data.DataColumn
        
        Private columnRecup_Total As Global.System.Data.DataColumn
        
        Private columnRecup_Principal As Global.System.Data.DataColumn
        
        Private columnRecup_ClausePenale As Global.System.Data.DataColumn
        
        Private columnRecup_Interet As Global.System.Data.DataColumn
        
        Private columnRecup_FraisAdmin As Global.System.Data.DataColumn
        
        Private columnRecup_FraisHuissier As Global.System.Data.DataColumn
        
        Private columnSolde_Du As Global.System.Data.DataColumn
        
        Private columnComment As Global.System.Data.DataColumn
        
        Private columnDateCloture As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnpayment_offline_request_id As Global.System.Data.DataColumn
        
        Private columnprocess_comment As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Eurofides"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DossierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDossier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DebiteurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDebiteur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NotreRefColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotreRef
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateOuvertureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOuverture
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Du_TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDu_Total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Du_PrincipalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDu_Principal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Du_ClausePenaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDu_ClausePenale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Du_InteretColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDu_Interet
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Du_FraisAdminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDu_FraisAdmin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Du_FraisHuissierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDu_FraisHuissier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Recup_TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecup_Total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Recup_PrincipalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecup_Principal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Recup_ClausePenaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecup_ClausePenale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Recup_InteretColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecup_Interet
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Recup_FraisAdminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecup_FraisAdmin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Recup_FraisHuissierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecup_FraisHuissier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Solde_DuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSolde_Du
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CommentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateClotureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateCloture
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payment_offline_request_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayment_offline_request_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property process_commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprocess_comment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EurofidesRow
            Get
                Return CType(Me.Rows(index),EurofidesRow)
            End Get
        End Property
        
        Public Event EurofidesRowChanging As EurofidesRowChangeEventHandler
        
        Public Event EurofidesRowChanged As EurofidesRowChangeEventHandler
        
        Public Event EurofidesRowDeleting As EurofidesRowChangeEventHandler
        
        Public Event EurofidesRowDeleted As EurofidesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddEurofidesRow(ByVal row As EurofidesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddEurofidesRow( _
                    ByVal Dossier As String,  _
                    ByVal Debiteur As String,  _
                    ByVal NotreRef As String,  _
                    ByVal DateOuverture As Date,  _
                    ByVal Du_Total As Decimal,  _
                    ByVal Du_Principal As Decimal,  _
                    ByVal Du_ClausePenale As Decimal,  _
                    ByVal Du_Interet As Decimal,  _
                    ByVal Du_FraisAdmin As Decimal,  _
                    ByVal Du_FraisHuissier As Decimal,  _
                    ByVal Recup_Total As Decimal,  _
                    ByVal Recup_Principal As Decimal,  _
                    ByVal Recup_ClausePenale As Decimal,  _
                    ByVal Recup_Interet As Decimal,  _
                    ByVal Recup_FraisAdmin As Decimal,  _
                    ByVal Recup_FraisHuissier As Decimal,  _
                    ByVal Solde_Du As Decimal,  _
                    ByVal Comment As String,  _
                    ByVal DateCloture As Date,  _
                    ByVal customers_id As Integer,  _
                    ByVal payment_offline_request_id As Integer,  _
                    ByVal process_comment As String) As EurofidesRow
            Dim rowEurofidesRow As EurofidesRow = CType(Me.NewRow,EurofidesRow)
            Dim columnValuesArray() As Object = New Object() {Dossier, Debiteur, NotreRef, DateOuverture, Du_Total, Du_Principal, Du_ClausePenale, Du_Interet, Du_FraisAdmin, Du_FraisHuissier, Recup_Total, Recup_Principal, Recup_ClausePenale, Recup_Interet, Recup_FraisAdmin, Recup_FraisHuissier, Solde_Du, Comment, DateCloture, customers_id, payment_offline_request_id, process_comment}
            rowEurofidesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEurofidesRow)
            Return rowEurofidesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EurofidesDataTable = CType(MyBase.Clone,EurofidesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EurofidesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnDossier = MyBase.Columns("Dossier")
            Me.columnDebiteur = MyBase.Columns("Debiteur")
            Me.columnNotreRef = MyBase.Columns("NotreRef")
            Me.columnDateOuverture = MyBase.Columns("DateOuverture")
            Me.columnDu_Total = MyBase.Columns("Du_Total")
            Me.columnDu_Principal = MyBase.Columns("Du_Principal")
            Me.columnDu_ClausePenale = MyBase.Columns("Du_ClausePenale")
            Me.columnDu_Interet = MyBase.Columns("Du_Interet")
            Me.columnDu_FraisAdmin = MyBase.Columns("Du_FraisAdmin")
            Me.columnDu_FraisHuissier = MyBase.Columns("Du_FraisHuissier")
            Me.columnRecup_Total = MyBase.Columns("Recup_Total")
            Me.columnRecup_Principal = MyBase.Columns("Recup_Principal")
            Me.columnRecup_ClausePenale = MyBase.Columns("Recup_ClausePenale")
            Me.columnRecup_Interet = MyBase.Columns("Recup_Interet")
            Me.columnRecup_FraisAdmin = MyBase.Columns("Recup_FraisAdmin")
            Me.columnRecup_FraisHuissier = MyBase.Columns("Recup_FraisHuissier")
            Me.columnSolde_Du = MyBase.Columns("Solde_Du")
            Me.columnComment = MyBase.Columns("Comment")
            Me.columnDateCloture = MyBase.Columns("DateCloture")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnpayment_offline_request_id = MyBase.Columns("payment_offline_request_id")
            Me.columnprocess_comment = MyBase.Columns("process_comment")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnDossier = New Global.System.Data.DataColumn("Dossier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDossier)
            Me.columnDebiteur = New Global.System.Data.DataColumn("Debiteur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDebiteur)
            Me.columnNotreRef = New Global.System.Data.DataColumn("NotreRef", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotreRef)
            Me.columnDateOuverture = New Global.System.Data.DataColumn("DateOuverture", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOuverture)
            Me.columnDu_Total = New Global.System.Data.DataColumn("Du_Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDu_Total)
            Me.columnDu_Principal = New Global.System.Data.DataColumn("Du_Principal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDu_Principal)
            Me.columnDu_ClausePenale = New Global.System.Data.DataColumn("Du_ClausePenale", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDu_ClausePenale)
            Me.columnDu_Interet = New Global.System.Data.DataColumn("Du_Interet", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDu_Interet)
            Me.columnDu_FraisAdmin = New Global.System.Data.DataColumn("Du_FraisAdmin", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDu_FraisAdmin)
            Me.columnDu_FraisHuissier = New Global.System.Data.DataColumn("Du_FraisHuissier", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDu_FraisHuissier)
            Me.columnRecup_Total = New Global.System.Data.DataColumn("Recup_Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecup_Total)
            Me.columnRecup_Principal = New Global.System.Data.DataColumn("Recup_Principal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecup_Principal)
            Me.columnRecup_ClausePenale = New Global.System.Data.DataColumn("Recup_ClausePenale", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecup_ClausePenale)
            Me.columnRecup_Interet = New Global.System.Data.DataColumn("Recup_Interet", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecup_Interet)
            Me.columnRecup_FraisAdmin = New Global.System.Data.DataColumn("Recup_FraisAdmin", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecup_FraisAdmin)
            Me.columnRecup_FraisHuissier = New Global.System.Data.DataColumn("Recup_FraisHuissier", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecup_FraisHuissier)
            Me.columnSolde_Du = New Global.System.Data.DataColumn("Solde_Du", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSolde_Du)
            Me.columnComment = New Global.System.Data.DataColumn("Comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComment)
            Me.columnDateCloture = New Global.System.Data.DataColumn("DateCloture", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateCloture)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnpayment_offline_request_id = New Global.System.Data.DataColumn("payment_offline_request_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayment_offline_request_id)
            Me.columnprocess_comment = New Global.System.Data.DataColumn("process_comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprocess_comment)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewEurofidesRow() As EurofidesRow
            Return CType(Me.NewRow,EurofidesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EurofidesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EurofidesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EurofidesRowChangedEvent) Is Nothing) Then
                RaiseEvent EurofidesRowChanged(Me, New EurofidesRowChangeEvent(CType(e.Row,EurofidesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EurofidesRowChangingEvent) Is Nothing) Then
                RaiseEvent EurofidesRowChanging(Me, New EurofidesRowChangeEvent(CType(e.Row,EurofidesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EurofidesRowDeletedEvent) Is Nothing) Then
                RaiseEvent EurofidesRowDeleted(Me, New EurofidesRowChangeEvent(CType(e.Row,EurofidesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EurofidesRowDeletingEvent) Is Nothing) Then
                RaiseEvent EurofidesRowDeleting(Me, New EurofidesRowChangeEvent(CType(e.Row,EurofidesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveEurofidesRow(ByVal row As EurofidesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCompta = New dsCompta
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EurofidesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class payment_offline_requestDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "payment_offline_request"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As payment_offline_requestRow
            Get
                Return CType(Me.Rows(index),payment_offline_requestRow)
            End Get
        End Property
        
        Public Event payment_offline_requestRowChanging As payment_offline_requestRowChangeEventHandler
        
        Public Event payment_offline_requestRowChanged As payment_offline_requestRowChangeEventHandler
        
        Public Event payment_offline_requestRowDeleting As payment_offline_requestRowChangeEventHandler
        
        Public Event payment_offline_requestRowDeleted As payment_offline_requestRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addpayment_offline_requestRow(ByVal row As payment_offline_requestRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addpayment_offline_requestRow() As payment_offline_requestRow
            Dim rowpayment_offline_requestRow As payment_offline_requestRow = CType(Me.NewRow,payment_offline_requestRow)
            Dim columnValuesArray(-1) As Object
            rowpayment_offline_requestRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowpayment_offline_requestRow)
            Return rowpayment_offline_requestRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As payment_offline_requestDataTable = CType(MyBase.Clone,payment_offline_requestDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New payment_offline_requestDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newpayment_offline_requestRow() As payment_offline_requestRow
            Return CType(Me.NewRow,payment_offline_requestRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New payment_offline_requestRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(payment_offline_requestRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.payment_offline_requestRowChangedEvent) Is Nothing) Then
                RaiseEvent payment_offline_requestRowChanged(Me, New payment_offline_requestRowChangeEvent(CType(e.Row,payment_offline_requestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.payment_offline_requestRowChangingEvent) Is Nothing) Then
                RaiseEvent payment_offline_requestRowChanging(Me, New payment_offline_requestRowChangeEvent(CType(e.Row,payment_offline_requestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.payment_offline_requestRowDeletedEvent) Is Nothing) Then
                RaiseEvent payment_offline_requestRowDeleted(Me, New payment_offline_requestRowChangeEvent(CType(e.Row,payment_offline_requestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.payment_offline_requestRowDeletingEvent) Is Nothing) Then
                RaiseEvent payment_offline_requestRowDeleting(Me, New payment_offline_requestRowChangeEvent(CType(e.Row,payment_offline_requestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removepayment_offline_requestRow(ByVal row As payment_offline_requestRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCompta = New dsCompta
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "payment_offline_requestDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OgoneExpDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncard_type As Global.System.Data.DataColumn
        
        Private columncard_no As Global.System.Data.DataColumn
        
        Private columnexpiration_date As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OgoneExp"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property card_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncard_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property card_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncard_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property expiration_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexpiration_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OgoneExpRow
            Get
                Return CType(Me.Rows(index),OgoneExpRow)
            End Get
        End Property
        
        Public Event OgoneExpRowChanging As OgoneExpRowChangeEventHandler
        
        Public Event OgoneExpRowChanged As OgoneExpRowChangeEventHandler
        
        Public Event OgoneExpRowDeleting As OgoneExpRowChangeEventHandler
        
        Public Event OgoneExpRowDeleted As OgoneExpRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddOgoneExpRow(ByVal row As OgoneExpRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddOgoneExpRow(ByVal customers_id As Integer, ByVal card_type As String, ByVal card_no As String, ByVal expiration_date As String) As OgoneExpRow
            Dim rowOgoneExpRow As OgoneExpRow = CType(Me.NewRow,OgoneExpRow)
            Dim columnValuesArray() As Object = New Object() {customers_id, card_type, card_no, expiration_date}
            rowOgoneExpRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOgoneExpRow)
            Return rowOgoneExpRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OgoneExpDataTable = CType(MyBase.Clone,OgoneExpDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OgoneExpDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncard_type = MyBase.Columns("card_type")
            Me.columncard_no = MyBase.Columns("card_no")
            Me.columnexpiration_date = MyBase.Columns("expiration_date")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncard_type = New Global.System.Data.DataColumn("card_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncard_type)
            Me.columncard_no = New Global.System.Data.DataColumn("card_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncard_no)
            Me.columnexpiration_date = New Global.System.Data.DataColumn("expiration_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexpiration_date)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewOgoneExpRow() As OgoneExpRow
            Return CType(Me.NewRow,OgoneExpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OgoneExpRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OgoneExpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OgoneExpRowChangedEvent) Is Nothing) Then
                RaiseEvent OgoneExpRowChanged(Me, New OgoneExpRowChangeEvent(CType(e.Row,OgoneExpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OgoneExpRowChangingEvent) Is Nothing) Then
                RaiseEvent OgoneExpRowChanging(Me, New OgoneExpRowChangeEvent(CType(e.Row,OgoneExpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OgoneExpRowDeletedEvent) Is Nothing) Then
                RaiseEvent OgoneExpRowDeleted(Me, New OgoneExpRowChangeEvent(CType(e.Row,OgoneExpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OgoneExpRowDeletingEvent) Is Nothing) Then
                RaiseEvent OgoneExpRowDeleting(Me, New OgoneExpRowChangeEvent(CType(e.Row,OgoneExpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveOgoneExpRow(ByVal row As OgoneExpRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCompta = New dsCompta
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OgoneExpDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class customersDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_gender As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_dob As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_default_address_id As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columncustomers_telephone_evening As Global.System.Data.DataColumn
        
        Private columncustomers_fax As Global.System.Data.DataColumn
        
        Private columncustomers_password As Global.System.Data.DataColumn
        
        Private columncustomers_newsletter As Global.System.Data.DataColumn
        
        Private columncustomers_newsletterpartner As Global.System.Data.DataColumn
        
        Private columncustomers_privilege As Global.System.Data.DataColumn
        
        Private columncustomers_privilege_balance As Global.System.Data.DataColumn
        
        Private columncustomers_garantie As Global.System.Data.DataColumn
        
        Private columnsponsoring_code As Global.System.Data.DataColumn
        
        Private columnsponsored_code As Global.System.Data.DataColumn
        
        Private columncustomers_abo As Global.System.Data.DataColumn
        
        Private columncustomers_abo_suspended As Global.System.Data.DataColumn
        
        Private columncustomers_abo_type As Global.System.Data.DataColumn
        
        Private columnflagminiat1995 As Global.System.Data.DataColumn
        
        Private columncustomers_abo_method As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_adult As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_adult As Global.System.Data.DataColumn
        
        Private columnthrottling As Global.System.Data.DataColumn
        
        Private columncustomers_abo_validityto As Global.System.Data.DataColumn
        
        Private columncustomers_abo_rank As Global.System.Data.DataColumn
        
        Private columncustomers_abo_start_rentthismonth As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_credit As Global.System.Data.DataColumn
        
        Private columncustomers_abo_multishipment As Global.System.Data.DataColumn
        
        Private columncustomers_abo_discount_recurring_to_date As Global.System.Data.DataColumn
        
        Private columnabotested As Global.System.Data.DataColumn
        
        Private columncustomers_abo_status As Global.System.Data.DataColumn
        
        Private columncustomers_abo_payment_method As Global.System.Data.DataColumn
        
        Private columndomiciliation_status As Global.System.Data.DataColumn
        
        Private columndomiciliation_debiter_name As Global.System.Data.DataColumn
        
        Private columndomiciliation_number As Global.System.Data.DataColumn
        
        Private columndomiciliation_account_number As Global.System.Data.DataColumn
        
        Private columnadult_pwd As Global.System.Data.DataColumn
        
        Private columnogone_card_type As Global.System.Data.DataColumn
        
        Private columnogone_card_no As Global.System.Data.DataColumn
        
        Private columnogone_exp_date As Global.System.Data.DataColumn
        
        Private columnogone_owner As Global.System.Data.DataColumn
        
        Private columnogone_cc_expiration_status As Global.System.Data.DataColumn
        
        Private columnoffline_payment_status As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columnvip As Global.System.Data.DataColumn
        
        Private columnblack_listed As Global.System.Data.DataColumn
        
        Private columnred_listed As Global.System.Data.DataColumn
        
        Private columnsm_eligible As Global.System.Data.DataColumn
        
        Private columncustomers_enquiry_id As Global.System.Data.DataColumn
        
        Private columndate_first_delivery As Global.System.Data.DataColumn
        
        Private columnmail_wl_adult_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmail_wl_norm_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmgm_points As Global.System.Data.DataColumn
        
        Private columnwishlist_kind As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_of_last_logon As Global.System.Data.DataColumn
        
        Private columncustomers_info_number_of_logons As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_account_created As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_account_last_modified As Global.System.Data.DataColumn
        
        Private columnglobal_product_notifications As Global.System.Data.DataColumn
        
        Private columncustomers_language As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        Private columnpartners_id As Global.System.Data.DataColumn
        
        Private columnbelgiqueloisirs_id As Global.System.Data.DataColumn
        
        Private columnselected_for_email As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "customers"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_dob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_default_address_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_default_address_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephone_eveningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone_evening
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_fax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterpartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletterpartner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilegeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilege_balanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege_balance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_garantieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_garantie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsoring_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsoring_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsored_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsored_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_suspendedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_suspended
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property flagminiat1995Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnflagminiat1995
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property throttlingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnthrottling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_rankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_rank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_start_rentthismonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_start_rentthismonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_creditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_credit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_multishipmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_multishipment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_discount_recurring_to_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_discount_recurring_to_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abotestedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabotested
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_payment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_debiter_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_debiter_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_account_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_account_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property adult_pwdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadult_pwd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_exp_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_exp_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_cc_expiration_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_cc_expiration_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property offline_payment_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoffline_payment_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property black_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnblack_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property red_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnred_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sm_eligibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsm_eligible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_enquiry_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_enquiry_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_first_deliveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_first_delivery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_adult_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_adult_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_norm_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_norm_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mgm_pointsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmgm_points
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wishlist_kindColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwishlist_kind
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_of_last_logonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_of_last_logon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_number_of_logonsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_number_of_logons
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_account_createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_account_created
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_account_last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_account_last_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property global_product_notificationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnglobal_product_notifications
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property partners_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartners_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property belgiqueloisirs_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbelgiqueloisirs_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property selected_for_emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnselected_for_email
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As customersRow
            Get
                Return CType(Me.Rows(index),customersRow)
            End Get
        End Property
        
        Public Event customersRowChanging As customersRowChangeEventHandler
        
        Public Event customersRowChanged As customersRowChangeEventHandler
        
        Public Event customersRowDeleting As customersRowChangeEventHandler
        
        Public Event customersRowDeleted As customersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddcustomersRow(ByVal row As customersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddcustomersRow( _
                    ByVal customers_gender As String,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_lastname As String,  _
                    ByVal customers_dob As Date,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_default_address_id As Integer,  _
                    ByVal customers_telephone As String,  _
                    ByVal customers_telephone_evening As String,  _
                    ByVal customers_fax As String,  _
                    ByVal customers_password As String,  _
                    ByVal customers_newsletter As String,  _
                    ByVal customers_newsletterpartner As String,  _
                    ByVal customers_privilege As Integer,  _
                    ByVal customers_privilege_balance As Decimal,  _
                    ByVal customers_garantie As Integer,  _
                    ByVal sponsoring_code As String,  _
                    ByVal sponsored_code As String,  _
                    ByVal customers_abo As Integer,  _
                    ByVal customers_abo_suspended As Integer,  _
                    ByVal customers_abo_type As Integer,  _
                    ByVal flagminiat1995 As Integer,  _
                    ByVal customers_abo_method As Integer,  _
                    ByVal customers_abo_dvd_norm As Integer,  _
                    ByVal customers_abo_dvd_adult As Integer,  _
                    ByVal customers_abo_dvd_home_norm As Integer,  _
                    ByVal customers_abo_dvd_home_adult As Integer,  _
                    ByVal throttling As Integer,  _
                    ByVal customers_abo_validityto As Date,  _
                    ByVal customers_abo_rank As Integer,  _
                    ByVal customers_abo_start_rentthismonth As Integer,  _
                    ByVal customers_abo_dvd_credit As Integer,  _
                    ByVal customers_abo_multishipment As Integer,  _
                    ByVal customers_abo_discount_recurring_to_date As Date,  _
                    ByVal abotested As Integer,  _
                    ByVal customers_abo_status As Integer,  _
                    ByVal customers_abo_payment_method As Integer,  _
                    ByVal domiciliation_status As Integer,  _
                    ByVal domiciliation_debiter_name As String,  _
                    ByVal domiciliation_number As String,  _
                    ByVal domiciliation_account_number As String,  _
                    ByVal adult_pwd As String,  _
                    ByVal ogone_card_type As String,  _
                    ByVal ogone_card_no As String,  _
                    ByVal ogone_exp_date As String,  _
                    ByVal ogone_owner As String,  _
                    ByVal ogone_cc_expiration_status As Integer,  _
                    ByVal offline_payment_status As Integer,  _
                    ByVal comment As String,  _
                    ByVal vip As Integer,  _
                    ByVal black_listed As Integer,  _
                    ByVal red_listed As Integer,  _
                    ByVal sm_eligible As Integer,  _
                    ByVal customers_enquiry_id As Integer,  _
                    ByVal date_first_delivery As Date,  _
                    ByVal mail_wl_adult_not_sufficient As Date,  _
                    ByVal mail_wl_norm_not_sufficient As Date,  _
                    ByVal mgm_points As Integer,  _
                    ByVal wishlist_kind As Integer,  _
                    ByVal customers_info_date_of_last_logon As Date,  _
                    ByVal customers_info_number_of_logons As Integer,  _
                    ByVal customers_info_date_account_created As Date,  _
                    ByVal customers_info_date_account_last_modified As Date,  _
                    ByVal global_product_notifications As Integer,  _
                    ByVal customers_language As Integer,  _
                    ByVal site As String,  _
                    ByVal partners_id As Integer,  _
                    ByVal belgiqueloisirs_id As String,  _
                    ByVal selected_for_email As String) As customersRow
            Dim rowcustomersRow As customersRow = CType(Me.NewRow,customersRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customers_gender, customers_firstname, customers_lastname, customers_dob, customers_email_address, customers_default_address_id, customers_telephone, customers_telephone_evening, customers_fax, customers_password, customers_newsletter, customers_newsletterpartner, customers_privilege, customers_privilege_balance, customers_garantie, sponsoring_code, sponsored_code, customers_abo, customers_abo_suspended, customers_abo_type, flagminiat1995, customers_abo_method, customers_abo_dvd_norm, customers_abo_dvd_adult, customers_abo_dvd_home_norm, customers_abo_dvd_home_adult, throttling, customers_abo_validityto, customers_abo_rank, customers_abo_start_rentthismonth, customers_abo_dvd_credit, customers_abo_multishipment, customers_abo_discount_recurring_to_date, abotested, customers_abo_status, customers_abo_payment_method, domiciliation_status, domiciliation_debiter_name, domiciliation_number, domiciliation_account_number, adult_pwd, ogone_card_type, ogone_card_no, ogone_exp_date, ogone_owner, ogone_cc_expiration_status, offline_payment_status, comment, vip, black_listed, red_listed, sm_eligible, customers_enquiry_id, date_first_delivery, mail_wl_adult_not_sufficient, mail_wl_norm_not_sufficient, mgm_points, wishlist_kind, customers_info_date_of_last_logon, customers_info_number_of_logons, customers_info_date_account_created, customers_info_date_account_last_modified, global_product_notifications, customers_language, site, partners_id, belgiqueloisirs_id, selected_for_email}
            rowcustomersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustomersRow)
            Return rowcustomersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycustomers_id(ByVal customers_id As Integer) As customersRow
            Return CType(Me.Rows.Find(New Object() {customers_id}),customersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As customersDataTable = CType(MyBase.Clone,customersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New customersDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_gender = MyBase.Columns("customers_gender")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_dob = MyBase.Columns("customers_dob")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_default_address_id = MyBase.Columns("customers_default_address_id")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columncustomers_telephone_evening = MyBase.Columns("customers_telephone_evening")
            Me.columncustomers_fax = MyBase.Columns("customers_fax")
            Me.columncustomers_password = MyBase.Columns("customers_password")
            Me.columncustomers_newsletter = MyBase.Columns("customers_newsletter")
            Me.columncustomers_newsletterpartner = MyBase.Columns("customers_newsletterpartner")
            Me.columncustomers_privilege = MyBase.Columns("customers_privilege")
            Me.columncustomers_privilege_balance = MyBase.Columns("customers_privilege_balance")
            Me.columncustomers_garantie = MyBase.Columns("customers_garantie")
            Me.columnsponsoring_code = MyBase.Columns("sponsoring_code")
            Me.columnsponsored_code = MyBase.Columns("sponsored_code")
            Me.columncustomers_abo = MyBase.Columns("customers_abo")
            Me.columncustomers_abo_suspended = MyBase.Columns("customers_abo_suspended")
            Me.columncustomers_abo_type = MyBase.Columns("customers_abo_type")
            Me.columnflagminiat1995 = MyBase.Columns("flagminiat1995")
            Me.columncustomers_abo_method = MyBase.Columns("customers_abo_method")
            Me.columncustomers_abo_dvd_norm = MyBase.Columns("customers_abo_dvd_norm")
            Me.columncustomers_abo_dvd_adult = MyBase.Columns("customers_abo_dvd_adult")
            Me.columncustomers_abo_dvd_home_norm = MyBase.Columns("customers_abo_dvd_home_norm")
            Me.columncustomers_abo_dvd_home_adult = MyBase.Columns("customers_abo_dvd_home_adult")
            Me.columnthrottling = MyBase.Columns("throttling")
            Me.columncustomers_abo_validityto = MyBase.Columns("customers_abo_validityto")
            Me.columncustomers_abo_rank = MyBase.Columns("customers_abo_rank")
            Me.columncustomers_abo_start_rentthismonth = MyBase.Columns("customers_abo_start_rentthismonth")
            Me.columncustomers_abo_dvd_credit = MyBase.Columns("customers_abo_dvd_credit")
            Me.columncustomers_abo_multishipment = MyBase.Columns("customers_abo_multishipment")
            Me.columncustomers_abo_discount_recurring_to_date = MyBase.Columns("customers_abo_discount_recurring_to_date")
            Me.columnabotested = MyBase.Columns("abotested")
            Me.columncustomers_abo_status = MyBase.Columns("customers_abo_status")
            Me.columncustomers_abo_payment_method = MyBase.Columns("customers_abo_payment_method")
            Me.columndomiciliation_status = MyBase.Columns("domiciliation_status")
            Me.columndomiciliation_debiter_name = MyBase.Columns("domiciliation_debiter_name")
            Me.columndomiciliation_number = MyBase.Columns("domiciliation_number")
            Me.columndomiciliation_account_number = MyBase.Columns("domiciliation_account_number")
            Me.columnadult_pwd = MyBase.Columns("adult_pwd")
            Me.columnogone_card_type = MyBase.Columns("ogone_card_type")
            Me.columnogone_card_no = MyBase.Columns("ogone_card_no")
            Me.columnogone_exp_date = MyBase.Columns("ogone_exp_date")
            Me.columnogone_owner = MyBase.Columns("ogone_owner")
            Me.columnogone_cc_expiration_status = MyBase.Columns("ogone_cc_expiration_status")
            Me.columnoffline_payment_status = MyBase.Columns("offline_payment_status")
            Me.columncomment = MyBase.Columns("comment")
            Me.columnvip = MyBase.Columns("vip")
            Me.columnblack_listed = MyBase.Columns("black_listed")
            Me.columnred_listed = MyBase.Columns("red_listed")
            Me.columnsm_eligible = MyBase.Columns("sm_eligible")
            Me.columncustomers_enquiry_id = MyBase.Columns("customers_enquiry_id")
            Me.columndate_first_delivery = MyBase.Columns("date_first_delivery")
            Me.columnmail_wl_adult_not_sufficient = MyBase.Columns("mail_wl_adult_not_sufficient")
            Me.columnmail_wl_norm_not_sufficient = MyBase.Columns("mail_wl_norm_not_sufficient")
            Me.columnmgm_points = MyBase.Columns("mgm_points")
            Me.columnwishlist_kind = MyBase.Columns("wishlist_kind")
            Me.columncustomers_info_date_of_last_logon = MyBase.Columns("customers_info_date_of_last_logon")
            Me.columncustomers_info_number_of_logons = MyBase.Columns("customers_info_number_of_logons")
            Me.columncustomers_info_date_account_created = MyBase.Columns("customers_info_date_account_created")
            Me.columncustomers_info_date_account_last_modified = MyBase.Columns("customers_info_date_account_last_modified")
            Me.columnglobal_product_notifications = MyBase.Columns("global_product_notifications")
            Me.columncustomers_language = MyBase.Columns("customers_language")
            Me.columnsite = MyBase.Columns("site")
            Me.columnpartners_id = MyBase.Columns("partners_id")
            Me.columnbelgiqueloisirs_id = MyBase.Columns("belgiqueloisirs_id")
            Me.columnselected_for_email = MyBase.Columns("selected_for_email")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_gender = New Global.System.Data.DataColumn("customers_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_gender)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_dob = New Global.System.Data.DataColumn("customers_dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_dob)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_default_address_id = New Global.System.Data.DataColumn("customers_default_address_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_default_address_id)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columncustomers_telephone_evening = New Global.System.Data.DataColumn("customers_telephone_evening", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone_evening)
            Me.columncustomers_fax = New Global.System.Data.DataColumn("customers_fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_fax)
            Me.columncustomers_password = New Global.System.Data.DataColumn("customers_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_password)
            Me.columncustomers_newsletter = New Global.System.Data.DataColumn("customers_newsletter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletter)
            Me.columncustomers_newsletterpartner = New Global.System.Data.DataColumn("customers_newsletterpartner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletterpartner)
            Me.columncustomers_privilege = New Global.System.Data.DataColumn("customers_privilege", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege)
            Me.columncustomers_privilege_balance = New Global.System.Data.DataColumn("customers_privilege_balance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege_balance)
            Me.columncustomers_garantie = New Global.System.Data.DataColumn("customers_garantie", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_garantie)
            Me.columnsponsoring_code = New Global.System.Data.DataColumn("sponsoring_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsoring_code)
            Me.columnsponsored_code = New Global.System.Data.DataColumn("sponsored_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsored_code)
            Me.columncustomers_abo = New Global.System.Data.DataColumn("customers_abo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo)
            Me.columncustomers_abo_suspended = New Global.System.Data.DataColumn("customers_abo_suspended", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_suspended)
            Me.columncustomers_abo_type = New Global.System.Data.DataColumn("customers_abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_type)
            Me.columnflagminiat1995 = New Global.System.Data.DataColumn("flagminiat1995", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnflagminiat1995)
            Me.columncustomers_abo_method = New Global.System.Data.DataColumn("customers_abo_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_method)
            Me.columncustomers_abo_dvd_norm = New Global.System.Data.DataColumn("customers_abo_dvd_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_norm)
            Me.columncustomers_abo_dvd_adult = New Global.System.Data.DataColumn("customers_abo_dvd_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_adult)
            Me.columncustomers_abo_dvd_home_norm = New Global.System.Data.DataColumn("customers_abo_dvd_home_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_norm)
            Me.columncustomers_abo_dvd_home_adult = New Global.System.Data.DataColumn("customers_abo_dvd_home_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_adult)
            Me.columnthrottling = New Global.System.Data.DataColumn("throttling", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnthrottling)
            Me.columncustomers_abo_validityto = New Global.System.Data.DataColumn("customers_abo_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_validityto)
            Me.columncustomers_abo_rank = New Global.System.Data.DataColumn("customers_abo_rank", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_rank)
            Me.columncustomers_abo_start_rentthismonth = New Global.System.Data.DataColumn("customers_abo_start_rentthismonth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_start_rentthismonth)
            Me.columncustomers_abo_dvd_credit = New Global.System.Data.DataColumn("customers_abo_dvd_credit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_credit)
            Me.columncustomers_abo_multishipment = New Global.System.Data.DataColumn("customers_abo_multishipment", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_multishipment)
            Me.columncustomers_abo_discount_recurring_to_date = New Global.System.Data.DataColumn("customers_abo_discount_recurring_to_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_discount_recurring_to_date)
            Me.columnabotested = New Global.System.Data.DataColumn("abotested", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabotested)
            Me.columncustomers_abo_status = New Global.System.Data.DataColumn("customers_abo_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_status)
            Me.columncustomers_abo_payment_method = New Global.System.Data.DataColumn("customers_abo_payment_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_payment_method)
            Me.columndomiciliation_status = New Global.System.Data.DataColumn("domiciliation_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_status)
            Me.columndomiciliation_debiter_name = New Global.System.Data.DataColumn("domiciliation_debiter_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_debiter_name)
            Me.columndomiciliation_number = New Global.System.Data.DataColumn("domiciliation_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_number)
            Me.columndomiciliation_account_number = New Global.System.Data.DataColumn("domiciliation_account_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_account_number)
            Me.columnadult_pwd = New Global.System.Data.DataColumn("adult_pwd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadult_pwd)
            Me.columnogone_card_type = New Global.System.Data.DataColumn("ogone_card_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_type)
            Me.columnogone_card_no = New Global.System.Data.DataColumn("ogone_card_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_no)
            Me.columnogone_exp_date = New Global.System.Data.DataColumn("ogone_exp_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_exp_date)
            Me.columnogone_owner = New Global.System.Data.DataColumn("ogone_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_owner)
            Me.columnogone_cc_expiration_status = New Global.System.Data.DataColumn("ogone_cc_expiration_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_cc_expiration_status)
            Me.columnoffline_payment_status = New Global.System.Data.DataColumn("offline_payment_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoffline_payment_status)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnvip = New Global.System.Data.DataColumn("vip", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvip)
            Me.columnblack_listed = New Global.System.Data.DataColumn("black_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblack_listed)
            Me.columnred_listed = New Global.System.Data.DataColumn("red_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnred_listed)
            Me.columnsm_eligible = New Global.System.Data.DataColumn("sm_eligible", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsm_eligible)
            Me.columncustomers_enquiry_id = New Global.System.Data.DataColumn("customers_enquiry_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_enquiry_id)
            Me.columndate_first_delivery = New Global.System.Data.DataColumn("date_first_delivery", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_first_delivery)
            Me.columnmail_wl_adult_not_sufficient = New Global.System.Data.DataColumn("mail_wl_adult_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_adult_not_sufficient)
            Me.columnmail_wl_norm_not_sufficient = New Global.System.Data.DataColumn("mail_wl_norm_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_norm_not_sufficient)
            Me.columnmgm_points = New Global.System.Data.DataColumn("mgm_points", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmgm_points)
            Me.columnwishlist_kind = New Global.System.Data.DataColumn("wishlist_kind", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwishlist_kind)
            Me.columncustomers_info_date_of_last_logon = New Global.System.Data.DataColumn("customers_info_date_of_last_logon", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_of_last_logon)
            Me.columncustomers_info_number_of_logons = New Global.System.Data.DataColumn("customers_info_number_of_logons", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_number_of_logons)
            Me.columncustomers_info_date_account_created = New Global.System.Data.DataColumn("customers_info_date_account_created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_account_created)
            Me.columncustomers_info_date_account_last_modified = New Global.System.Data.DataColumn("customers_info_date_account_last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_account_last_modified)
            Me.columnglobal_product_notifications = New Global.System.Data.DataColumn("global_product_notifications", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnglobal_product_notifications)
            Me.columncustomers_language = New Global.System.Data.DataColumn("customers_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_language)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.columnpartners_id = New Global.System.Data.DataColumn("partners_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartners_id)
            Me.columnbelgiqueloisirs_id = New Global.System.Data.DataColumn("belgiqueloisirs_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbelgiqueloisirs_id)
            Me.columnselected_for_email = New Global.System.Data.DataColumn("selected_for_email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnselected_for_email)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey1", New Global.System.Data.DataColumn() {Me.columncustomers_id}, true))
            Me.columncustomers_id.AutoIncrement = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_id.ReadOnly = true
            Me.columncustomers_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewcustomersRow() As customersRow
            Return CType(Me.NewRow,customersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New customersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(customersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.customersRowChangedEvent) Is Nothing) Then
                RaiseEvent customersRowChanged(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.customersRowChangingEvent) Is Nothing) Then
                RaiseEvent customersRowChanging(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.customersRowDeletedEvent) Is Nothing) Then
                RaiseEvent customersRowDeleted(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.customersRowDeletingEvent) Is Nothing) Then
                RaiseEvent customersRowDeleting(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovecustomersRow(ByVal row As customersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCompta = New dsCompta
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "customersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class customersView1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_gender As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_dob As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_default_address_id As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columncustomers_telephone_evening As Global.System.Data.DataColumn
        
        Private columncustomers_fax As Global.System.Data.DataColumn
        
        Private columncustomers_password As Global.System.Data.DataColumn
        
        Private columncustomers_newsletter As Global.System.Data.DataColumn
        
        Private columncustomers_newsletterpartner As Global.System.Data.DataColumn
        
        Private columncustomers_privilege As Global.System.Data.DataColumn
        
        Private columncustomers_privilege_balance As Global.System.Data.DataColumn
        
        Private columncustomers_garantie As Global.System.Data.DataColumn
        
        Private columnsponsoring_code As Global.System.Data.DataColumn
        
        Private columnsponsored_code As Global.System.Data.DataColumn
        
        Private columncustomers_abo As Global.System.Data.DataColumn
        
        Private columncustomers_abo_suspended As Global.System.Data.DataColumn
        
        Private columncustomers_abo_type As Global.System.Data.DataColumn
        
        Private columnflagminiat1995 As Global.System.Data.DataColumn
        
        Private columncustomers_abo_method As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_adult As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_adult As Global.System.Data.DataColumn
        
        Private columnthrottling As Global.System.Data.DataColumn
        
        Private columncustomers_abo_validityto As Global.System.Data.DataColumn
        
        Private columncustomers_abo_rank As Global.System.Data.DataColumn
        
        Private columncustomers_abo_start_rentthismonth As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_credit As Global.System.Data.DataColumn
        
        Private columncustomers_abo_multishipment As Global.System.Data.DataColumn
        
        Private columncustomers_abo_discount_recurring_to_date As Global.System.Data.DataColumn
        
        Private columnabotested As Global.System.Data.DataColumn
        
        Private columncustomers_abo_status As Global.System.Data.DataColumn
        
        Private columncustomers_abo_payment_method As Global.System.Data.DataColumn
        
        Private columndomiciliation_status As Global.System.Data.DataColumn
        
        Private columndomiciliation_debiter_name As Global.System.Data.DataColumn
        
        Private columndomiciliation_number As Global.System.Data.DataColumn
        
        Private columndomiciliation_account_number As Global.System.Data.DataColumn
        
        Private columnadult_pwd As Global.System.Data.DataColumn
        
        Private columnogone_card_type As Global.System.Data.DataColumn
        
        Private columnogone_card_no As Global.System.Data.DataColumn
        
        Private columnogone_exp_date As Global.System.Data.DataColumn
        
        Private columnogone_owner As Global.System.Data.DataColumn
        
        Private columnogone_cc_expiration_status As Global.System.Data.DataColumn
        
        Private columnoffline_payment_status As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columnvip As Global.System.Data.DataColumn
        
        Private columnblack_listed As Global.System.Data.DataColumn
        
        Private columnred_listed As Global.System.Data.DataColumn
        
        Private columnsm_eligible As Global.System.Data.DataColumn
        
        Private columncustomers_enquiry_id As Global.System.Data.DataColumn
        
        Private columndate_first_delivery As Global.System.Data.DataColumn
        
        Private columnmail_wl_adult_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmail_wl_norm_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmgm_points As Global.System.Data.DataColumn
        
        Private columnwishlist_kind As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_of_last_logon As Global.System.Data.DataColumn
        
        Private columncustomers_info_number_of_logons As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_account_created As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_account_last_modified As Global.System.Data.DataColumn
        
        Private columnglobal_product_notifications As Global.System.Data.DataColumn
        
        Private columncustomers_language As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        Private columnpartners_id As Global.System.Data.DataColumn
        
        Private columnbelgiqueloisirs_id As Global.System.Data.DataColumn
        
        Private columnselected_for_email As Global.System.Data.DataColumn
        
        Private columnaddress_book_id As Global.System.Data.DataColumn
        
        Private columnentry_gender As Global.System.Data.DataColumn
        
        Private columnentry_company As Global.System.Data.DataColumn
        
        Private columnentry_firstname As Global.System.Data.DataColumn
        
        Private columnentry_lastname As Global.System.Data.DataColumn
        
        Private columnentry_street_address As Global.System.Data.DataColumn
        
        Private columnentry_suburb As Global.System.Data.DataColumn
        
        Private columnentry_postcode As Global.System.Data.DataColumn
        
        Private columnentry_city As Global.System.Data.DataColumn
        
        Private columnentry_state As Global.System.Data.DataColumn
        
        Private columnentry_country_id As Global.System.Data.DataColumn
        
        Private columnentry_zone_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "customersView1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_dob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_default_address_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_default_address_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephone_eveningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone_evening
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_fax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterpartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletterpartner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilegeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilege_balanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege_balance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_garantieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_garantie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsoring_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsoring_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsored_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsored_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_suspendedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_suspended
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property flagminiat1995Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnflagminiat1995
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property throttlingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnthrottling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_rankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_rank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_start_rentthismonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_start_rentthismonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_creditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_credit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_multishipmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_multishipment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_discount_recurring_to_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_discount_recurring_to_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abotestedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabotested
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_payment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_debiter_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_debiter_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_account_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_account_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property adult_pwdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadult_pwd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_exp_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_exp_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_cc_expiration_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_cc_expiration_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property offline_payment_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoffline_payment_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property black_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnblack_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property red_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnred_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sm_eligibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsm_eligible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_enquiry_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_enquiry_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_first_deliveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_first_delivery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_adult_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_adult_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_norm_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_norm_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mgm_pointsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmgm_points
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wishlist_kindColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwishlist_kind
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_of_last_logonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_of_last_logon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_number_of_logonsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_number_of_logons
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_account_createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_account_created
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_account_last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_account_last_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property global_product_notificationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnglobal_product_notifications
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property partners_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartners_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property belgiqueloisirs_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbelgiqueloisirs_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property selected_for_emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnselected_for_email
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property address_book_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress_book_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_companyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_street_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_street_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_suburbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_suburb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_state
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_country_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_country_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_zone_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_zone_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As customersView1Row
            Get
                Return CType(Me.Rows(index),customersView1Row)
            End Get
        End Property
        
        Public Event customersView1RowChanging As customersView1RowChangeEventHandler
        
        Public Event customersView1RowChanged As customersView1RowChangeEventHandler
        
        Public Event customersView1RowDeleting As customersView1RowChangeEventHandler
        
        Public Event customersView1RowDeleted As customersView1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddcustomersView1Row(ByVal row As customersView1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddcustomersView1Row( _
                    ByVal customers_gender As String,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_lastname As String,  _
                    ByVal customers_dob As Date,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_default_address_id As Integer,  _
                    ByVal customers_telephone As String,  _
                    ByVal customers_telephone_evening As String,  _
                    ByVal customers_fax As String,  _
                    ByVal customers_password As String,  _
                    ByVal customers_newsletter As String,  _
                    ByVal customers_newsletterpartner As String,  _
                    ByVal customers_privilege As Integer,  _
                    ByVal customers_privilege_balance As Decimal,  _
                    ByVal customers_garantie As Integer,  _
                    ByVal sponsoring_code As String,  _
                    ByVal sponsored_code As String,  _
                    ByVal customers_abo As Integer,  _
                    ByVal customers_abo_suspended As Integer,  _
                    ByVal customers_abo_type As Integer,  _
                    ByVal flagminiat1995 As Integer,  _
                    ByVal customers_abo_method As Integer,  _
                    ByVal customers_abo_dvd_norm As Integer,  _
                    ByVal customers_abo_dvd_adult As Integer,  _
                    ByVal customers_abo_dvd_home_norm As Integer,  _
                    ByVal customers_abo_dvd_home_adult As Integer,  _
                    ByVal throttling As Integer,  _
                    ByVal customers_abo_validityto As Date,  _
                    ByVal customers_abo_rank As Integer,  _
                    ByVal customers_abo_start_rentthismonth As Integer,  _
                    ByVal customers_abo_dvd_credit As Integer,  _
                    ByVal customers_abo_multishipment As Integer,  _
                    ByVal customers_abo_discount_recurring_to_date As Date,  _
                    ByVal abotested As Integer,  _
                    ByVal customers_abo_status As Integer,  _
                    ByVal customers_abo_payment_method As Integer,  _
                    ByVal domiciliation_status As Integer,  _
                    ByVal domiciliation_debiter_name As String,  _
                    ByVal domiciliation_number As String,  _
                    ByVal domiciliation_account_number As String,  _
                    ByVal adult_pwd As String,  _
                    ByVal ogone_card_type As String,  _
                    ByVal ogone_card_no As String,  _
                    ByVal ogone_exp_date As String,  _
                    ByVal ogone_owner As String,  _
                    ByVal ogone_cc_expiration_status As Integer,  _
                    ByVal offline_payment_status As Integer,  _
                    ByVal comment As String,  _
                    ByVal vip As Integer,  _
                    ByVal black_listed As Integer,  _
                    ByVal red_listed As Integer,  _
                    ByVal sm_eligible As Integer,  _
                    ByVal customers_enquiry_id As Integer,  _
                    ByVal date_first_delivery As Date,  _
                    ByVal mail_wl_adult_not_sufficient As Date,  _
                    ByVal mail_wl_norm_not_sufficient As Date,  _
                    ByVal mgm_points As Integer,  _
                    ByVal wishlist_kind As Integer,  _
                    ByVal customers_info_date_of_last_logon As Date,  _
                    ByVal customers_info_number_of_logons As Integer,  _
                    ByVal customers_info_date_account_created As Date,  _
                    ByVal customers_info_date_account_last_modified As Date,  _
                    ByVal global_product_notifications As Integer,  _
                    ByVal customers_language As Integer,  _
                    ByVal site As String,  _
                    ByVal partners_id As Integer,  _
                    ByVal belgiqueloisirs_id As String,  _
                    ByVal selected_for_email As String,  _
                    ByVal address_book_id As Integer,  _
                    ByVal entry_gender As String,  _
                    ByVal entry_company As String,  _
                    ByVal entry_firstname As String,  _
                    ByVal entry_lastname As String,  _
                    ByVal entry_street_address As String,  _
                    ByVal entry_suburb As String,  _
                    ByVal entry_postcode As String,  _
                    ByVal entry_city As String,  _
                    ByVal entry_state As String,  _
                    ByVal entry_country_id As Integer,  _
                    ByVal entry_zone_id As Integer) As customersView1Row
            Dim rowcustomersView1Row As customersView1Row = CType(Me.NewRow,customersView1Row)
            Dim columnValuesArray() As Object = New Object() {Nothing, customers_gender, customers_firstname, customers_lastname, customers_dob, customers_email_address, customers_default_address_id, customers_telephone, customers_telephone_evening, customers_fax, customers_password, customers_newsletter, customers_newsletterpartner, customers_privilege, customers_privilege_balance, customers_garantie, sponsoring_code, sponsored_code, customers_abo, customers_abo_suspended, customers_abo_type, flagminiat1995, customers_abo_method, customers_abo_dvd_norm, customers_abo_dvd_adult, customers_abo_dvd_home_norm, customers_abo_dvd_home_adult, throttling, customers_abo_validityto, customers_abo_rank, customers_abo_start_rentthismonth, customers_abo_dvd_credit, customers_abo_multishipment, customers_abo_discount_recurring_to_date, abotested, customers_abo_status, customers_abo_payment_method, domiciliation_status, domiciliation_debiter_name, domiciliation_number, domiciliation_account_number, adult_pwd, ogone_card_type, ogone_card_no, ogone_exp_date, ogone_owner, ogone_cc_expiration_status, offline_payment_status, comment, vip, black_listed, red_listed, sm_eligible, customers_enquiry_id, date_first_delivery, mail_wl_adult_not_sufficient, mail_wl_norm_not_sufficient, mgm_points, wishlist_kind, customers_info_date_of_last_logon, customers_info_number_of_logons, customers_info_date_account_created, customers_info_date_account_last_modified, global_product_notifications, customers_language, site, partners_id, belgiqueloisirs_id, selected_for_email, address_book_id, entry_gender, entry_company, entry_firstname, entry_lastname, entry_street_address, entry_suburb, entry_postcode, entry_city, entry_state, entry_country_id, entry_zone_id}
            rowcustomersView1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustomersView1Row)
            Return rowcustomersView1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycustomers_id(ByVal customers_id As Integer) As customersView1Row
            Return CType(Me.Rows.Find(New Object() {customers_id}),customersView1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As customersView1DataTable = CType(MyBase.Clone,customersView1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New customersView1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_gender = MyBase.Columns("customers_gender")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_dob = MyBase.Columns("customers_dob")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_default_address_id = MyBase.Columns("customers_default_address_id")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columncustomers_telephone_evening = MyBase.Columns("customers_telephone_evening")
            Me.columncustomers_fax = MyBase.Columns("customers_fax")
            Me.columncustomers_password = MyBase.Columns("customers_password")
            Me.columncustomers_newsletter = MyBase.Columns("customers_newsletter")
            Me.columncustomers_newsletterpartner = MyBase.Columns("customers_newsletterpartner")
            Me.columncustomers_privilege = MyBase.Columns("customers_privilege")
            Me.columncustomers_privilege_balance = MyBase.Columns("customers_privilege_balance")
            Me.columncustomers_garantie = MyBase.Columns("customers_garantie")
            Me.columnsponsoring_code = MyBase.Columns("sponsoring_code")
            Me.columnsponsored_code = MyBase.Columns("sponsored_code")
            Me.columncustomers_abo = MyBase.Columns("customers_abo")
            Me.columncustomers_abo_suspended = MyBase.Columns("customers_abo_suspended")
            Me.columncustomers_abo_type = MyBase.Columns("customers_abo_type")
            Me.columnflagminiat1995 = MyBase.Columns("flagminiat1995")
            Me.columncustomers_abo_method = MyBase.Columns("customers_abo_method")
            Me.columncustomers_abo_dvd_norm = MyBase.Columns("customers_abo_dvd_norm")
            Me.columncustomers_abo_dvd_adult = MyBase.Columns("customers_abo_dvd_adult")
            Me.columncustomers_abo_dvd_home_norm = MyBase.Columns("customers_abo_dvd_home_norm")
            Me.columncustomers_abo_dvd_home_adult = MyBase.Columns("customers_abo_dvd_home_adult")
            Me.columnthrottling = MyBase.Columns("throttling")
            Me.columncustomers_abo_validityto = MyBase.Columns("customers_abo_validityto")
            Me.columncustomers_abo_rank = MyBase.Columns("customers_abo_rank")
            Me.columncustomers_abo_start_rentthismonth = MyBase.Columns("customers_abo_start_rentthismonth")
            Me.columncustomers_abo_dvd_credit = MyBase.Columns("customers_abo_dvd_credit")
            Me.columncustomers_abo_multishipment = MyBase.Columns("customers_abo_multishipment")
            Me.columncustomers_abo_discount_recurring_to_date = MyBase.Columns("customers_abo_discount_recurring_to_date")
            Me.columnabotested = MyBase.Columns("abotested")
            Me.columncustomers_abo_status = MyBase.Columns("customers_abo_status")
            Me.columncustomers_abo_payment_method = MyBase.Columns("customers_abo_payment_method")
            Me.columndomiciliation_status = MyBase.Columns("domiciliation_status")
            Me.columndomiciliation_debiter_name = MyBase.Columns("domiciliation_debiter_name")
            Me.columndomiciliation_number = MyBase.Columns("domiciliation_number")
            Me.columndomiciliation_account_number = MyBase.Columns("domiciliation_account_number")
            Me.columnadult_pwd = MyBase.Columns("adult_pwd")
            Me.columnogone_card_type = MyBase.Columns("ogone_card_type")
            Me.columnogone_card_no = MyBase.Columns("ogone_card_no")
            Me.columnogone_exp_date = MyBase.Columns("ogone_exp_date")
            Me.columnogone_owner = MyBase.Columns("ogone_owner")
            Me.columnogone_cc_expiration_status = MyBase.Columns("ogone_cc_expiration_status")
            Me.columnoffline_payment_status = MyBase.Columns("offline_payment_status")
            Me.columncomment = MyBase.Columns("comment")
            Me.columnvip = MyBase.Columns("vip")
            Me.columnblack_listed = MyBase.Columns("black_listed")
            Me.columnred_listed = MyBase.Columns("red_listed")
            Me.columnsm_eligible = MyBase.Columns("sm_eligible")
            Me.columncustomers_enquiry_id = MyBase.Columns("customers_enquiry_id")
            Me.columndate_first_delivery = MyBase.Columns("date_first_delivery")
            Me.columnmail_wl_adult_not_sufficient = MyBase.Columns("mail_wl_adult_not_sufficient")
            Me.columnmail_wl_norm_not_sufficient = MyBase.Columns("mail_wl_norm_not_sufficient")
            Me.columnmgm_points = MyBase.Columns("mgm_points")
            Me.columnwishlist_kind = MyBase.Columns("wishlist_kind")
            Me.columncustomers_info_date_of_last_logon = MyBase.Columns("customers_info_date_of_last_logon")
            Me.columncustomers_info_number_of_logons = MyBase.Columns("customers_info_number_of_logons")
            Me.columncustomers_info_date_account_created = MyBase.Columns("customers_info_date_account_created")
            Me.columncustomers_info_date_account_last_modified = MyBase.Columns("customers_info_date_account_last_modified")
            Me.columnglobal_product_notifications = MyBase.Columns("global_product_notifications")
            Me.columncustomers_language = MyBase.Columns("customers_language")
            Me.columnsite = MyBase.Columns("site")
            Me.columnpartners_id = MyBase.Columns("partners_id")
            Me.columnbelgiqueloisirs_id = MyBase.Columns("belgiqueloisirs_id")
            Me.columnselected_for_email = MyBase.Columns("selected_for_email")
            Me.columnaddress_book_id = MyBase.Columns("address_book_id")
            Me.columnentry_gender = MyBase.Columns("entry_gender")
            Me.columnentry_company = MyBase.Columns("entry_company")
            Me.columnentry_firstname = MyBase.Columns("entry_firstname")
            Me.columnentry_lastname = MyBase.Columns("entry_lastname")
            Me.columnentry_street_address = MyBase.Columns("entry_street_address")
            Me.columnentry_suburb = MyBase.Columns("entry_suburb")
            Me.columnentry_postcode = MyBase.Columns("entry_postcode")
            Me.columnentry_city = MyBase.Columns("entry_city")
            Me.columnentry_state = MyBase.Columns("entry_state")
            Me.columnentry_country_id = MyBase.Columns("entry_country_id")
            Me.columnentry_zone_id = MyBase.Columns("entry_zone_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_gender = New Global.System.Data.DataColumn("customers_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_gender)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_dob = New Global.System.Data.DataColumn("customers_dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_dob)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_default_address_id = New Global.System.Data.DataColumn("customers_default_address_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_default_address_id)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columncustomers_telephone_evening = New Global.System.Data.DataColumn("customers_telephone_evening", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone_evening)
            Me.columncustomers_fax = New Global.System.Data.DataColumn("customers_fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_fax)
            Me.columncustomers_password = New Global.System.Data.DataColumn("customers_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_password)
            Me.columncustomers_newsletter = New Global.System.Data.DataColumn("customers_newsletter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletter)
            Me.columncustomers_newsletterpartner = New Global.System.Data.DataColumn("customers_newsletterpartner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletterpartner)
            Me.columncustomers_privilege = New Global.System.Data.DataColumn("customers_privilege", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege)
            Me.columncustomers_privilege_balance = New Global.System.Data.DataColumn("customers_privilege_balance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege_balance)
            Me.columncustomers_garantie = New Global.System.Data.DataColumn("customers_garantie", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_garantie)
            Me.columnsponsoring_code = New Global.System.Data.DataColumn("sponsoring_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsoring_code)
            Me.columnsponsored_code = New Global.System.Data.DataColumn("sponsored_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsored_code)
            Me.columncustomers_abo = New Global.System.Data.DataColumn("customers_abo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo)
            Me.columncustomers_abo_suspended = New Global.System.Data.DataColumn("customers_abo_suspended", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_suspended)
            Me.columncustomers_abo_type = New Global.System.Data.DataColumn("customers_abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_type)
            Me.columnflagminiat1995 = New Global.System.Data.DataColumn("flagminiat1995", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnflagminiat1995)
            Me.columncustomers_abo_method = New Global.System.Data.DataColumn("customers_abo_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_method)
            Me.columncustomers_abo_dvd_norm = New Global.System.Data.DataColumn("customers_abo_dvd_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_norm)
            Me.columncustomers_abo_dvd_adult = New Global.System.Data.DataColumn("customers_abo_dvd_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_adult)
            Me.columncustomers_abo_dvd_home_norm = New Global.System.Data.DataColumn("customers_abo_dvd_home_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_norm)
            Me.columncustomers_abo_dvd_home_adult = New Global.System.Data.DataColumn("customers_abo_dvd_home_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_adult)
            Me.columnthrottling = New Global.System.Data.DataColumn("throttling", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnthrottling)
            Me.columncustomers_abo_validityto = New Global.System.Data.DataColumn("customers_abo_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_validityto)
            Me.columncustomers_abo_rank = New Global.System.Data.DataColumn("customers_abo_rank", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_rank)
            Me.columncustomers_abo_start_rentthismonth = New Global.System.Data.DataColumn("customers_abo_start_rentthismonth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_start_rentthismonth)
            Me.columncustomers_abo_dvd_credit = New Global.System.Data.DataColumn("customers_abo_dvd_credit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_credit)
            Me.columncustomers_abo_multishipment = New Global.System.Data.DataColumn("customers_abo_multishipment", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_multishipment)
            Me.columncustomers_abo_discount_recurring_to_date = New Global.System.Data.DataColumn("customers_abo_discount_recurring_to_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_discount_recurring_to_date)
            Me.columnabotested = New Global.System.Data.DataColumn("abotested", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabotested)
            Me.columncustomers_abo_status = New Global.System.Data.DataColumn("customers_abo_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_status)
            Me.columncustomers_abo_payment_method = New Global.System.Data.DataColumn("customers_abo_payment_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_payment_method)
            Me.columndomiciliation_status = New Global.System.Data.DataColumn("domiciliation_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_status)
            Me.columndomiciliation_debiter_name = New Global.System.Data.DataColumn("domiciliation_debiter_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_debiter_name)
            Me.columndomiciliation_number = New Global.System.Data.DataColumn("domiciliation_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_number)
            Me.columndomiciliation_account_number = New Global.System.Data.DataColumn("domiciliation_account_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_account_number)
            Me.columnadult_pwd = New Global.System.Data.DataColumn("adult_pwd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadult_pwd)
            Me.columnogone_card_type = New Global.System.Data.DataColumn("ogone_card_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_type)
            Me.columnogone_card_no = New Global.System.Data.DataColumn("ogone_card_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_no)
            Me.columnogone_exp_date = New Global.System.Data.DataColumn("ogone_exp_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_exp_date)
            Me.columnogone_owner = New Global.System.Data.DataColumn("ogone_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_owner)
            Me.columnogone_cc_expiration_status = New Global.System.Data.DataColumn("ogone_cc_expiration_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_cc_expiration_status)
            Me.columnoffline_payment_status = New Global.System.Data.DataColumn("offline_payment_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoffline_payment_status)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnvip = New Global.System.Data.DataColumn("vip", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvip)
            Me.columnblack_listed = New Global.System.Data.DataColumn("black_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblack_listed)
            Me.columnred_listed = New Global.System.Data.DataColumn("red_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnred_listed)
            Me.columnsm_eligible = New Global.System.Data.DataColumn("sm_eligible", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsm_eligible)
            Me.columncustomers_enquiry_id = New Global.System.Data.DataColumn("customers_enquiry_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_enquiry_id)
            Me.columndate_first_delivery = New Global.System.Data.DataColumn("date_first_delivery", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_first_delivery)
            Me.columnmail_wl_adult_not_sufficient = New Global.System.Data.DataColumn("mail_wl_adult_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_adult_not_sufficient)
            Me.columnmail_wl_norm_not_sufficient = New Global.System.Data.DataColumn("mail_wl_norm_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_norm_not_sufficient)
            Me.columnmgm_points = New Global.System.Data.DataColumn("mgm_points", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmgm_points)
            Me.columnwishlist_kind = New Global.System.Data.DataColumn("wishlist_kind", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwishlist_kind)
            Me.columncustomers_info_date_of_last_logon = New Global.System.Data.DataColumn("customers_info_date_of_last_logon", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_of_last_logon)
            Me.columncustomers_info_number_of_logons = New Global.System.Data.DataColumn("customers_info_number_of_logons", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_number_of_logons)
            Me.columncustomers_info_date_account_created = New Global.System.Data.DataColumn("customers_info_date_account_created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_account_created)
            Me.columncustomers_info_date_account_last_modified = New Global.System.Data.DataColumn("customers_info_date_account_last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_account_last_modified)
            Me.columnglobal_product_notifications = New Global.System.Data.DataColumn("global_product_notifications", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnglobal_product_notifications)
            Me.columncustomers_language = New Global.System.Data.DataColumn("customers_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_language)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.columnpartners_id = New Global.System.Data.DataColumn("partners_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartners_id)
            Me.columnbelgiqueloisirs_id = New Global.System.Data.DataColumn("belgiqueloisirs_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbelgiqueloisirs_id)
            Me.columnselected_for_email = New Global.System.Data.DataColumn("selected_for_email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnselected_for_email)
            Me.columnaddress_book_id = New Global.System.Data.DataColumn("address_book_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress_book_id)
            Me.columnentry_gender = New Global.System.Data.DataColumn("entry_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_gender)
            Me.columnentry_company = New Global.System.Data.DataColumn("entry_company", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_company)
            Me.columnentry_firstname = New Global.System.Data.DataColumn("entry_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_firstname)
            Me.columnentry_lastname = New Global.System.Data.DataColumn("entry_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_lastname)
            Me.columnentry_street_address = New Global.System.Data.DataColumn("entry_street_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_street_address)
            Me.columnentry_suburb = New Global.System.Data.DataColumn("entry_suburb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_suburb)
            Me.columnentry_postcode = New Global.System.Data.DataColumn("entry_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_postcode)
            Me.columnentry_city = New Global.System.Data.DataColumn("entry_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_city)
            Me.columnentry_state = New Global.System.Data.DataColumn("entry_state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_state)
            Me.columnentry_country_id = New Global.System.Data.DataColumn("entry_country_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_country_id)
            Me.columnentry_zone_id = New Global.System.Data.DataColumn("entry_zone_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_zone_id)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey1", New Global.System.Data.DataColumn() {Me.columncustomers_id}, true))
            Me.columncustomers_id.AutoIncrement = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_id.ReadOnly = true
            Me.columncustomers_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewcustomersView1Row() As customersView1Row
            Return CType(Me.NewRow,customersView1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New customersView1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(customersView1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.customersView1RowChangedEvent) Is Nothing) Then
                RaiseEvent customersView1RowChanged(Me, New customersView1RowChangeEvent(CType(e.Row,customersView1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.customersView1RowChangingEvent) Is Nothing) Then
                RaiseEvent customersView1RowChanging(Me, New customersView1RowChangeEvent(CType(e.Row,customersView1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.customersView1RowDeletedEvent) Is Nothing) Then
                RaiseEvent customersView1RowDeleted(Me, New customersView1RowChangeEvent(CType(e.Row,customersView1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.customersView1RowDeletingEvent) Is Nothing) Then
                RaiseEvent customersView1RowDeleting(Me, New customersView1RowChangeEvent(CType(e.Row,customersView1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovecustomersView1Row(ByVal row As customersView1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCompta = New dsCompta
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "customersView1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class languagesDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnlanguages_id As Global.System.Data.DataColumn
        
        Private columnname As Global.System.Data.DataColumn
        
        Private columncode As Global.System.Data.DataColumn
        
        Private columnimage As Global.System.Data.DataColumn
        
        Private columndirectory As Global.System.Data.DataColumn
        
        Private columnsort_order As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "languages"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property languages_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlanguages_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property directoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirectory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sort_orderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsort_order
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As languagesRow
            Get
                Return CType(Me.Rows(index),languagesRow)
            End Get
        End Property
        
        Public Event languagesRowChanging As languagesRowChangeEventHandler
        
        Public Event languagesRowChanged As languagesRowChangeEventHandler
        
        Public Event languagesRowDeleting As languagesRowChangeEventHandler
        
        Public Event languagesRowDeleted As languagesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddlanguagesRow(ByVal row As languagesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddlanguagesRow(ByVal name As String, ByVal code As String, ByVal image As String, ByVal directory As String, ByVal sort_order As Integer) As languagesRow
            Dim rowlanguagesRow As languagesRow = CType(Me.NewRow,languagesRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, name, code, image, directory, sort_order}
            rowlanguagesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowlanguagesRow)
            Return rowlanguagesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBylanguages_id(ByVal languages_id As Integer) As languagesRow
            Return CType(Me.Rows.Find(New Object() {languages_id}),languagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As languagesDataTable = CType(MyBase.Clone,languagesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New languagesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnlanguages_id = MyBase.Columns("languages_id")
            Me.columnname = MyBase.Columns("name")
            Me.columncode = MyBase.Columns("code")
            Me.columnimage = MyBase.Columns("image")
            Me.columndirectory = MyBase.Columns("directory")
            Me.columnsort_order = MyBase.Columns("sort_order")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnlanguages_id = New Global.System.Data.DataColumn("languages_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanguages_id)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columnimage = New Global.System.Data.DataColumn("image", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimage)
            Me.columndirectory = New Global.System.Data.DataColumn("directory", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirectory)
            Me.columnsort_order = New Global.System.Data.DataColumn("sort_order", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsort_order)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey6", New Global.System.Data.DataColumn() {Me.columnlanguages_id}, true))
            Me.columnlanguages_id.AutoIncrement = true
            Me.columnlanguages_id.AllowDBNull = false
            Me.columnlanguages_id.ReadOnly = true
            Me.columnlanguages_id.Unique = true
            Me.columnname.AllowDBNull = false
            Me.columncode.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewlanguagesRow() As languagesRow
            Return CType(Me.NewRow,languagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New languagesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(languagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.languagesRowChangedEvent) Is Nothing) Then
                RaiseEvent languagesRowChanged(Me, New languagesRowChangeEvent(CType(e.Row,languagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.languagesRowChangingEvent) Is Nothing) Then
                RaiseEvent languagesRowChanging(Me, New languagesRowChangeEvent(CType(e.Row,languagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.languagesRowDeletedEvent) Is Nothing) Then
                RaiseEvent languagesRowDeleted(Me, New languagesRowChangeEvent(CType(e.Row,languagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.languagesRowDeletingEvent) Is Nothing) Then
                RaiseEvent languagesRowDeleting(Me, New languagesRowChangeEvent(CType(e.Row,languagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovelanguagesRow(ByVal row As languagesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCompta = New dsCompta
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "languagesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class siteDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnsite_id As Global.System.Data.DataColumn
        
        Private columnsite_name As Global.System.Data.DataColumn
        
        Private columnsite_link As Global.System.Data.DataColumn
        
        Private columnlogo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "site"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property site_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property site_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property site_linkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite_link
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property logoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlogo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As siteRow
            Get
                Return CType(Me.Rows(index),siteRow)
            End Get
        End Property
        
        Public Event siteRowChanging As siteRowChangeEventHandler
        
        Public Event siteRowChanged As siteRowChangeEventHandler
        
        Public Event siteRowDeleting As siteRowChangeEventHandler
        
        Public Event siteRowDeleted As siteRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddsiteRow(ByVal row As siteRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddsiteRow(ByVal site_id As Integer, ByVal site_name As String, ByVal site_link As String, ByVal logo As String) As siteRow
            Dim rowsiteRow As siteRow = CType(Me.NewRow,siteRow)
            Dim columnValuesArray() As Object = New Object() {site_id, site_name, site_link, logo}
            rowsiteRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowsiteRow)
            Return rowsiteRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBysite_name(ByVal site_name As String) As siteRow
            Return CType(Me.Rows.Find(New Object() {site_name}),siteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As siteDataTable = CType(MyBase.Clone,siteDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New siteDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnsite_id = MyBase.Columns("site_id")
            Me.columnsite_name = MyBase.Columns("site_name")
            Me.columnsite_link = MyBase.Columns("site_link")
            Me.columnlogo = MyBase.Columns("logo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnsite_id = New Global.System.Data.DataColumn("site_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite_id)
            Me.columnsite_name = New Global.System.Data.DataColumn("site_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite_name)
            Me.columnsite_link = New Global.System.Data.DataColumn("site_link", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite_link)
            Me.columnlogo = New Global.System.Data.DataColumn("logo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlogo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey15", New Global.System.Data.DataColumn() {Me.columnsite_name}, true))
            Me.columnsite_name.AllowDBNull = false
            Me.columnsite_name.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewsiteRow() As siteRow
            Return CType(Me.NewRow,siteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New siteRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(siteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.siteRowChangedEvent) Is Nothing) Then
                RaiseEvent siteRowChanged(Me, New siteRowChangeEvent(CType(e.Row,siteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.siteRowChangingEvent) Is Nothing) Then
                RaiseEvent siteRowChanging(Me, New siteRowChangeEvent(CType(e.Row,siteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.siteRowDeletedEvent) Is Nothing) Then
                RaiseEvent siteRowDeleted(Me, New siteRowChangeEvent(CType(e.Row,siteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.siteRowDeletingEvent) Is Nothing) Then
                RaiseEvent siteRowDeleting(Me, New siteRowChangeEvent(CType(e.Row,siteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovesiteRow(ByVal row As siteRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCompta = New dsCompta
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "siteDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class mail_messagesDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnmail_messages_id As Global.System.Data.DataColumn
        
        Private columnlanguage_id As Global.System.Data.DataColumn
        
        Private columnmessages_subject As Global.System.Data.DataColumn
        
        Private columnmessages_title As Global.System.Data.DataColumn
        
        Private columnmessages_html As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "mail_messages"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_messages_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_messages_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property language_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlanguage_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property messages_subjectColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmessages_subject
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property messages_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmessages_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property messages_htmlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmessages_html
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As mail_messagesRow
            Get
                Return CType(Me.Rows(index),mail_messagesRow)
            End Get
        End Property
        
        Public Event mail_messagesRowChanging As mail_messagesRowChangeEventHandler
        
        Public Event mail_messagesRowChanged As mail_messagesRowChangeEventHandler
        
        Public Event mail_messagesRowDeleting As mail_messagesRowChangeEventHandler
        
        Public Event mail_messagesRowDeleted As mail_messagesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addmail_messagesRow(ByVal row As mail_messagesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addmail_messagesRow(ByVal mail_messages_id As Integer, ByVal language_id As Integer, ByVal messages_subject As String, ByVal messages_title As String, ByVal messages_html As String, ByVal comment As String) As mail_messagesRow
            Dim rowmail_messagesRow As mail_messagesRow = CType(Me.NewRow,mail_messagesRow)
            Dim columnValuesArray() As Object = New Object() {mail_messages_id, language_id, messages_subject, messages_title, messages_html, comment}
            rowmail_messagesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowmail_messagesRow)
            Return rowmail_messagesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBymail_messages_idlanguage_id(ByVal mail_messages_id As Integer, ByVal language_id As Integer) As mail_messagesRow
            Return CType(Me.Rows.Find(New Object() {mail_messages_id, language_id}),mail_messagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As mail_messagesDataTable = CType(MyBase.Clone,mail_messagesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New mail_messagesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnmail_messages_id = MyBase.Columns("mail_messages_id")
            Me.columnlanguage_id = MyBase.Columns("language_id")
            Me.columnmessages_subject = MyBase.Columns("messages_subject")
            Me.columnmessages_title = MyBase.Columns("messages_title")
            Me.columnmessages_html = MyBase.Columns("messages_html")
            Me.columncomment = MyBase.Columns("comment")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnmail_messages_id = New Global.System.Data.DataColumn("mail_messages_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_messages_id)
            Me.columnlanguage_id = New Global.System.Data.DataColumn("language_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanguage_id)
            Me.columnmessages_subject = New Global.System.Data.DataColumn("messages_subject", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmessages_subject)
            Me.columnmessages_title = New Global.System.Data.DataColumn("messages_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmessages_title)
            Me.columnmessages_html = New Global.System.Data.DataColumn("messages_html", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmessages_html)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey4", New Global.System.Data.DataColumn() {Me.columnmail_messages_id, Me.columnlanguage_id}, true))
            Me.columnmail_messages_id.AllowDBNull = false
            Me.columnlanguage_id.AllowDBNull = false
            Me.columnmessages_subject.AllowDBNull = false
            Me.columnmessages_title.AllowDBNull = false
            Me.columnmessages_html.AllowDBNull = false
            Me.columncomment.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newmail_messagesRow() As mail_messagesRow
            Return CType(Me.NewRow,mail_messagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New mail_messagesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(mail_messagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.mail_messagesRowChangedEvent) Is Nothing) Then
                RaiseEvent mail_messagesRowChanged(Me, New mail_messagesRowChangeEvent(CType(e.Row,mail_messagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.mail_messagesRowChangingEvent) Is Nothing) Then
                RaiseEvent mail_messagesRowChanging(Me, New mail_messagesRowChangeEvent(CType(e.Row,mail_messagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.mail_messagesRowDeletedEvent) Is Nothing) Then
                RaiseEvent mail_messagesRowDeleted(Me, New mail_messagesRowChangeEvent(CType(e.Row,mail_messagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.mail_messagesRowDeletingEvent) Is Nothing) Then
                RaiseEvent mail_messagesRowDeleting(Me, New mail_messagesRowChangeEvent(CType(e.Row,mail_messagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removemail_messagesRow(ByVal row As mail_messagesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCompta = New dsCompta
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "mail_messagesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Offline_Payment_Recovery_FlowDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columntotal As Global.System.Data.DataColumn
        
        Private columnstatus_id As Global.System.Data.DataColumn
        
        Private columnstatus_name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Offline_Payment_Recovery_Flow"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property status_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstatus_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property status_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstatus_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Offline_Payment_Recovery_FlowRow
            Get
                Return CType(Me.Rows(index),Offline_Payment_Recovery_FlowRow)
            End Get
        End Property
        
        Public Event Offline_Payment_Recovery_FlowRowChanging As Offline_Payment_Recovery_FlowRowChangeEventHandler
        
        Public Event Offline_Payment_Recovery_FlowRowChanged As Offline_Payment_Recovery_FlowRowChangeEventHandler
        
        Public Event Offline_Payment_Recovery_FlowRowDeleting As Offline_Payment_Recovery_FlowRowChangeEventHandler
        
        Public Event Offline_Payment_Recovery_FlowRowDeleted As Offline_Payment_Recovery_FlowRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddOffline_Payment_Recovery_FlowRow(ByVal row As Offline_Payment_Recovery_FlowRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddOffline_Payment_Recovery_FlowRow(ByVal total As Integer, ByVal status_id As Integer, ByVal status_name As String) As Offline_Payment_Recovery_FlowRow
            Dim rowOffline_Payment_Recovery_FlowRow As Offline_Payment_Recovery_FlowRow = CType(Me.NewRow,Offline_Payment_Recovery_FlowRow)
            Dim columnValuesArray() As Object = New Object() {total, status_id, status_name}
            rowOffline_Payment_Recovery_FlowRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOffline_Payment_Recovery_FlowRow)
            Return rowOffline_Payment_Recovery_FlowRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Offline_Payment_Recovery_FlowDataTable = CType(MyBase.Clone,Offline_Payment_Recovery_FlowDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Offline_Payment_Recovery_FlowDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columntotal = MyBase.Columns("total")
            Me.columnstatus_id = MyBase.Columns("status_id")
            Me.columnstatus_name = MyBase.Columns("status_name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columntotal = New Global.System.Data.DataColumn("total", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal)
            Me.columnstatus_id = New Global.System.Data.DataColumn("status_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstatus_id)
            Me.columnstatus_name = New Global.System.Data.DataColumn("status_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstatus_name)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewOffline_Payment_Recovery_FlowRow() As Offline_Payment_Recovery_FlowRow
            Return CType(Me.NewRow,Offline_Payment_Recovery_FlowRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Offline_Payment_Recovery_FlowRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Offline_Payment_Recovery_FlowRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Offline_Payment_Recovery_FlowRowChangedEvent) Is Nothing) Then
                RaiseEvent Offline_Payment_Recovery_FlowRowChanged(Me, New Offline_Payment_Recovery_FlowRowChangeEvent(CType(e.Row,Offline_Payment_Recovery_FlowRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Offline_Payment_Recovery_FlowRowChangingEvent) Is Nothing) Then
                RaiseEvent Offline_Payment_Recovery_FlowRowChanging(Me, New Offline_Payment_Recovery_FlowRowChangeEvent(CType(e.Row,Offline_Payment_Recovery_FlowRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Offline_Payment_Recovery_FlowRowDeletedEvent) Is Nothing) Then
                RaiseEvent Offline_Payment_Recovery_FlowRowDeleted(Me, New Offline_Payment_Recovery_FlowRowChangeEvent(CType(e.Row,Offline_Payment_Recovery_FlowRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Offline_Payment_Recovery_FlowRowDeletingEvent) Is Nothing) Then
                RaiseEvent Offline_Payment_Recovery_FlowRowDeleting(Me, New Offline_Payment_Recovery_FlowRowChangeEvent(CType(e.Row,Offline_Payment_Recovery_FlowRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveOffline_Payment_Recovery_FlowRow(ByVal row As Offline_Payment_Recovery_FlowRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCompta = New dsCompta
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Offline_Payment_Recovery_FlowDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Offline_Payment_Step_View1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnpayment_offline_request_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Offline_Payment_Step_View1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payment_offline_request_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayment_offline_request_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Offline_Payment_Step_View1Row
            Get
                Return CType(Me.Rows(index),Offline_Payment_Step_View1Row)
            End Get
        End Property
        
        Public Event Offline_Payment_Step_View1RowChanging As Offline_Payment_Step_View1RowChangeEventHandler
        
        Public Event Offline_Payment_Step_View1RowChanged As Offline_Payment_Step_View1RowChangeEventHandler
        
        Public Event Offline_Payment_Step_View1RowDeleting As Offline_Payment_Step_View1RowChangeEventHandler
        
        Public Event Offline_Payment_Step_View1RowDeleted As Offline_Payment_Step_View1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddOffline_Payment_Step_View1Row(ByVal row As Offline_Payment_Step_View1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddOffline_Payment_Step_View1Row(ByVal payment_offline_request_id As Integer, ByVal customers_id As Integer) As Offline_Payment_Step_View1Row
            Dim rowOffline_Payment_Step_View1Row As Offline_Payment_Step_View1Row = CType(Me.NewRow,Offline_Payment_Step_View1Row)
            Dim columnValuesArray() As Object = New Object() {payment_offline_request_id, customers_id}
            rowOffline_Payment_Step_View1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowOffline_Payment_Step_View1Row)
            Return rowOffline_Payment_Step_View1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBypayment_offline_request_id(ByVal payment_offline_request_id As Integer) As Offline_Payment_Step_View1Row
            Return CType(Me.Rows.Find(New Object() {payment_offline_request_id}),Offline_Payment_Step_View1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Offline_Payment_Step_View1DataTable = CType(MyBase.Clone,Offline_Payment_Step_View1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Offline_Payment_Step_View1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnpayment_offline_request_id = MyBase.Columns("payment_offline_request_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnpayment_offline_request_id = New Global.System.Data.DataColumn("payment_offline_request_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayment_offline_request_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnpayment_offline_request_id}, true))
            Me.columnpayment_offline_request_id.AllowDBNull = false
            Me.columnpayment_offline_request_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewOffline_Payment_Step_View1Row() As Offline_Payment_Step_View1Row
            Return CType(Me.NewRow,Offline_Payment_Step_View1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Offline_Payment_Step_View1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Offline_Payment_Step_View1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Offline_Payment_Step_View1RowChangedEvent) Is Nothing) Then
                RaiseEvent Offline_Payment_Step_View1RowChanged(Me, New Offline_Payment_Step_View1RowChangeEvent(CType(e.Row,Offline_Payment_Step_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Offline_Payment_Step_View1RowChangingEvent) Is Nothing) Then
                RaiseEvent Offline_Payment_Step_View1RowChanging(Me, New Offline_Payment_Step_View1RowChangeEvent(CType(e.Row,Offline_Payment_Step_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Offline_Payment_Step_View1RowDeletedEvent) Is Nothing) Then
                RaiseEvent Offline_Payment_Step_View1RowDeleted(Me, New Offline_Payment_Step_View1RowChangeEvent(CType(e.Row,Offline_Payment_Step_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Offline_Payment_Step_View1RowDeletingEvent) Is Nothing) Then
                RaiseEvent Offline_Payment_Step_View1RowDeleting(Me, New Offline_Payment_Step_View1RowChangeEvent(CType(e.Row,Offline_Payment_Step_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveOffline_Payment_Step_View1Row(ByVal row As Offline_Payment_Step_View1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCompta = New dsCompta
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Offline_Payment_Step_View1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Offline_DvdAtHomeDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Offline_DvdAtHome"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Offline_DvdAtHomeRow
            Get
                Return CType(Me.Rows(index),Offline_DvdAtHomeRow)
            End Get
        End Property
        
        Public Event Offline_DvdAtHomeRowChanging As Offline_DvdAtHomeRowChangeEventHandler
        
        Public Event Offline_DvdAtHomeRowChanged As Offline_DvdAtHomeRowChangeEventHandler
        
        Public Event Offline_DvdAtHomeRowDeleting As Offline_DvdAtHomeRowChangeEventHandler
        
        Public Event Offline_DvdAtHomeRowDeleted As Offline_DvdAtHomeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddOffline_DvdAtHomeRow(ByVal row As Offline_DvdAtHomeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddOffline_DvdAtHomeRow(ByVal parentOffline_Payment_Step_View1RowByOffline_Payment_Step_View1_Offline_DvdAtHome As Offline_Payment_Step_View1Row) As Offline_DvdAtHomeRow
            Dim rowOffline_DvdAtHomeRow As Offline_DvdAtHomeRow = CType(Me.NewRow,Offline_DvdAtHomeRow)
            Dim columnValuesArray() As Object = New Object() {Nothing}
            If (Not (parentOffline_Payment_Step_View1RowByOffline_Payment_Step_View1_Offline_DvdAtHome) Is Nothing) Then
                columnValuesArray(0) = parentOffline_Payment_Step_View1RowByOffline_Payment_Step_View1_Offline_DvdAtHome(1)
            End If
            rowOffline_DvdAtHomeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOffline_DvdAtHomeRow)
            Return rowOffline_DvdAtHomeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Offline_DvdAtHomeDataTable = CType(MyBase.Clone,Offline_DvdAtHomeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Offline_DvdAtHomeDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewOffline_DvdAtHomeRow() As Offline_DvdAtHomeRow
            Return CType(Me.NewRow,Offline_DvdAtHomeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Offline_DvdAtHomeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Offline_DvdAtHomeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Offline_DvdAtHomeRowChangedEvent) Is Nothing) Then
                RaiseEvent Offline_DvdAtHomeRowChanged(Me, New Offline_DvdAtHomeRowChangeEvent(CType(e.Row,Offline_DvdAtHomeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Offline_DvdAtHomeRowChangingEvent) Is Nothing) Then
                RaiseEvent Offline_DvdAtHomeRowChanging(Me, New Offline_DvdAtHomeRowChangeEvent(CType(e.Row,Offline_DvdAtHomeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Offline_DvdAtHomeRowDeletedEvent) Is Nothing) Then
                RaiseEvent Offline_DvdAtHomeRowDeleted(Me, New Offline_DvdAtHomeRowChangeEvent(CType(e.Row,Offline_DvdAtHomeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Offline_DvdAtHomeRowDeletingEvent) Is Nothing) Then
                RaiseEvent Offline_DvdAtHomeRowDeleting(Me, New Offline_DvdAtHomeRowChangeEvent(CType(e.Row,Offline_DvdAtHomeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveOffline_DvdAtHomeRow(ByVal row As Offline_DvdAtHomeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCompta = New dsCompta
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Offline_DvdAtHomeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ogone_batchDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnogone_batch_id As Global.System.Data.DataColumn
        
        Private columnogone_batch_date As Global.System.Data.DataColumn
        
        Private columnogone_batch_output As Global.System.Data.DataColumn
        
        Private columnogone_batch_result As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ogone_batch"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_batch_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_batch_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_batch_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_batch_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_batch_outputColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_batch_output
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_batch_resultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_batch_result
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ogone_batchRow
            Get
                Return CType(Me.Rows(index),ogone_batchRow)
            End Get
        End Property
        
        Public Event ogone_batchRowChanging As ogone_batchRowChangeEventHandler
        
        Public Event ogone_batchRowChanged As ogone_batchRowChangeEventHandler
        
        Public Event ogone_batchRowDeleting As ogone_batchRowChangeEventHandler
        
        Public Event ogone_batchRowDeleted As ogone_batchRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addogone_batchRow(ByVal row As ogone_batchRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addogone_batchRow(ByVal ogone_batch_id As Integer, ByVal ogone_batch_date As Date, ByVal ogone_batch_output As String, ByVal ogone_batch_result As String) As ogone_batchRow
            Dim rowogone_batchRow As ogone_batchRow = CType(Me.NewRow,ogone_batchRow)
            Dim columnValuesArray() As Object = New Object() {ogone_batch_id, ogone_batch_date, ogone_batch_output, ogone_batch_result}
            rowogone_batchRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowogone_batchRow)
            Return rowogone_batchRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ogone_batchDataTable = CType(MyBase.Clone,ogone_batchDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ogone_batchDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnogone_batch_id = MyBase.Columns("ogone_batch_id")
            Me.columnogone_batch_date = MyBase.Columns("ogone_batch_date")
            Me.columnogone_batch_output = MyBase.Columns("ogone_batch_output")
            Me.columnogone_batch_result = MyBase.Columns("ogone_batch_result")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnogone_batch_id = New Global.System.Data.DataColumn("ogone_batch_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_batch_id)
            Me.columnogone_batch_date = New Global.System.Data.DataColumn("ogone_batch_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_batch_date)
            Me.columnogone_batch_output = New Global.System.Data.DataColumn("ogone_batch_output", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_batch_output)
            Me.columnogone_batch_result = New Global.System.Data.DataColumn("ogone_batch_result", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_batch_result)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newogone_batchRow() As ogone_batchRow
            Return CType(Me.NewRow,ogone_batchRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ogone_batchRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ogone_batchRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ogone_batchRowChangedEvent) Is Nothing) Then
                RaiseEvent ogone_batchRowChanged(Me, New ogone_batchRowChangeEvent(CType(e.Row,ogone_batchRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ogone_batchRowChangingEvent) Is Nothing) Then
                RaiseEvent ogone_batchRowChanging(Me, New ogone_batchRowChangeEvent(CType(e.Row,ogone_batchRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ogone_batchRowDeletedEvent) Is Nothing) Then
                RaiseEvent ogone_batchRowDeleted(Me, New ogone_batchRowChangeEvent(CType(e.Row,ogone_batchRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ogone_batchRowDeletingEvent) Is Nothing) Then
                RaiseEvent ogone_batchRowDeleting(Me, New ogone_batchRowChangeEvent(CType(e.Row,ogone_batchRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeogone_batchRow(ByVal row As ogone_batchRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCompta = New dsCompta
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ogone_batchDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class EurofidesRow
        Inherits Global.System.Data.DataRow
        
        Private tableEurofides As EurofidesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEurofides = CType(Me.Table,EurofidesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Dossier() As String
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.DossierColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dossier' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.DossierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Debiteur() As String
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.DebiteurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Debiteur' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.DebiteurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NotreRef() As String
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.NotreRefColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NotreRef' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.NotreRefColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateOuverture() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.DateOuvertureColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateOuverture' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.DateOuvertureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Du_Total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Du_TotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Du_Total' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Du_TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Du_Principal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Du_PrincipalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Du_Principal' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Du_PrincipalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Du_ClausePenale() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Du_ClausePenaleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Du_ClausePenale' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Du_ClausePenaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Du_Interet() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Du_InteretColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Du_Interet' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Du_InteretColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Du_FraisAdmin() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Du_FraisAdminColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Du_FraisAdmin' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Du_FraisAdminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Du_FraisHuissier() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Du_FraisHuissierColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Du_FraisHuissier' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Du_FraisHuissierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Recup_Total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Recup_TotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Recup_Total' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Recup_TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Recup_Principal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Recup_PrincipalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Recup_Principal' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Recup_PrincipalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Recup_ClausePenale() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Recup_ClausePenaleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Recup_ClausePenale' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Recup_ClausePenaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Recup_Interet() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Recup_InteretColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Recup_Interet' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Recup_InteretColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Recup_FraisAdmin() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Recup_FraisAdminColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Recup_FraisAdmin' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Recup_FraisAdminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Recup_FraisHuissier() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Recup_FraisHuissierColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Recup_FraisHuissier' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Recup_FraisHuissierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Solde_Du() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.Solde_DuColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Solde_Du' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.Solde_DuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Comment() As String
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.CommentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comment' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.CommentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateCloture() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.DateClotureColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateCloture' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.DateClotureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_offline_request_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.payment_offline_request_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'payment_offline_request_id' in table 'Eurofides' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.payment_offline_request_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property process_comment() As String
            Get
                Try 
                    Return CType(Me(Me.tableEurofides.process_commentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'process_comment' in table 'Eurofides' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEurofides.process_commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDossierNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.DossierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDossierNull()
            Me(Me.tableEurofides.DossierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDebiteurNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.DebiteurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDebiteurNull()
            Me(Me.tableEurofides.DebiteurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNotreRefNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.NotreRefColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNotreRefNull()
            Me(Me.tableEurofides.NotreRefColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateOuvertureNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.DateOuvertureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateOuvertureNull()
            Me(Me.tableEurofides.DateOuvertureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDu_TotalNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Du_TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDu_TotalNull()
            Me(Me.tableEurofides.Du_TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDu_PrincipalNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Du_PrincipalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDu_PrincipalNull()
            Me(Me.tableEurofides.Du_PrincipalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDu_ClausePenaleNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Du_ClausePenaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDu_ClausePenaleNull()
            Me(Me.tableEurofides.Du_ClausePenaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDu_InteretNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Du_InteretColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDu_InteretNull()
            Me(Me.tableEurofides.Du_InteretColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDu_FraisAdminNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Du_FraisAdminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDu_FraisAdminNull()
            Me(Me.tableEurofides.Du_FraisAdminColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDu_FraisHuissierNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Du_FraisHuissierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDu_FraisHuissierNull()
            Me(Me.tableEurofides.Du_FraisHuissierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRecup_TotalNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Recup_TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRecup_TotalNull()
            Me(Me.tableEurofides.Recup_TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRecup_PrincipalNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Recup_PrincipalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRecup_PrincipalNull()
            Me(Me.tableEurofides.Recup_PrincipalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRecup_ClausePenaleNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Recup_ClausePenaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRecup_ClausePenaleNull()
            Me(Me.tableEurofides.Recup_ClausePenaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRecup_InteretNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Recup_InteretColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRecup_InteretNull()
            Me(Me.tableEurofides.Recup_InteretColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRecup_FraisAdminNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Recup_FraisAdminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRecup_FraisAdminNull()
            Me(Me.tableEurofides.Recup_FraisAdminColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRecup_FraisHuissierNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Recup_FraisHuissierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRecup_FraisHuissierNull()
            Me(Me.tableEurofides.Recup_FraisHuissierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSolde_DuNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.Solde_DuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSolde_DuNull()
            Me(Me.tableEurofides.Solde_DuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCommentNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.CommentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCommentNull()
            Me(Me.tableEurofides.CommentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateClotureNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.DateClotureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateClotureNull()
            Me(Me.tableEurofides.DateClotureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableEurofides.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispayment_offline_request_idNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.payment_offline_request_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpayment_offline_request_idNull()
            Me(Me.tableEurofides.payment_offline_request_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprocess_commentNull() As Boolean
            Return Me.IsNull(Me.tableEurofides.process_commentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprocess_commentNull()
            Me(Me.tableEurofides.process_commentColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class payment_offline_requestRow
        Inherits Global.System.Data.DataRow
        
        Private tablepayment_offline_request As payment_offline_requestDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablepayment_offline_request = CType(Me.Table,payment_offline_requestDataTable)
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class OgoneExpRow
        Inherits Global.System.Data.DataRow
        
        Private tableOgoneExp As OgoneExpDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOgoneExp = CType(Me.Table,OgoneExpDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableOgoneExp.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'OgoneExp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOgoneExp.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property card_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableOgoneExp.card_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'card_type' in table 'OgoneExp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOgoneExp.card_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property card_no() As String
            Get
                Try 
                    Return CType(Me(Me.tableOgoneExp.card_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'card_no' in table 'OgoneExp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOgoneExp.card_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property expiration_date() As String
            Get
                Try 
                    Return CType(Me(Me.tableOgoneExp.expiration_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'expiration_date' in table 'OgoneExp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOgoneExp.expiration_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableOgoneExp.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableOgoneExp.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscard_typeNull() As Boolean
            Return Me.IsNull(Me.tableOgoneExp.card_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcard_typeNull()
            Me(Me.tableOgoneExp.card_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscard_noNull() As Boolean
            Return Me.IsNull(Me.tableOgoneExp.card_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcard_noNull()
            Me(Me.tableOgoneExp.card_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isexpiration_dateNull() As Boolean
            Return Me.IsNull(Me.tableOgoneExp.expiration_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setexpiration_dateNull()
            Me(Me.tableOgoneExp.expiration_dateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class customersRow
        Inherits Global.System.Data.DataRow
        
        Private tablecustomers As customersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustomers = CType(Me.Table,customersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_gender() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_genderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_gender' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_firstname' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_lastname' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_dob' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_email_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_email_address' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_default_address_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_default_address_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_default_address_id' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_default_address_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_telephoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_telephone' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone_evening() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_telephone_eveningColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_telephone_evening' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_telephone_eveningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_fax() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_faxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_fax' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_password() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_passwordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_password' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletter() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_newsletterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletter' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_newsletterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletterpartner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_newsletterpartnerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletterpartner' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_newsletterpartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_privilegeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_privilege' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_privilegeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege_balance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_privilege_balanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_privilege_balance' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_privilege_balanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_garantie() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_garantieColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_garantie' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_garantieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsoring_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.sponsoring_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsoring_code' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.sponsoring_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsored_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.sponsored_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsored_code' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.sponsored_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_aboColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_suspended() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_suspendedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_suspended' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_suspendedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_type() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_typeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_type' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property flagminiat1995() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.flagminiat1995Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'flagminiat1995' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.flagminiat1995Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_method() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_methodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_method' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_norm() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_dvd_normColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_norm' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_adult() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_dvd_adultColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_adult' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_norm() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_dvd_home_normColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_home_norm' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_home_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_adult() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_dvd_home_adultColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_home_adult' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_home_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property throttling() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.throttlingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'throttling' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.throttlingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_validityto' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_rank() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_rankColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_rank' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_rankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_start_rentthismonth() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_start_rentthismonthColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_start_rentthismonth' in table 'customers' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_start_rentthismonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_credit() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_dvd_creditColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_credit' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_creditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_multishipment() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_multishipmentColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_multishipment' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_multishipmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_discount_recurring_to_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_discount_recurring_to_date' in table 'custome"& _ 
                            "rs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abotested() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.abotestedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abotested' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.abotestedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_status' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_payment_method() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_payment_methodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_payment_method' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.domiciliation_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_status' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.domiciliation_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_debiter_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.domiciliation_debiter_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_debiter_name' in table 'customers' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.domiciliation_debiter_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.domiciliation_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_number' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.domiciliation_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_account_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.domiciliation_account_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_account_number' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.domiciliation_account_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property adult_pwd() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.adult_pwdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adult_pwd' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.adult_pwdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_card_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_type' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_card_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_card_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_no' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_card_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_exp_date() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_exp_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_exp_date' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_exp_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_owner' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_cc_expiration_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_cc_expiration_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_cc_expiration_status' in table 'customers' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_cc_expiration_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property offline_payment_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.offline_payment_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'offline_payment_status' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.offline_payment_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.commentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comment' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vip() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.vipColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vip' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.vipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property black_listed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.black_listedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'black_listed' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.black_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property red_listed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.red_listedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'red_listed' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.red_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sm_eligible() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.sm_eligibleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sm_eligible' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.sm_eligibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_enquiry_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_enquiry_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_enquiry_id' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_enquiry_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_first_delivery() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.date_first_deliveryColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_first_delivery' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.date_first_deliveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_adult_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.mail_wl_adult_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_adult_not_sufficient' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.mail_wl_adult_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_norm_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.mail_wl_norm_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_norm_not_sufficient' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.mail_wl_norm_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mgm_points() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.mgm_pointsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mgm_points' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.mgm_pointsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wishlist_kind() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.wishlist_kindColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wishlist_kind' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.wishlist_kindColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_of_last_logon() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_info_date_of_last_logonColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_of_last_logon' in table 'customers' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_info_date_of_last_logonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_number_of_logons() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_info_number_of_logonsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_number_of_logons' in table 'customers' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_info_number_of_logonsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_account_created() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_info_date_account_createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_account_created' in table 'customers' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_info_date_account_createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_account_last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_info_date_account_last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_account_last_modified' in table 'custom"& _ 
                            "ers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_info_date_account_last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property global_product_notifications() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.global_product_notificationsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'global_product_notifications' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.global_product_notificationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_language() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_languageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_language' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.siteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'site' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property partners_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.partners_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partners_id' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.partners_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property belgiqueloisirs_id() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.belgiqueloisirs_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'belgiqueloisirs_id' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.belgiqueloisirs_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property selected_for_email() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.selected_for_emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'selected_for_email' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.selected_for_emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_genderNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_genderNull()
            Me(Me.tablecustomers.customers_genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_firstnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_firstnameNull()
            Me(Me.tablecustomers.customers_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_lastnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_lastnameNull()
            Me(Me.tablecustomers.customers_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_dobNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_dobNull()
            Me(Me.tablecustomers.customers_dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_email_addressNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_email_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_email_addressNull()
            Me(Me.tablecustomers.customers_email_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_default_address_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_default_address_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_default_address_idNull()
            Me(Me.tablecustomers.customers_default_address_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_telephoneNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_telephoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_telephoneNull()
            Me(Me.tablecustomers.customers_telephoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_telephone_eveningNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_telephone_eveningColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_telephone_eveningNull()
            Me(Me.tablecustomers.customers_telephone_eveningColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_faxNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_faxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_faxNull()
            Me(Me.tablecustomers.customers_faxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_passwordNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_passwordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_passwordNull()
            Me(Me.tablecustomers.customers_passwordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_newsletterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterNull()
            Me(Me.tablecustomers.customers_newsletterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterpartnerNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_newsletterpartnerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterpartnerNull()
            Me(Me.tablecustomers.customers_newsletterpartnerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_privilegeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_privilegeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_privilegeNull()
            Me(Me.tablecustomers.customers_privilegeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_privilege_balanceNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_privilege_balanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_privilege_balanceNull()
            Me(Me.tablecustomers.customers_privilege_balanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_garantieNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_garantieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_garantieNull()
            Me(Me.tablecustomers.customers_garantieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsoring_codeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.sponsoring_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsoring_codeNull()
            Me(Me.tablecustomers.sponsoring_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsored_codeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.sponsored_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsored_codeNull()
            Me(Me.tablecustomers.sponsored_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_aboNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_aboColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_aboNull()
            Me(Me.tablecustomers.customers_aboColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_suspendedNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_suspendedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_suspendedNull()
            Me(Me.tablecustomers.customers_abo_suspendedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_typeNull()
            Me(Me.tablecustomers.customers_abo_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isflagminiat1995Null() As Boolean
            Return Me.IsNull(Me.tablecustomers.flagminiat1995Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setflagminiat1995Null()
            Me(Me.tablecustomers.flagminiat1995Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_methodNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_methodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_methodNull()
            Me(Me.tablecustomers.customers_abo_methodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_normNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_dvd_normColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_normNull()
            Me(Me.tablecustomers.customers_abo_dvd_normColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_adultNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_dvd_adultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_adultNull()
            Me(Me.tablecustomers.customers_abo_dvd_adultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_home_normNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_dvd_home_normColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_home_normNull()
            Me(Me.tablecustomers.customers_abo_dvd_home_normColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_home_adultNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_dvd_home_adultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_home_adultNull()
            Me(Me.tablecustomers.customers_abo_dvd_home_adultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsthrottlingNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.throttlingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetthrottlingNull()
            Me(Me.tablecustomers.throttlingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_validitytoNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_validitytoNull()
            Me(Me.tablecustomers.customers_abo_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_rankNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_rankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_rankNull()
            Me(Me.tablecustomers.customers_abo_rankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_start_rentthismonthNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_start_rentthismonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_start_rentthismonthNull()
            Me(Me.tablecustomers.customers_abo_start_rentthismonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_creditNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_dvd_creditColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_creditNull()
            Me(Me.tablecustomers.customers_abo_dvd_creditColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_multishipmentNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_multishipmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_multishipmentNull()
            Me(Me.tablecustomers.customers_abo_multishipmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_discount_recurring_to_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_discount_recurring_to_dateNull()
            Me(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsabotestedNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.abotestedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetabotestedNull()
            Me(Me.tablecustomers.abotestedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_statusNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_statusNull()
            Me(Me.tablecustomers.customers_abo_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_payment_methodNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_payment_methodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_payment_methodNull()
            Me(Me.tablecustomers.customers_abo_payment_methodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_statusNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.domiciliation_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_statusNull()
            Me(Me.tablecustomers.domiciliation_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_debiter_nameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.domiciliation_debiter_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_debiter_nameNull()
            Me(Me.tablecustomers.domiciliation_debiter_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_numberNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.domiciliation_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_numberNull()
            Me(Me.tablecustomers.domiciliation_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_account_numberNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.domiciliation_account_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_account_numberNull()
            Me(Me.tablecustomers.domiciliation_account_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadult_pwdNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.adult_pwdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadult_pwdNull()
            Me(Me.tablecustomers.adult_pwdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_card_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_typeNull()
            Me(Me.tablecustomers.ogone_card_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_noNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_card_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_noNull()
            Me(Me.tablecustomers.ogone_card_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_exp_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_exp_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_exp_dateNull()
            Me(Me.tablecustomers.ogone_exp_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_ownerNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_ownerNull()
            Me(Me.tablecustomers.ogone_ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_cc_expiration_statusNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_cc_expiration_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_cc_expiration_statusNull()
            Me(Me.tablecustomers.ogone_cc_expiration_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isoffline_payment_statusNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.offline_payment_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setoffline_payment_statusNull()
            Me(Me.tablecustomers.offline_payment_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscommentNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.commentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcommentNull()
            Me(Me.tablecustomers.commentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsvipNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.vipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetvipNull()
            Me(Me.tablecustomers.vipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isblack_listedNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.black_listedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setblack_listedNull()
            Me(Me.tablecustomers.black_listedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isred_listedNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.red_listedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setred_listedNull()
            Me(Me.tablecustomers.red_listedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issm_eligibleNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.sm_eligibleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsm_eligibleNull()
            Me(Me.tablecustomers.sm_eligibleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_enquiry_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_enquiry_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_enquiry_idNull()
            Me(Me.tablecustomers.customers_enquiry_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_first_deliveryNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.date_first_deliveryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_first_deliveryNull()
            Me(Me.tablecustomers.date_first_deliveryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_adult_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.mail_wl_adult_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_adult_not_sufficientNull()
            Me(Me.tablecustomers.mail_wl_adult_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_norm_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.mail_wl_norm_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_norm_not_sufficientNull()
            Me(Me.tablecustomers.mail_wl_norm_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismgm_pointsNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.mgm_pointsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmgm_pointsNull()
            Me(Me.tablecustomers.mgm_pointsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iswishlist_kindNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.wishlist_kindColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setwishlist_kindNull()
            Me(Me.tablecustomers.wishlist_kindColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_of_last_logonNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_info_date_of_last_logonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_of_last_logonNull()
            Me(Me.tablecustomers.customers_info_date_of_last_logonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_number_of_logonsNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_info_number_of_logonsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_number_of_logonsNull()
            Me(Me.tablecustomers.customers_info_number_of_logonsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_account_createdNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_info_date_account_createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_account_createdNull()
            Me(Me.tablecustomers.customers_info_date_account_createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_account_last_modifiedNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_info_date_account_last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_account_last_modifiedNull()
            Me(Me.tablecustomers.customers_info_date_account_last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isglobal_product_notificationsNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.global_product_notificationsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setglobal_product_notificationsNull()
            Me(Me.tablecustomers.global_product_notificationsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_languageNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_languageNull()
            Me(Me.tablecustomers.customers_languageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssiteNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.siteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsiteNull()
            Me(Me.tablecustomers.siteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispartners_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.partners_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpartners_idNull()
            Me(Me.tablecustomers.partners_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbelgiqueloisirs_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.belgiqueloisirs_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbelgiqueloisirs_idNull()
            Me(Me.tablecustomers.belgiqueloisirs_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isselected_for_emailNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.selected_for_emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setselected_for_emailNull()
            Me(Me.tablecustomers.selected_for_emailColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class customersView1Row
        Inherits Global.System.Data.DataRow
        
        Private tablecustomersView1 As customersView1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustomersView1 = CType(Me.Table,customersView1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tablecustomersView1.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomersView1.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_gender() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_genderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_gender' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_firstname' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_lastname' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_dob' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_email_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_email_address' in table 'customersView1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_default_address_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_default_address_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_default_address_id' in table 'customersView1' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_default_address_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_telephoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_telephone' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone_evening() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_telephone_eveningColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_telephone_evening' in table 'customersView1' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_telephone_eveningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_fax() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_faxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_fax' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_password() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_passwordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_password' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletter() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_newsletterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletter' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_newsletterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletterpartner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_newsletterpartnerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletterpartner' in table 'customersView1' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_newsletterpartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_privilegeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_privilege' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_privilegeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege_balance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_privilege_balanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_privilege_balance' in table 'customersView1' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_privilege_balanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_garantie() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_garantieColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_garantie' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_garantieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsoring_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.sponsoring_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsoring_code' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.sponsoring_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsored_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.sponsored_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsored_code' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.sponsored_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_aboColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_suspended() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_suspendedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_suspended' in table 'customersView1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_suspendedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_type() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_typeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_type' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property flagminiat1995() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.flagminiat1995Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'flagminiat1995' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.flagminiat1995Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_method() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_methodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_method' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_norm() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_dvd_normColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_norm' in table 'customersView1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_dvd_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_adult() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_dvd_adultColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_adult' in table 'customersView1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_dvd_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_norm() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_dvd_home_normColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_home_norm' in table 'customersView1' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_dvd_home_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_adult() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_dvd_home_adultColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_home_adult' in table 'customersView1' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_dvd_home_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property throttling() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.throttlingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'throttling' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.throttlingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_validityto' in table 'customersView1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_rank() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_rankColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_rank' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_rankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_start_rentthismonth() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_start_rentthismonthColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_start_rentthismonth' in table 'customersView1"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_start_rentthismonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_credit() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_dvd_creditColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_credit' in table 'customersView1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_dvd_creditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_multishipment() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_multishipmentColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_multishipment' in table 'customersView1' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_multishipmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_discount_recurring_to_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_discount_recurring_to_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_discount_recurring_to_date' in table 'custome"& _ 
                            "rsView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_discount_recurring_to_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abotested() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.abotestedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abotested' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.abotestedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_status' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_payment_method() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_abo_payment_methodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_payment_method' in table 'customersView1' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_abo_payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.domiciliation_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_status' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.domiciliation_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_debiter_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.domiciliation_debiter_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_debiter_name' in table 'customersView1' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.domiciliation_debiter_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.domiciliation_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_number' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.domiciliation_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_account_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.domiciliation_account_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_account_number' in table 'customersView1' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.domiciliation_account_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property adult_pwd() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.adult_pwdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adult_pwd' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.adult_pwdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.ogone_card_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_type' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.ogone_card_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.ogone_card_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_no' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.ogone_card_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_exp_date() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.ogone_exp_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_exp_date' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.ogone_exp_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.ogone_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_owner' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.ogone_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_cc_expiration_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.ogone_cc_expiration_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_cc_expiration_status' in table 'customersView1' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.ogone_cc_expiration_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property offline_payment_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.offline_payment_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'offline_payment_status' in table 'customersView1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.offline_payment_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.commentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comment' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vip() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.vipColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vip' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.vipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property black_listed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.black_listedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'black_listed' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.black_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property red_listed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.red_listedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'red_listed' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.red_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sm_eligible() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.sm_eligibleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sm_eligible' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.sm_eligibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_enquiry_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_enquiry_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_enquiry_id' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_enquiry_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_first_delivery() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.date_first_deliveryColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_first_delivery' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.date_first_deliveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_adult_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.mail_wl_adult_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_adult_not_sufficient' in table 'customersView1' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.mail_wl_adult_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_norm_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.mail_wl_norm_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_norm_not_sufficient' in table 'customersView1' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.mail_wl_norm_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mgm_points() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.mgm_pointsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mgm_points' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.mgm_pointsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wishlist_kind() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.wishlist_kindColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wishlist_kind' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.wishlist_kindColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_of_last_logon() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_info_date_of_last_logonColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_of_last_logon' in table 'customersView1"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_info_date_of_last_logonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_number_of_logons() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_info_number_of_logonsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_number_of_logons' in table 'customersView1' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_info_number_of_logonsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_account_created() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_info_date_account_createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_account_created' in table 'customersVie"& _ 
                            "w1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_info_date_account_createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_account_last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_info_date_account_last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_account_last_modified' in table 'custom"& _ 
                            "ersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_info_date_account_last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property global_product_notifications() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.global_product_notificationsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'global_product_notifications' in table 'customersView1' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.global_product_notificationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_language() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.customers_languageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_language' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.customers_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.siteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'site' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property partners_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.partners_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partners_id' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.partners_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property belgiqueloisirs_id() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.belgiqueloisirs_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'belgiqueloisirs_id' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.belgiqueloisirs_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property selected_for_email() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.selected_for_emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'selected_for_email' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.selected_for_emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property address_book_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.address_book_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'address_book_id' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.address_book_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_gender() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.entry_genderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_gender' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.entry_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_company() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.entry_companyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_company' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.entry_companyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.entry_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_firstname' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.entry_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.entry_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_lastname' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.entry_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_street_address() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.entry_street_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_street_address' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.entry_street_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_suburb() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.entry_suburbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_suburb' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.entry_suburbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_postcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.entry_postcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_postcode' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.entry_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_city() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.entry_cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_city' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.entry_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_state() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.entry_stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_state' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.entry_stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_country_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.entry_country_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_country_id' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.entry_country_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_zone_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomersView1.entry_zone_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_zone_id' in table 'customersView1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomersView1.entry_zone_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_genderNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_genderNull()
            Me(Me.tablecustomersView1.customers_genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_firstnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_firstnameNull()
            Me(Me.tablecustomersView1.customers_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_lastnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_lastnameNull()
            Me(Me.tablecustomersView1.customers_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_dobNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_dobNull()
            Me(Me.tablecustomersView1.customers_dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_email_addressNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_email_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_email_addressNull()
            Me(Me.tablecustomersView1.customers_email_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_default_address_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_default_address_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_default_address_idNull()
            Me(Me.tablecustomersView1.customers_default_address_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_telephoneNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_telephoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_telephoneNull()
            Me(Me.tablecustomersView1.customers_telephoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_telephone_eveningNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_telephone_eveningColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_telephone_eveningNull()
            Me(Me.tablecustomersView1.customers_telephone_eveningColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_faxNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_faxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_faxNull()
            Me(Me.tablecustomersView1.customers_faxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_passwordNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_passwordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_passwordNull()
            Me(Me.tablecustomersView1.customers_passwordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_newsletterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterNull()
            Me(Me.tablecustomersView1.customers_newsletterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterpartnerNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_newsletterpartnerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterpartnerNull()
            Me(Me.tablecustomersView1.customers_newsletterpartnerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_privilegeNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_privilegeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_privilegeNull()
            Me(Me.tablecustomersView1.customers_privilegeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_privilege_balanceNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_privilege_balanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_privilege_balanceNull()
            Me(Me.tablecustomersView1.customers_privilege_balanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_garantieNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_garantieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_garantieNull()
            Me(Me.tablecustomersView1.customers_garantieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsoring_codeNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.sponsoring_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsoring_codeNull()
            Me(Me.tablecustomersView1.sponsoring_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsored_codeNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.sponsored_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsored_codeNull()
            Me(Me.tablecustomersView1.sponsored_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_aboNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_aboColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_aboNull()
            Me(Me.tablecustomersView1.customers_aboColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_suspendedNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_suspendedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_suspendedNull()
            Me(Me.tablecustomersView1.customers_abo_suspendedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_typeNull()
            Me(Me.tablecustomersView1.customers_abo_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isflagminiat1995Null() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.flagminiat1995Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setflagminiat1995Null()
            Me(Me.tablecustomersView1.flagminiat1995Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_methodNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_methodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_methodNull()
            Me(Me.tablecustomersView1.customers_abo_methodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_normNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_dvd_normColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_normNull()
            Me(Me.tablecustomersView1.customers_abo_dvd_normColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_adultNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_dvd_adultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_adultNull()
            Me(Me.tablecustomersView1.customers_abo_dvd_adultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_home_normNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_dvd_home_normColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_home_normNull()
            Me(Me.tablecustomersView1.customers_abo_dvd_home_normColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_home_adultNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_dvd_home_adultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_home_adultNull()
            Me(Me.tablecustomersView1.customers_abo_dvd_home_adultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsthrottlingNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.throttlingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetthrottlingNull()
            Me(Me.tablecustomersView1.throttlingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_validitytoNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_validitytoNull()
            Me(Me.tablecustomersView1.customers_abo_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_rankNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_rankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_rankNull()
            Me(Me.tablecustomersView1.customers_abo_rankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_start_rentthismonthNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_start_rentthismonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_start_rentthismonthNull()
            Me(Me.tablecustomersView1.customers_abo_start_rentthismonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_creditNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_dvd_creditColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_creditNull()
            Me(Me.tablecustomersView1.customers_abo_dvd_creditColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_multishipmentNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_multishipmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_multishipmentNull()
            Me(Me.tablecustomersView1.customers_abo_multishipmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_discount_recurring_to_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_discount_recurring_to_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_discount_recurring_to_dateNull()
            Me(Me.tablecustomersView1.customers_abo_discount_recurring_to_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsabotestedNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.abotestedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetabotestedNull()
            Me(Me.tablecustomersView1.abotestedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_statusNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_statusNull()
            Me(Me.tablecustomersView1.customers_abo_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_payment_methodNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_abo_payment_methodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_payment_methodNull()
            Me(Me.tablecustomersView1.customers_abo_payment_methodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_statusNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.domiciliation_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_statusNull()
            Me(Me.tablecustomersView1.domiciliation_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_debiter_nameNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.domiciliation_debiter_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_debiter_nameNull()
            Me(Me.tablecustomersView1.domiciliation_debiter_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_numberNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.domiciliation_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_numberNull()
            Me(Me.tablecustomersView1.domiciliation_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_account_numberNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.domiciliation_account_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_account_numberNull()
            Me(Me.tablecustomersView1.domiciliation_account_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadult_pwdNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.adult_pwdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadult_pwdNull()
            Me(Me.tablecustomersView1.adult_pwdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.ogone_card_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_typeNull()
            Me(Me.tablecustomersView1.ogone_card_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_noNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.ogone_card_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_noNull()
            Me(Me.tablecustomersView1.ogone_card_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_exp_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.ogone_exp_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_exp_dateNull()
            Me(Me.tablecustomersView1.ogone_exp_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_ownerNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.ogone_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_ownerNull()
            Me(Me.tablecustomersView1.ogone_ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_cc_expiration_statusNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.ogone_cc_expiration_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_cc_expiration_statusNull()
            Me(Me.tablecustomersView1.ogone_cc_expiration_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isoffline_payment_statusNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.offline_payment_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setoffline_payment_statusNull()
            Me(Me.tablecustomersView1.offline_payment_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscommentNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.commentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcommentNull()
            Me(Me.tablecustomersView1.commentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsvipNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.vipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetvipNull()
            Me(Me.tablecustomersView1.vipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isblack_listedNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.black_listedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setblack_listedNull()
            Me(Me.tablecustomersView1.black_listedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isred_listedNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.red_listedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setred_listedNull()
            Me(Me.tablecustomersView1.red_listedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issm_eligibleNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.sm_eligibleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsm_eligibleNull()
            Me(Me.tablecustomersView1.sm_eligibleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_enquiry_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_enquiry_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_enquiry_idNull()
            Me(Me.tablecustomersView1.customers_enquiry_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_first_deliveryNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.date_first_deliveryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_first_deliveryNull()
            Me(Me.tablecustomersView1.date_first_deliveryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_adult_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.mail_wl_adult_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_adult_not_sufficientNull()
            Me(Me.tablecustomersView1.mail_wl_adult_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_norm_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.mail_wl_norm_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_norm_not_sufficientNull()
            Me(Me.tablecustomersView1.mail_wl_norm_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismgm_pointsNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.mgm_pointsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmgm_pointsNull()
            Me(Me.tablecustomersView1.mgm_pointsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iswishlist_kindNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.wishlist_kindColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setwishlist_kindNull()
            Me(Me.tablecustomersView1.wishlist_kindColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_of_last_logonNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_info_date_of_last_logonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_of_last_logonNull()
            Me(Me.tablecustomersView1.customers_info_date_of_last_logonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_number_of_logonsNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_info_number_of_logonsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_number_of_logonsNull()
            Me(Me.tablecustomersView1.customers_info_number_of_logonsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_account_createdNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_info_date_account_createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_account_createdNull()
            Me(Me.tablecustomersView1.customers_info_date_account_createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_account_last_modifiedNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_info_date_account_last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_account_last_modifiedNull()
            Me(Me.tablecustomersView1.customers_info_date_account_last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isglobal_product_notificationsNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.global_product_notificationsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setglobal_product_notificationsNull()
            Me(Me.tablecustomersView1.global_product_notificationsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_languageNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.customers_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_languageNull()
            Me(Me.tablecustomersView1.customers_languageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssiteNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.siteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsiteNull()
            Me(Me.tablecustomersView1.siteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispartners_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.partners_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpartners_idNull()
            Me(Me.tablecustomersView1.partners_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbelgiqueloisirs_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.belgiqueloisirs_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbelgiqueloisirs_idNull()
            Me(Me.tablecustomersView1.belgiqueloisirs_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isselected_for_emailNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.selected_for_emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setselected_for_emailNull()
            Me(Me.tablecustomersView1.selected_for_emailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isaddress_book_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.address_book_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setaddress_book_idNull()
            Me(Me.tablecustomersView1.address_book_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_genderNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.entry_genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_genderNull()
            Me(Me.tablecustomersView1.entry_genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_companyNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.entry_companyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_companyNull()
            Me(Me.tablecustomersView1.entry_companyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_firstnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.entry_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_firstnameNull()
            Me(Me.tablecustomersView1.entry_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_lastnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.entry_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_lastnameNull()
            Me(Me.tablecustomersView1.entry_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_street_addressNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.entry_street_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_street_addressNull()
            Me(Me.tablecustomersView1.entry_street_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_suburbNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.entry_suburbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_suburbNull()
            Me(Me.tablecustomersView1.entry_suburbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_postcodeNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.entry_postcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_postcodeNull()
            Me(Me.tablecustomersView1.entry_postcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_cityNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.entry_cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_cityNull()
            Me(Me.tablecustomersView1.entry_cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_stateNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.entry_stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_stateNull()
            Me(Me.tablecustomersView1.entry_stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_country_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.entry_country_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_country_idNull()
            Me(Me.tablecustomersView1.entry_country_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_zone_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomersView1.entry_zone_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_zone_idNull()
            Me(Me.tablecustomersView1.entry_zone_idColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class languagesRow
        Inherits Global.System.Data.DataRow
        
        Private tablelanguages As languagesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablelanguages = CType(Me.Table,languagesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property languages_id() As Integer
            Get
                Return CType(Me(Me.tablelanguages.languages_idColumn),Integer)
            End Get
            Set
                Me(Me.tablelanguages.languages_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name() As String
            Get
                Return CType(Me(Me.tablelanguages.nameColumn),String)
            End Get
            Set
                Me(Me.tablelanguages.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code() As String
            Get
                Return CType(Me(Me.tablelanguages.codeColumn),String)
            End Get
            Set
                Me(Me.tablelanguages.codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property image() As String
            Get
                Try 
                    Return CType(Me(Me.tablelanguages.imageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'image' in table 'languages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelanguages.imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property directory() As String
            Get
                Try 
                    Return CType(Me(Me.tablelanguages.directoryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'directory' in table 'languages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelanguages.directoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sort_order() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelanguages.sort_orderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sort_order' in table 'languages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelanguages.sort_orderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsimageNull() As Boolean
            Return Me.IsNull(Me.tablelanguages.imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetimageNull()
            Me(Me.tablelanguages.imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdirectoryNull() As Boolean
            Return Me.IsNull(Me.tablelanguages.directoryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdirectoryNull()
            Me(Me.tablelanguages.directoryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issort_orderNull() As Boolean
            Return Me.IsNull(Me.tablelanguages.sort_orderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsort_orderNull()
            Me(Me.tablelanguages.sort_orderColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class siteRow
        Inherits Global.System.Data.DataRow
        
        Private tablesite As siteDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablesite = CType(Me.Table,siteDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablesite.site_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'site_id' in table 'site' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesite.site_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site_name() As String
            Get
                Return CType(Me(Me.tablesite.site_nameColumn),String)
            End Get
            Set
                Me(Me.tablesite.site_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site_link() As String
            Get
                Try 
                    Return CType(Me(Me.tablesite.site_linkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'site_link' in table 'site' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesite.site_linkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property logo() As String
            Get
                Try 
                    Return CType(Me(Me.tablesite.logoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'logo' in table 'site' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesite.logoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issite_idNull() As Boolean
            Return Me.IsNull(Me.tablesite.site_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsite_idNull()
            Me(Me.tablesite.site_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issite_linkNull() As Boolean
            Return Me.IsNull(Me.tablesite.site_linkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsite_linkNull()
            Me(Me.tablesite.site_linkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslogoNull() As Boolean
            Return Me.IsNull(Me.tablesite.logoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlogoNull()
            Me(Me.tablesite.logoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class mail_messagesRow
        Inherits Global.System.Data.DataRow
        
        Private tablemail_messages As mail_messagesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablemail_messages = CType(Me.Table,mail_messagesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_messages_id() As Integer
            Get
                Return CType(Me(Me.tablemail_messages.mail_messages_idColumn),Integer)
            End Get
            Set
                Me(Me.tablemail_messages.mail_messages_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property language_id() As Integer
            Get
                Return CType(Me(Me.tablemail_messages.language_idColumn),Integer)
            End Get
            Set
                Me(Me.tablemail_messages.language_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property messages_subject() As String
            Get
                Return CType(Me(Me.tablemail_messages.messages_subjectColumn),String)
            End Get
            Set
                Me(Me.tablemail_messages.messages_subjectColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property messages_title() As String
            Get
                Return CType(Me(Me.tablemail_messages.messages_titleColumn),String)
            End Get
            Set
                Me(Me.tablemail_messages.messages_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property messages_html() As String
            Get
                Return CType(Me(Me.tablemail_messages.messages_htmlColumn),String)
            End Get
            Set
                Me(Me.tablemail_messages.messages_htmlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Return CType(Me(Me.tablemail_messages.commentColumn),String)
            End Get
            Set
                Me(Me.tablemail_messages.commentColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Offline_Payment_Recovery_FlowRow
        Inherits Global.System.Data.DataRow
        
        Private tableOffline_Payment_Recovery_Flow As Offline_Payment_Recovery_FlowDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOffline_Payment_Recovery_Flow = CType(Me.Table,Offline_Payment_Recovery_FlowDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableOffline_Payment_Recovery_Flow.totalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'total' in table 'Offline_Payment_Recovery_Flow' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOffline_Payment_Recovery_Flow.totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property status_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableOffline_Payment_Recovery_Flow.status_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'status_id' in table 'Offline_Payment_Recovery_Flow' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableOffline_Payment_Recovery_Flow.status_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property status_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableOffline_Payment_Recovery_Flow.status_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'status_name' in table 'Offline_Payment_Recovery_Flow' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableOffline_Payment_Recovery_Flow.status_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstotalNull() As Boolean
            Return Me.IsNull(Me.tableOffline_Payment_Recovery_Flow.totalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettotalNull()
            Me(Me.tableOffline_Payment_Recovery_Flow.totalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstatus_idNull() As Boolean
            Return Me.IsNull(Me.tableOffline_Payment_Recovery_Flow.status_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstatus_idNull()
            Me(Me.tableOffline_Payment_Recovery_Flow.status_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstatus_nameNull() As Boolean
            Return Me.IsNull(Me.tableOffline_Payment_Recovery_Flow.status_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstatus_nameNull()
            Me(Me.tableOffline_Payment_Recovery_Flow.status_nameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Offline_Payment_Step_View1Row
        Inherits Global.System.Data.DataRow
        
        Private tableOffline_Payment_Step_View1 As Offline_Payment_Step_View1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOffline_Payment_Step_View1 = CType(Me.Table,Offline_Payment_Step_View1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_offline_request_id() As Integer
            Get
                Return CType(Me(Me.tableOffline_Payment_Step_View1.payment_offline_request_idColumn),Integer)
            End Get
            Set
                Me(Me.tableOffline_Payment_Step_View1.payment_offline_request_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableOffline_Payment_Step_View1.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'Offline_Payment_Step_View1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableOffline_Payment_Step_View1.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableOffline_Payment_Step_View1.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableOffline_Payment_Step_View1.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetOffline_DvdAtHomeRows() As Offline_DvdAtHomeRow()
            If (Me.Table.ChildRelations("Offline_Payment_Step_View1_Offline_DvdAtHome") Is Nothing) Then
                Return New Offline_DvdAtHomeRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Offline_Payment_Step_View1_Offline_DvdAtHome")),Offline_DvdAtHomeRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Offline_DvdAtHomeRow
        Inherits Global.System.Data.DataRow
        
        Private tableOffline_DvdAtHome As Offline_DvdAtHomeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOffline_DvdAtHome = CType(Me.Table,Offline_DvdAtHomeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableOffline_DvdAtHome.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'Offline_DvdAtHome' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOffline_DvdAtHome.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Offline_Payment_Step_View1Row() As Offline_Payment_Step_View1Row
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Offline_Payment_Step_View1_Offline_DvdAtHome")),Offline_Payment_Step_View1Row)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Offline_Payment_Step_View1_Offline_DvdAtHome"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableOffline_DvdAtHome.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableOffline_DvdAtHome.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ogone_batchRow
        Inherits Global.System.Data.DataRow
        
        Private tableogone_batch As ogone_batchDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableogone_batch = CType(Me.Table,ogone_batchDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_batch_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableogone_batch.ogone_batch_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_batch_id' in table 'ogone_batch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_batch.ogone_batch_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_batch_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableogone_batch.ogone_batch_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_batch_date' in table 'ogone_batch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_batch.ogone_batch_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_batch_output() As String
            Get
                Try 
                    Return CType(Me(Me.tableogone_batch.ogone_batch_outputColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_batch_output' in table 'ogone_batch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_batch.ogone_batch_outputColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_batch_result() As String
            Get
                Try 
                    Return CType(Me(Me.tableogone_batch.ogone_batch_resultColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_batch_result' in table 'ogone_batch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_batch.ogone_batch_resultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_batch_idNull() As Boolean
            Return Me.IsNull(Me.tableogone_batch.ogone_batch_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_batch_idNull()
            Me(Me.tableogone_batch.ogone_batch_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_batch_dateNull() As Boolean
            Return Me.IsNull(Me.tableogone_batch.ogone_batch_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_batch_dateNull()
            Me(Me.tableogone_batch.ogone_batch_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_batch_outputNull() As Boolean
            Return Me.IsNull(Me.tableogone_batch.ogone_batch_outputColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_batch_outputNull()
            Me(Me.tableogone_batch.ogone_batch_outputColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_batch_resultNull() As Boolean
            Return Me.IsNull(Me.tableogone_batch.ogone_batch_resultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_batch_resultNull()
            Me(Me.tableogone_batch.ogone_batch_resultColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class EurofidesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EurofidesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As EurofidesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As EurofidesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class payment_offline_requestRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As payment_offline_requestRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As payment_offline_requestRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As payment_offline_requestRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class OgoneExpRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OgoneExpRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As OgoneExpRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As OgoneExpRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class customersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As customersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As customersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As customersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class customersView1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As customersView1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As customersView1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As customersView1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class languagesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As languagesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As languagesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As languagesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class siteRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As siteRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As siteRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As siteRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class mail_messagesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As mail_messagesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As mail_messagesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As mail_messagesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Offline_Payment_Recovery_FlowRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Offline_Payment_Recovery_FlowRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Offline_Payment_Recovery_FlowRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Offline_Payment_Recovery_FlowRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Offline_Payment_Step_View1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Offline_Payment_Step_View1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Offline_Payment_Step_View1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Offline_Payment_Step_View1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Offline_DvdAtHomeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Offline_DvdAtHomeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Offline_DvdAtHomeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Offline_DvdAtHomeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ogone_batchRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ogone_batchRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ogone_batchRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ogone_batchRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
