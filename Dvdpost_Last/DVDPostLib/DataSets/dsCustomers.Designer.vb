'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4959
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsCustomers"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsCustomers
    Inherits Global.System.Data.DataSet
    
    Private tablecustomers As customersDataTable
    
    Private tablecustomers_info As customers_infoDataTable
    
    Private tablecustomers_instant_profile As customers_instant_profileDataTable
    
    Private tablemail_messages As mail_messagesDataTable
    
    Private tablemail_messages_sent_history As mail_messages_sent_historyDataTable
    
    Private tablecustomers_view1 As customers_view1DataTable
    
    Private tablemail_messages1 As mail_messages1DataTable
    
    Private tablelanguages As languagesDataTable
    
    Private tableorders_status_history As orders_status_historyDataTable
    
    Private tableorders As ordersDataTable
    
    Private tableorders_products As orders_productsDataTable
    
    Private tableproducts As productsDataTable
    
    Private tableproducts_adult As products_adultDataTable
    
    Private tableproducts_description As products_descriptionDataTable
    
    Private tabledirectors As directorsDataTable
    
    Private tableproducts_actors_view1 As products_actors_view1DataTable
    
    Private tableprod_instock_image_view1 As prod_instock_image_view1DataTable
    
    Private tablecustomers_view2 As customers_view2DataTable
    
    Private tableabo As aboDataTable
    
    Private tableabo_action As abo_actionDataTable
    
    Private tablecustomers_mike As customers_mikeDataTable
    
    Private tablecustomers_nl_temp As customers_nl_tempDataTable
    
    Private tablesite As siteDataTable
    
    Private tablepropsects As propsectsDataTable
    
    Private tablecustomers_abo_payment_method As customers_abo_payment_methodDataTable
    
    Private tablephone_request As phone_requestDataTable
    
    Private tableweekdays As weekdaysDataTable
    
    Private tablephone_request_hours As phone_request_hoursDataTable
    
    Private tablephone_request_reason As phone_request_reasonDataTable
    
    Private tableQuizz As QuizzDataTable
    
    Private tablecode_tmp As code_tmpDataTable
    
    Private tablecustserv_view1 As custserv_view1DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("customers")) Is Nothing) Then
                MyBase.Tables.Add(New customersDataTable(ds.Tables("customers")))
            End If
            If (Not (ds.Tables("customers_info")) Is Nothing) Then
                MyBase.Tables.Add(New customers_infoDataTable(ds.Tables("customers_info")))
            End If
            If (Not (ds.Tables("customers_instant_profile")) Is Nothing) Then
                MyBase.Tables.Add(New customers_instant_profileDataTable(ds.Tables("customers_instant_profile")))
            End If
            If (Not (ds.Tables("mail_messages")) Is Nothing) Then
                MyBase.Tables.Add(New mail_messagesDataTable(ds.Tables("mail_messages")))
            End If
            If (Not (ds.Tables("mail_messages_sent_history")) Is Nothing) Then
                MyBase.Tables.Add(New mail_messages_sent_historyDataTable(ds.Tables("mail_messages_sent_history")))
            End If
            If (Not (ds.Tables("customers_view1")) Is Nothing) Then
                MyBase.Tables.Add(New customers_view1DataTable(ds.Tables("customers_view1")))
            End If
            If (Not (ds.Tables("mail_messages1")) Is Nothing) Then
                MyBase.Tables.Add(New mail_messages1DataTable(ds.Tables("mail_messages1")))
            End If
            If (Not (ds.Tables("languages")) Is Nothing) Then
                MyBase.Tables.Add(New languagesDataTable(ds.Tables("languages")))
            End If
            If (Not (ds.Tables("orders_status_history")) Is Nothing) Then
                MyBase.Tables.Add(New orders_status_historyDataTable(ds.Tables("orders_status_history")))
            End If
            If (Not (ds.Tables("orders")) Is Nothing) Then
                MyBase.Tables.Add(New ordersDataTable(ds.Tables("orders")))
            End If
            If (Not (ds.Tables("orders_products")) Is Nothing) Then
                MyBase.Tables.Add(New orders_productsDataTable(ds.Tables("orders_products")))
            End If
            If (Not (ds.Tables("products")) Is Nothing) Then
                MyBase.Tables.Add(New productsDataTable(ds.Tables("products")))
            End If
            If (Not (ds.Tables("products_adult")) Is Nothing) Then
                MyBase.Tables.Add(New products_adultDataTable(ds.Tables("products_adult")))
            End If
            If (Not (ds.Tables("products_description")) Is Nothing) Then
                MyBase.Tables.Add(New products_descriptionDataTable(ds.Tables("products_description")))
            End If
            If (Not (ds.Tables("directors")) Is Nothing) Then
                MyBase.Tables.Add(New directorsDataTable(ds.Tables("directors")))
            End If
            If (Not (ds.Tables("products_actors_view1")) Is Nothing) Then
                MyBase.Tables.Add(New products_actors_view1DataTable(ds.Tables("products_actors_view1")))
            End If
            If (Not (ds.Tables("prod_instock_image_view1")) Is Nothing) Then
                MyBase.Tables.Add(New prod_instock_image_view1DataTable(ds.Tables("prod_instock_image_view1")))
            End If
            If (Not (ds.Tables("customers_view2")) Is Nothing) Then
                MyBase.Tables.Add(New customers_view2DataTable(ds.Tables("customers_view2")))
            End If
            If (Not (ds.Tables("abo")) Is Nothing) Then
                MyBase.Tables.Add(New aboDataTable(ds.Tables("abo")))
            End If
            If (Not (ds.Tables("abo_action")) Is Nothing) Then
                MyBase.Tables.Add(New abo_actionDataTable(ds.Tables("abo_action")))
            End If
            If (Not (ds.Tables("customers_mike")) Is Nothing) Then
                MyBase.Tables.Add(New customers_mikeDataTable(ds.Tables("customers_mike")))
            End If
            If (Not (ds.Tables("customers_nl_temp")) Is Nothing) Then
                MyBase.Tables.Add(New customers_nl_tempDataTable(ds.Tables("customers_nl_temp")))
            End If
            If (Not (ds.Tables("site")) Is Nothing) Then
                MyBase.Tables.Add(New siteDataTable(ds.Tables("site")))
            End If
            If (Not (ds.Tables("propsects")) Is Nothing) Then
                MyBase.Tables.Add(New propsectsDataTable(ds.Tables("propsects")))
            End If
            If (Not (ds.Tables("customers_abo_payment_method")) Is Nothing) Then
                MyBase.Tables.Add(New customers_abo_payment_methodDataTable(ds.Tables("customers_abo_payment_method")))
            End If
            If (Not (ds.Tables("phone_request")) Is Nothing) Then
                MyBase.Tables.Add(New phone_requestDataTable(ds.Tables("phone_request")))
            End If
            If (Not (ds.Tables("weekdays")) Is Nothing) Then
                MyBase.Tables.Add(New weekdaysDataTable(ds.Tables("weekdays")))
            End If
            If (Not (ds.Tables("phone_request_hours")) Is Nothing) Then
                MyBase.Tables.Add(New phone_request_hoursDataTable(ds.Tables("phone_request_hours")))
            End If
            If (Not (ds.Tables("phone_request_reason")) Is Nothing) Then
                MyBase.Tables.Add(New phone_request_reasonDataTable(ds.Tables("phone_request_reason")))
            End If
            If (Not (ds.Tables("Quizz")) Is Nothing) Then
                MyBase.Tables.Add(New QuizzDataTable(ds.Tables("Quizz")))
            End If
            If (Not (ds.Tables("code_tmp")) Is Nothing) Then
                MyBase.Tables.Add(New code_tmpDataTable(ds.Tables("code_tmp")))
            End If
            If (Not (ds.Tables("custserv_view1")) Is Nothing) Then
                MyBase.Tables.Add(New custserv_view1DataTable(ds.Tables("custserv_view1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property customers() As customersDataTable
        Get
            Return Me.tablecustomers
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property customers_info() As customers_infoDataTable
        Get
            Return Me.tablecustomers_info
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property customers_instant_profile() As customers_instant_profileDataTable
        Get
            Return Me.tablecustomers_instant_profile
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property mail_messages() As mail_messagesDataTable
        Get
            Return Me.tablemail_messages
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property mail_messages_sent_history() As mail_messages_sent_historyDataTable
        Get
            Return Me.tablemail_messages_sent_history
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property customers_view1() As customers_view1DataTable
        Get
            Return Me.tablecustomers_view1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property mail_messages1() As mail_messages1DataTable
        Get
            Return Me.tablemail_messages1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property languages() As languagesDataTable
        Get
            Return Me.tablelanguages
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property orders_status_history() As orders_status_historyDataTable
        Get
            Return Me.tableorders_status_history
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property orders() As ordersDataTable
        Get
            Return Me.tableorders
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property orders_products() As orders_productsDataTable
        Get
            Return Me.tableorders_products
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property products() As productsDataTable
        Get
            Return Me.tableproducts
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property products_adult() As products_adultDataTable
        Get
            Return Me.tableproducts_adult
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property products_description() As products_descriptionDataTable
        Get
            Return Me.tableproducts_description
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property directors() As directorsDataTable
        Get
            Return Me.tabledirectors
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property products_actors_view1() As products_actors_view1DataTable
        Get
            Return Me.tableproducts_actors_view1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property prod_instock_image_view1() As prod_instock_image_view1DataTable
        Get
            Return Me.tableprod_instock_image_view1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property customers_view2() As customers_view2DataTable
        Get
            Return Me.tablecustomers_view2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property abo() As aboDataTable
        Get
            Return Me.tableabo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property abo_action() As abo_actionDataTable
        Get
            Return Me.tableabo_action
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property customers_mike() As customers_mikeDataTable
        Get
            Return Me.tablecustomers_mike
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property customers_nl_temp() As customers_nl_tempDataTable
        Get
            Return Me.tablecustomers_nl_temp
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property site() As siteDataTable
        Get
            Return Me.tablesite
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property propsects() As propsectsDataTable
        Get
            Return Me.tablepropsects
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property customers_abo_payment_method() As customers_abo_payment_methodDataTable
        Get
            Return Me.tablecustomers_abo_payment_method
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property phone_request() As phone_requestDataTable
        Get
            Return Me.tablephone_request
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property weekdays() As weekdaysDataTable
        Get
            Return Me.tableweekdays
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property phone_request_hours() As phone_request_hoursDataTable
        Get
            Return Me.tablephone_request_hours
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property phone_request_reason() As phone_request_reasonDataTable
        Get
            Return Me.tablephone_request_reason
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Quizz() As QuizzDataTable
        Get
            Return Me.tableQuizz
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property code_tmp() As code_tmpDataTable
        Get
            Return Me.tablecode_tmp
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property custserv_view1() As custserv_view1DataTable
        Get
            Return Me.tablecustserv_view1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsCustomers = CType(MyBase.Clone,dsCustomers)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("customers")) Is Nothing) Then
                MyBase.Tables.Add(New customersDataTable(ds.Tables("customers")))
            End If
            If (Not (ds.Tables("customers_info")) Is Nothing) Then
                MyBase.Tables.Add(New customers_infoDataTable(ds.Tables("customers_info")))
            End If
            If (Not (ds.Tables("customers_instant_profile")) Is Nothing) Then
                MyBase.Tables.Add(New customers_instant_profileDataTable(ds.Tables("customers_instant_profile")))
            End If
            If (Not (ds.Tables("mail_messages")) Is Nothing) Then
                MyBase.Tables.Add(New mail_messagesDataTable(ds.Tables("mail_messages")))
            End If
            If (Not (ds.Tables("mail_messages_sent_history")) Is Nothing) Then
                MyBase.Tables.Add(New mail_messages_sent_historyDataTable(ds.Tables("mail_messages_sent_history")))
            End If
            If (Not (ds.Tables("customers_view1")) Is Nothing) Then
                MyBase.Tables.Add(New customers_view1DataTable(ds.Tables("customers_view1")))
            End If
            If (Not (ds.Tables("mail_messages1")) Is Nothing) Then
                MyBase.Tables.Add(New mail_messages1DataTable(ds.Tables("mail_messages1")))
            End If
            If (Not (ds.Tables("languages")) Is Nothing) Then
                MyBase.Tables.Add(New languagesDataTable(ds.Tables("languages")))
            End If
            If (Not (ds.Tables("orders_status_history")) Is Nothing) Then
                MyBase.Tables.Add(New orders_status_historyDataTable(ds.Tables("orders_status_history")))
            End If
            If (Not (ds.Tables("orders")) Is Nothing) Then
                MyBase.Tables.Add(New ordersDataTable(ds.Tables("orders")))
            End If
            If (Not (ds.Tables("orders_products")) Is Nothing) Then
                MyBase.Tables.Add(New orders_productsDataTable(ds.Tables("orders_products")))
            End If
            If (Not (ds.Tables("products")) Is Nothing) Then
                MyBase.Tables.Add(New productsDataTable(ds.Tables("products")))
            End If
            If (Not (ds.Tables("products_adult")) Is Nothing) Then
                MyBase.Tables.Add(New products_adultDataTable(ds.Tables("products_adult")))
            End If
            If (Not (ds.Tables("products_description")) Is Nothing) Then
                MyBase.Tables.Add(New products_descriptionDataTable(ds.Tables("products_description")))
            End If
            If (Not (ds.Tables("directors")) Is Nothing) Then
                MyBase.Tables.Add(New directorsDataTable(ds.Tables("directors")))
            End If
            If (Not (ds.Tables("products_actors_view1")) Is Nothing) Then
                MyBase.Tables.Add(New products_actors_view1DataTable(ds.Tables("products_actors_view1")))
            End If
            If (Not (ds.Tables("prod_instock_image_view1")) Is Nothing) Then
                MyBase.Tables.Add(New prod_instock_image_view1DataTable(ds.Tables("prod_instock_image_view1")))
            End If
            If (Not (ds.Tables("customers_view2")) Is Nothing) Then
                MyBase.Tables.Add(New customers_view2DataTable(ds.Tables("customers_view2")))
            End If
            If (Not (ds.Tables("abo")) Is Nothing) Then
                MyBase.Tables.Add(New aboDataTable(ds.Tables("abo")))
            End If
            If (Not (ds.Tables("abo_action")) Is Nothing) Then
                MyBase.Tables.Add(New abo_actionDataTable(ds.Tables("abo_action")))
            End If
            If (Not (ds.Tables("customers_mike")) Is Nothing) Then
                MyBase.Tables.Add(New customers_mikeDataTable(ds.Tables("customers_mike")))
            End If
            If (Not (ds.Tables("customers_nl_temp")) Is Nothing) Then
                MyBase.Tables.Add(New customers_nl_tempDataTable(ds.Tables("customers_nl_temp")))
            End If
            If (Not (ds.Tables("site")) Is Nothing) Then
                MyBase.Tables.Add(New siteDataTable(ds.Tables("site")))
            End If
            If (Not (ds.Tables("propsects")) Is Nothing) Then
                MyBase.Tables.Add(New propsectsDataTable(ds.Tables("propsects")))
            End If
            If (Not (ds.Tables("customers_abo_payment_method")) Is Nothing) Then
                MyBase.Tables.Add(New customers_abo_payment_methodDataTable(ds.Tables("customers_abo_payment_method")))
            End If
            If (Not (ds.Tables("phone_request")) Is Nothing) Then
                MyBase.Tables.Add(New phone_requestDataTable(ds.Tables("phone_request")))
            End If
            If (Not (ds.Tables("weekdays")) Is Nothing) Then
                MyBase.Tables.Add(New weekdaysDataTable(ds.Tables("weekdays")))
            End If
            If (Not (ds.Tables("phone_request_hours")) Is Nothing) Then
                MyBase.Tables.Add(New phone_request_hoursDataTable(ds.Tables("phone_request_hours")))
            End If
            If (Not (ds.Tables("phone_request_reason")) Is Nothing) Then
                MyBase.Tables.Add(New phone_request_reasonDataTable(ds.Tables("phone_request_reason")))
            End If
            If (Not (ds.Tables("Quizz")) Is Nothing) Then
                MyBase.Tables.Add(New QuizzDataTable(ds.Tables("Quizz")))
            End If
            If (Not (ds.Tables("code_tmp")) Is Nothing) Then
                MyBase.Tables.Add(New code_tmpDataTable(ds.Tables("code_tmp")))
            End If
            If (Not (ds.Tables("custserv_view1")) Is Nothing) Then
                MyBase.Tables.Add(New custserv_view1DataTable(ds.Tables("custserv_view1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablecustomers = CType(MyBase.Tables("customers"),customersDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustomers) Is Nothing) Then
                Me.tablecustomers.InitVars
            End If
        End If
        Me.tablecustomers_info = CType(MyBase.Tables("customers_info"),customers_infoDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustomers_info) Is Nothing) Then
                Me.tablecustomers_info.InitVars
            End If
        End If
        Me.tablecustomers_instant_profile = CType(MyBase.Tables("customers_instant_profile"),customers_instant_profileDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustomers_instant_profile) Is Nothing) Then
                Me.tablecustomers_instant_profile.InitVars
            End If
        End If
        Me.tablemail_messages = CType(MyBase.Tables("mail_messages"),mail_messagesDataTable)
        If (initTable = true) Then
            If (Not (Me.tablemail_messages) Is Nothing) Then
                Me.tablemail_messages.InitVars
            End If
        End If
        Me.tablemail_messages_sent_history = CType(MyBase.Tables("mail_messages_sent_history"),mail_messages_sent_historyDataTable)
        If (initTable = true) Then
            If (Not (Me.tablemail_messages_sent_history) Is Nothing) Then
                Me.tablemail_messages_sent_history.InitVars
            End If
        End If
        Me.tablecustomers_view1 = CType(MyBase.Tables("customers_view1"),customers_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustomers_view1) Is Nothing) Then
                Me.tablecustomers_view1.InitVars
            End If
        End If
        Me.tablemail_messages1 = CType(MyBase.Tables("mail_messages1"),mail_messages1DataTable)
        If (initTable = true) Then
            If (Not (Me.tablemail_messages1) Is Nothing) Then
                Me.tablemail_messages1.InitVars
            End If
        End If
        Me.tablelanguages = CType(MyBase.Tables("languages"),languagesDataTable)
        If (initTable = true) Then
            If (Not (Me.tablelanguages) Is Nothing) Then
                Me.tablelanguages.InitVars
            End If
        End If
        Me.tableorders_status_history = CType(MyBase.Tables("orders_status_history"),orders_status_historyDataTable)
        If (initTable = true) Then
            If (Not (Me.tableorders_status_history) Is Nothing) Then
                Me.tableorders_status_history.InitVars
            End If
        End If
        Me.tableorders = CType(MyBase.Tables("orders"),ordersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableorders) Is Nothing) Then
                Me.tableorders.InitVars
            End If
        End If
        Me.tableorders_products = CType(MyBase.Tables("orders_products"),orders_productsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableorders_products) Is Nothing) Then
                Me.tableorders_products.InitVars
            End If
        End If
        Me.tableproducts = CType(MyBase.Tables("products"),productsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproducts) Is Nothing) Then
                Me.tableproducts.InitVars
            End If
        End If
        Me.tableproducts_adult = CType(MyBase.Tables("products_adult"),products_adultDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproducts_adult) Is Nothing) Then
                Me.tableproducts_adult.InitVars
            End If
        End If
        Me.tableproducts_description = CType(MyBase.Tables("products_description"),products_descriptionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproducts_description) Is Nothing) Then
                Me.tableproducts_description.InitVars
            End If
        End If
        Me.tabledirectors = CType(MyBase.Tables("directors"),directorsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledirectors) Is Nothing) Then
                Me.tabledirectors.InitVars
            End If
        End If
        Me.tableproducts_actors_view1 = CType(MyBase.Tables("products_actors_view1"),products_actors_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableproducts_actors_view1) Is Nothing) Then
                Me.tableproducts_actors_view1.InitVars
            End If
        End If
        Me.tableprod_instock_image_view1 = CType(MyBase.Tables("prod_instock_image_view1"),prod_instock_image_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableprod_instock_image_view1) Is Nothing) Then
                Me.tableprod_instock_image_view1.InitVars
            End If
        End If
        Me.tablecustomers_view2 = CType(MyBase.Tables("customers_view2"),customers_view2DataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustomers_view2) Is Nothing) Then
                Me.tablecustomers_view2.InitVars
            End If
        End If
        Me.tableabo = CType(MyBase.Tables("abo"),aboDataTable)
        If (initTable = true) Then
            If (Not (Me.tableabo) Is Nothing) Then
                Me.tableabo.InitVars
            End If
        End If
        Me.tableabo_action = CType(MyBase.Tables("abo_action"),abo_actionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableabo_action) Is Nothing) Then
                Me.tableabo_action.InitVars
            End If
        End If
        Me.tablecustomers_mike = CType(MyBase.Tables("customers_mike"),customers_mikeDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustomers_mike) Is Nothing) Then
                Me.tablecustomers_mike.InitVars
            End If
        End If
        Me.tablecustomers_nl_temp = CType(MyBase.Tables("customers_nl_temp"),customers_nl_tempDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustomers_nl_temp) Is Nothing) Then
                Me.tablecustomers_nl_temp.InitVars
            End If
        End If
        Me.tablesite = CType(MyBase.Tables("site"),siteDataTable)
        If (initTable = true) Then
            If (Not (Me.tablesite) Is Nothing) Then
                Me.tablesite.InitVars
            End If
        End If
        Me.tablepropsects = CType(MyBase.Tables("propsects"),propsectsDataTable)
        If (initTable = true) Then
            If (Not (Me.tablepropsects) Is Nothing) Then
                Me.tablepropsects.InitVars
            End If
        End If
        Me.tablecustomers_abo_payment_method = CType(MyBase.Tables("customers_abo_payment_method"),customers_abo_payment_methodDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustomers_abo_payment_method) Is Nothing) Then
                Me.tablecustomers_abo_payment_method.InitVars
            End If
        End If
        Me.tablephone_request = CType(MyBase.Tables("phone_request"),phone_requestDataTable)
        If (initTable = true) Then
            If (Not (Me.tablephone_request) Is Nothing) Then
                Me.tablephone_request.InitVars
            End If
        End If
        Me.tableweekdays = CType(MyBase.Tables("weekdays"),weekdaysDataTable)
        If (initTable = true) Then
            If (Not (Me.tableweekdays) Is Nothing) Then
                Me.tableweekdays.InitVars
            End If
        End If
        Me.tablephone_request_hours = CType(MyBase.Tables("phone_request_hours"),phone_request_hoursDataTable)
        If (initTable = true) Then
            If (Not (Me.tablephone_request_hours) Is Nothing) Then
                Me.tablephone_request_hours.InitVars
            End If
        End If
        Me.tablephone_request_reason = CType(MyBase.Tables("phone_request_reason"),phone_request_reasonDataTable)
        If (initTable = true) Then
            If (Not (Me.tablephone_request_reason) Is Nothing) Then
                Me.tablephone_request_reason.InitVars
            End If
        End If
        Me.tableQuizz = CType(MyBase.Tables("Quizz"),QuizzDataTable)
        If (initTable = true) Then
            If (Not (Me.tableQuizz) Is Nothing) Then
                Me.tableQuizz.InitVars
            End If
        End If
        Me.tablecode_tmp = CType(MyBase.Tables("code_tmp"),code_tmpDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecode_tmp) Is Nothing) Then
                Me.tablecode_tmp.InitVars
            End If
        End If
        Me.tablecustserv_view1 = CType(MyBase.Tables("custserv_view1"),custserv_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustserv_view1) Is Nothing) Then
                Me.tablecustserv_view1.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsCustomers"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsCustomers.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablecustomers = New customersDataTable
        MyBase.Tables.Add(Me.tablecustomers)
        Me.tablecustomers_info = New customers_infoDataTable
        MyBase.Tables.Add(Me.tablecustomers_info)
        Me.tablecustomers_instant_profile = New customers_instant_profileDataTable
        MyBase.Tables.Add(Me.tablecustomers_instant_profile)
        Me.tablemail_messages = New mail_messagesDataTable
        MyBase.Tables.Add(Me.tablemail_messages)
        Me.tablemail_messages_sent_history = New mail_messages_sent_historyDataTable
        MyBase.Tables.Add(Me.tablemail_messages_sent_history)
        Me.tablecustomers_view1 = New customers_view1DataTable
        MyBase.Tables.Add(Me.tablecustomers_view1)
        Me.tablemail_messages1 = New mail_messages1DataTable
        MyBase.Tables.Add(Me.tablemail_messages1)
        Me.tablelanguages = New languagesDataTable
        MyBase.Tables.Add(Me.tablelanguages)
        Me.tableorders_status_history = New orders_status_historyDataTable
        MyBase.Tables.Add(Me.tableorders_status_history)
        Me.tableorders = New ordersDataTable
        MyBase.Tables.Add(Me.tableorders)
        Me.tableorders_products = New orders_productsDataTable
        MyBase.Tables.Add(Me.tableorders_products)
        Me.tableproducts = New productsDataTable
        MyBase.Tables.Add(Me.tableproducts)
        Me.tableproducts_adult = New products_adultDataTable
        MyBase.Tables.Add(Me.tableproducts_adult)
        Me.tableproducts_description = New products_descriptionDataTable
        MyBase.Tables.Add(Me.tableproducts_description)
        Me.tabledirectors = New directorsDataTable
        MyBase.Tables.Add(Me.tabledirectors)
        Me.tableproducts_actors_view1 = New products_actors_view1DataTable
        MyBase.Tables.Add(Me.tableproducts_actors_view1)
        Me.tableprod_instock_image_view1 = New prod_instock_image_view1DataTable
        MyBase.Tables.Add(Me.tableprod_instock_image_view1)
        Me.tablecustomers_view2 = New customers_view2DataTable
        MyBase.Tables.Add(Me.tablecustomers_view2)
        Me.tableabo = New aboDataTable
        MyBase.Tables.Add(Me.tableabo)
        Me.tableabo_action = New abo_actionDataTable
        MyBase.Tables.Add(Me.tableabo_action)
        Me.tablecustomers_mike = New customers_mikeDataTable
        MyBase.Tables.Add(Me.tablecustomers_mike)
        Me.tablecustomers_nl_temp = New customers_nl_tempDataTable
        MyBase.Tables.Add(Me.tablecustomers_nl_temp)
        Me.tablesite = New siteDataTable
        MyBase.Tables.Add(Me.tablesite)
        Me.tablepropsects = New propsectsDataTable
        MyBase.Tables.Add(Me.tablepropsects)
        Me.tablecustomers_abo_payment_method = New customers_abo_payment_methodDataTable
        MyBase.Tables.Add(Me.tablecustomers_abo_payment_method)
        Me.tablephone_request = New phone_requestDataTable
        MyBase.Tables.Add(Me.tablephone_request)
        Me.tableweekdays = New weekdaysDataTable
        MyBase.Tables.Add(Me.tableweekdays)
        Me.tablephone_request_hours = New phone_request_hoursDataTable
        MyBase.Tables.Add(Me.tablephone_request_hours)
        Me.tablephone_request_reason = New phone_request_reasonDataTable
        MyBase.Tables.Add(Me.tablephone_request_reason)
        Me.tableQuizz = New QuizzDataTable
        MyBase.Tables.Add(Me.tableQuizz)
        Me.tablecode_tmp = New code_tmpDataTable
        MyBase.Tables.Add(Me.tablecode_tmp)
        Me.tablecustserv_view1 = New custserv_view1DataTable
        MyBase.Tables.Add(Me.tablecustserv_view1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustomers() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustomers_info() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustomers_instant_profile() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializemail_messages() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializemail_messages_sent_history() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustomers_view1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializemail_messages1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializelanguages() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeorders_status_history() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeorders() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeorders_products() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeproducts() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeproducts_adult() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeproducts_description() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedirectors() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeproducts_actors_view1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeprod_instock_image_view1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustomers_view2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeabo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeabo_action() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustomers_mike() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustomers_nl_temp() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializesite() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializepropsects() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustomers_abo_payment_method() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializephone_request() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeweekdays() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializephone_request_hours() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializephone_request_reason() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeQuizz() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecode_tmp() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustserv_view1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsCustomers = New dsCustomers
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub customersRowChangeEventHandler(ByVal sender As Object, ByVal e As customersRowChangeEvent)
    
    Public Delegate Sub customers_infoRowChangeEventHandler(ByVal sender As Object, ByVal e As customers_infoRowChangeEvent)
    
    Public Delegate Sub customers_instant_profileRowChangeEventHandler(ByVal sender As Object, ByVal e As customers_instant_profileRowChangeEvent)
    
    Public Delegate Sub mail_messagesRowChangeEventHandler(ByVal sender As Object, ByVal e As mail_messagesRowChangeEvent)
    
    Public Delegate Sub mail_messages_sent_historyRowChangeEventHandler(ByVal sender As Object, ByVal e As mail_messages_sent_historyRowChangeEvent)
    
    Public Delegate Sub customers_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As customers_view1RowChangeEvent)
    
    Public Delegate Sub mail_messages1RowChangeEventHandler(ByVal sender As Object, ByVal e As mail_messages1RowChangeEvent)
    
    Public Delegate Sub languagesRowChangeEventHandler(ByVal sender As Object, ByVal e As languagesRowChangeEvent)
    
    Public Delegate Sub orders_status_historyRowChangeEventHandler(ByVal sender As Object, ByVal e As orders_status_historyRowChangeEvent)
    
    Public Delegate Sub ordersRowChangeEventHandler(ByVal sender As Object, ByVal e As ordersRowChangeEvent)
    
    Public Delegate Sub orders_productsRowChangeEventHandler(ByVal sender As Object, ByVal e As orders_productsRowChangeEvent)
    
    Public Delegate Sub productsRowChangeEventHandler(ByVal sender As Object, ByVal e As productsRowChangeEvent)
    
    Public Delegate Sub products_adultRowChangeEventHandler(ByVal sender As Object, ByVal e As products_adultRowChangeEvent)
    
    Public Delegate Sub products_descriptionRowChangeEventHandler(ByVal sender As Object, ByVal e As products_descriptionRowChangeEvent)
    
    Public Delegate Sub directorsRowChangeEventHandler(ByVal sender As Object, ByVal e As directorsRowChangeEvent)
    
    Public Delegate Sub products_actors_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As products_actors_view1RowChangeEvent)
    
    Public Delegate Sub prod_instock_image_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As prod_instock_image_view1RowChangeEvent)
    
    Public Delegate Sub customers_view2RowChangeEventHandler(ByVal sender As Object, ByVal e As customers_view2RowChangeEvent)
    
    Public Delegate Sub aboRowChangeEventHandler(ByVal sender As Object, ByVal e As aboRowChangeEvent)
    
    Public Delegate Sub abo_actionRowChangeEventHandler(ByVal sender As Object, ByVal e As abo_actionRowChangeEvent)
    
    Public Delegate Sub customers_mikeRowChangeEventHandler(ByVal sender As Object, ByVal e As customers_mikeRowChangeEvent)
    
    Public Delegate Sub customers_nl_tempRowChangeEventHandler(ByVal sender As Object, ByVal e As customers_nl_tempRowChangeEvent)
    
    Public Delegate Sub siteRowChangeEventHandler(ByVal sender As Object, ByVal e As siteRowChangeEvent)
    
    Public Delegate Sub propsectsRowChangeEventHandler(ByVal sender As Object, ByVal e As propsectsRowChangeEvent)
    
    Public Delegate Sub customers_abo_payment_methodRowChangeEventHandler(ByVal sender As Object, ByVal e As customers_abo_payment_methodRowChangeEvent)
    
    Public Delegate Sub phone_requestRowChangeEventHandler(ByVal sender As Object, ByVal e As phone_requestRowChangeEvent)
    
    Public Delegate Sub weekdaysRowChangeEventHandler(ByVal sender As Object, ByVal e As weekdaysRowChangeEvent)
    
    Public Delegate Sub phone_request_hoursRowChangeEventHandler(ByVal sender As Object, ByVal e As phone_request_hoursRowChangeEvent)
    
    Public Delegate Sub phone_request_reasonRowChangeEventHandler(ByVal sender As Object, ByVal e As phone_request_reasonRowChangeEvent)
    
    Public Delegate Sub QuizzRowChangeEventHandler(ByVal sender As Object, ByVal e As QuizzRowChangeEvent)
    
    Public Delegate Sub code_tmpRowChangeEventHandler(ByVal sender As Object, ByVal e As code_tmpRowChangeEvent)
    
    Public Delegate Sub custserv_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As custserv_view1RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class customersDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_gender As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_dob As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_default_address_id As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columncustomers_telephone_evening As Global.System.Data.DataColumn
        
        Private columncustomers_fax As Global.System.Data.DataColumn
        
        Private columncustomers_password As Global.System.Data.DataColumn
        
        Private columncustomers_newsletter As Global.System.Data.DataColumn
        
        Private columncustomers_newsletterpartner As Global.System.Data.DataColumn
        
        Private columncustomers_privilege As Global.System.Data.DataColumn
        
        Private columncustomers_privilege_balance As Global.System.Data.DataColumn
        
        Private columncustomers_garantie As Global.System.Data.DataColumn
        
        Private columnsponsoring_code As Global.System.Data.DataColumn
        
        Private columnsponsored_code As Global.System.Data.DataColumn
        
        Private columncustomers_abo As Global.System.Data.DataColumn
        
        Private columncustomers_abo_suspended As Global.System.Data.DataColumn
        
        Private columncustomers_abo_type As Global.System.Data.DataColumn
        
        Private columnflagminiat1995 As Global.System.Data.DataColumn
        
        Private columncustomers_abo_method As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_adult As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_adult As Global.System.Data.DataColumn
        
        Private columnthrottling As Global.System.Data.DataColumn
        
        Private columncustomers_abo_validityto As Global.System.Data.DataColumn
        
        Private columncustomers_abo_rank As Global.System.Data.DataColumn
        
        Private columncustomers_abo_start_rentthismonth As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_credit As Global.System.Data.DataColumn
        
        Private columncustomers_abo_multishipment As Global.System.Data.DataColumn
        
        Private columncustomers_abo_discount_recurring_to_date As Global.System.Data.DataColumn
        
        Private columnabotested As Global.System.Data.DataColumn
        
        Private columncustomers_abo_status As Global.System.Data.DataColumn
        
        Private columncustomers_abo_payment_method As Global.System.Data.DataColumn
        
        Private columndomiciliation_status As Global.System.Data.DataColumn
        
        Private columndomiciliation_debiter_name As Global.System.Data.DataColumn
        
        Private columndomiciliation_number As Global.System.Data.DataColumn
        
        Private columndomiciliation_account_number As Global.System.Data.DataColumn
        
        Private columnadult_pwd As Global.System.Data.DataColumn
        
        Private columnogone_card_type As Global.System.Data.DataColumn
        
        Private columnogone_card_no As Global.System.Data.DataColumn
        
        Private columnogone_exp_date As Global.System.Data.DataColumn
        
        Private columnogone_owner As Global.System.Data.DataColumn
        
        Private columnogone_cc_expiration_status As Global.System.Data.DataColumn
        
        Private columnoffline_payment_status As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columnvip As Global.System.Data.DataColumn
        
        Private columnblack_listed As Global.System.Data.DataColumn
        
        Private columnred_listed As Global.System.Data.DataColumn
        
        Private columnsm_eligible As Global.System.Data.DataColumn
        
        Private columncustomers_enquiry_id As Global.System.Data.DataColumn
        
        Private columndate_first_delivery As Global.System.Data.DataColumn
        
        Private columnmail_wl_adult_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmail_wl_norm_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmgm_points As Global.System.Data.DataColumn
        
        Private columnwishlist_kind As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_of_last_logon As Global.System.Data.DataColumn
        
        Private columncustomers_info_number_of_logons As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_account_created As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_account_last_modified As Global.System.Data.DataColumn
        
        Private columnglobal_product_notifications As Global.System.Data.DataColumn
        
        Private columncustomers_language As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        Private columnpartners_id As Global.System.Data.DataColumn
        
        Private columnbelgiqueloisirs_id As Global.System.Data.DataColumn
        
        Private columnselected_for_email As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "customers"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_dob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_default_address_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_default_address_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephone_eveningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone_evening
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_fax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterpartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletterpartner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilegeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilege_balanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege_balance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_garantieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_garantie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsoring_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsoring_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsored_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsored_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_suspendedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_suspended
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property flagminiat1995Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnflagminiat1995
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property throttlingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnthrottling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_rankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_rank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_start_rentthismonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_start_rentthismonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_creditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_credit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_multishipmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_multishipment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_discount_recurring_to_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_discount_recurring_to_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abotestedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabotested
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_payment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_debiter_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_debiter_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_account_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_account_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property adult_pwdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadult_pwd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_exp_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_exp_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_cc_expiration_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_cc_expiration_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property offline_payment_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoffline_payment_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property black_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnblack_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property red_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnred_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sm_eligibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsm_eligible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_enquiry_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_enquiry_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_first_deliveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_first_delivery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_adult_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_adult_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_norm_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_norm_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mgm_pointsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmgm_points
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wishlist_kindColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwishlist_kind
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_of_last_logonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_of_last_logon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_number_of_logonsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_number_of_logons
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_account_createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_account_created
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_account_last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_account_last_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property global_product_notificationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnglobal_product_notifications
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property partners_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartners_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property belgiqueloisirs_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbelgiqueloisirs_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property selected_for_emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnselected_for_email
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As customersRow
            Get
                Return CType(Me.Rows(index),customersRow)
            End Get
        End Property
        
        Public Event customersRowChanging As customersRowChangeEventHandler
        
        Public Event customersRowChanged As customersRowChangeEventHandler
        
        Public Event customersRowDeleting As customersRowChangeEventHandler
        
        Public Event customersRowDeleted As customersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddcustomersRow(ByVal row As customersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddcustomersRow( _
                    ByVal customers_gender As String,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_lastname As String,  _
                    ByVal customers_dob As Date,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_default_address_id As Integer,  _
                    ByVal customers_telephone As String,  _
                    ByVal customers_telephone_evening As String,  _
                    ByVal customers_fax As String,  _
                    ByVal customers_password As String,  _
                    ByVal customers_newsletter As Boolean,  _
                    ByVal customers_newsletterpartner As Boolean,  _
                    ByVal customers_privilege As Integer,  _
                    ByVal customers_privilege_balance As Decimal,  _
                    ByVal customers_garantie As Integer,  _
                    ByVal sponsoring_code As String,  _
                    ByVal sponsored_code As String,  _
                    ByVal customers_abo As Integer,  _
                    ByVal customers_abo_suspended As Integer,  _
                    ByVal customers_abo_type As Integer,  _
                    ByVal flagminiat1995 As Integer,  _
                    ByVal customers_abo_method As Integer,  _
                    ByVal customers_abo_dvd_norm As Integer,  _
                    ByVal customers_abo_dvd_adult As Integer,  _
                    ByVal customers_abo_dvd_home_norm As Integer,  _
                    ByVal customers_abo_dvd_home_adult As Integer,  _
                    ByVal throttling As Integer,  _
                    ByVal customers_abo_validityto As Date,  _
                    ByVal customers_abo_rank As Integer,  _
                    ByVal customers_abo_start_rentthismonth As Integer,  _
                    ByVal customers_abo_dvd_credit As Integer,  _
                    ByVal customers_abo_multishipment As Integer,  _
                    ByVal customers_abo_discount_recurring_to_date As Date,  _
                    ByVal abotested As Integer,  _
                    ByVal customers_abo_status As Integer,  _
                    ByVal customers_abo_payment_method As Integer,  _
                    ByVal domiciliation_status As Integer,  _
                    ByVal domiciliation_debiter_name As String,  _
                    ByVal domiciliation_number As String,  _
                    ByVal domiciliation_account_number As String,  _
                    ByVal adult_pwd As String,  _
                    ByVal ogone_card_type As String,  _
                    ByVal ogone_card_no As String,  _
                    ByVal ogone_exp_date As String,  _
                    ByVal ogone_owner As String,  _
                    ByVal ogone_cc_expiration_status As Integer,  _
                    ByVal offline_payment_status As Integer,  _
                    ByVal comment As String,  _
                    ByVal vip As Integer,  _
                    ByVal black_listed As Integer,  _
                    ByVal red_listed As Integer,  _
                    ByVal sm_eligible As Integer,  _
                    ByVal customers_enquiry_id As Integer,  _
                    ByVal date_first_delivery As Date,  _
                    ByVal mail_wl_adult_not_sufficient As Date,  _
                    ByVal mail_wl_norm_not_sufficient As Date,  _
                    ByVal mgm_points As Integer,  _
                    ByVal wishlist_kind As Integer,  _
                    ByVal customers_info_date_of_last_logon As Date,  _
                    ByVal customers_info_number_of_logons As Integer,  _
                    ByVal customers_info_date_account_created As Date,  _
                    ByVal customers_info_date_account_last_modified As Date,  _
                    ByVal global_product_notifications As Integer,  _
                    ByVal customers_language As Integer,  _
                    ByVal site As String,  _
                    ByVal partners_id As Integer,  _
                    ByVal belgiqueloisirs_id As String,  _
                    ByVal selected_for_email As String) As customersRow
            Dim rowcustomersRow As customersRow = CType(Me.NewRow,customersRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customers_gender, customers_firstname, customers_lastname, customers_dob, customers_email_address, customers_default_address_id, customers_telephone, customers_telephone_evening, customers_fax, customers_password, customers_newsletter, customers_newsletterpartner, customers_privilege, customers_privilege_balance, customers_garantie, sponsoring_code, sponsored_code, customers_abo, customers_abo_suspended, customers_abo_type, flagminiat1995, customers_abo_method, customers_abo_dvd_norm, customers_abo_dvd_adult, customers_abo_dvd_home_norm, customers_abo_dvd_home_adult, throttling, customers_abo_validityto, customers_abo_rank, customers_abo_start_rentthismonth, customers_abo_dvd_credit, customers_abo_multishipment, customers_abo_discount_recurring_to_date, abotested, customers_abo_status, customers_abo_payment_method, domiciliation_status, domiciliation_debiter_name, domiciliation_number, domiciliation_account_number, adult_pwd, ogone_card_type, ogone_card_no, ogone_exp_date, ogone_owner, ogone_cc_expiration_status, offline_payment_status, comment, vip, black_listed, red_listed, sm_eligible, customers_enquiry_id, date_first_delivery, mail_wl_adult_not_sufficient, mail_wl_norm_not_sufficient, mgm_points, wishlist_kind, customers_info_date_of_last_logon, customers_info_number_of_logons, customers_info_date_account_created, customers_info_date_account_last_modified, global_product_notifications, customers_language, site, partners_id, belgiqueloisirs_id, selected_for_email}
            rowcustomersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustomersRow)
            Return rowcustomersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycustomers_id(ByVal customers_id As Integer) As customersRow
            Return CType(Me.Rows.Find(New Object() {customers_id}),customersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As customersDataTable = CType(MyBase.Clone,customersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New customersDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_gender = MyBase.Columns("customers_gender")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_dob = MyBase.Columns("customers_dob")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_default_address_id = MyBase.Columns("customers_default_address_id")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columncustomers_telephone_evening = MyBase.Columns("customers_telephone_evening")
            Me.columncustomers_fax = MyBase.Columns("customers_fax")
            Me.columncustomers_password = MyBase.Columns("customers_password")
            Me.columncustomers_newsletter = MyBase.Columns("customers_newsletter")
            Me.columncustomers_newsletterpartner = MyBase.Columns("customers_newsletterpartner")
            Me.columncustomers_privilege = MyBase.Columns("customers_privilege")
            Me.columncustomers_privilege_balance = MyBase.Columns("customers_privilege_balance")
            Me.columncustomers_garantie = MyBase.Columns("customers_garantie")
            Me.columnsponsoring_code = MyBase.Columns("sponsoring_code")
            Me.columnsponsored_code = MyBase.Columns("sponsored_code")
            Me.columncustomers_abo = MyBase.Columns("customers_abo")
            Me.columncustomers_abo_suspended = MyBase.Columns("customers_abo_suspended")
            Me.columncustomers_abo_type = MyBase.Columns("customers_abo_type")
            Me.columnflagminiat1995 = MyBase.Columns("flagminiat1995")
            Me.columncustomers_abo_method = MyBase.Columns("customers_abo_method")
            Me.columncustomers_abo_dvd_norm = MyBase.Columns("customers_abo_dvd_norm")
            Me.columncustomers_abo_dvd_adult = MyBase.Columns("customers_abo_dvd_adult")
            Me.columncustomers_abo_dvd_home_norm = MyBase.Columns("customers_abo_dvd_home_norm")
            Me.columncustomers_abo_dvd_home_adult = MyBase.Columns("customers_abo_dvd_home_adult")
            Me.columnthrottling = MyBase.Columns("throttling")
            Me.columncustomers_abo_validityto = MyBase.Columns("customers_abo_validityto")
            Me.columncustomers_abo_rank = MyBase.Columns("customers_abo_rank")
            Me.columncustomers_abo_start_rentthismonth = MyBase.Columns("customers_abo_start_rentthismonth")
            Me.columncustomers_abo_dvd_credit = MyBase.Columns("customers_abo_dvd_credit")
            Me.columncustomers_abo_multishipment = MyBase.Columns("customers_abo_multishipment")
            Me.columncustomers_abo_discount_recurring_to_date = MyBase.Columns("customers_abo_discount_recurring_to_date")
            Me.columnabotested = MyBase.Columns("abotested")
            Me.columncustomers_abo_status = MyBase.Columns("customers_abo_status")
            Me.columncustomers_abo_payment_method = MyBase.Columns("customers_abo_payment_method")
            Me.columndomiciliation_status = MyBase.Columns("domiciliation_status")
            Me.columndomiciliation_debiter_name = MyBase.Columns("domiciliation_debiter_name")
            Me.columndomiciliation_number = MyBase.Columns("domiciliation_number")
            Me.columndomiciliation_account_number = MyBase.Columns("domiciliation_account_number")
            Me.columnadult_pwd = MyBase.Columns("adult_pwd")
            Me.columnogone_card_type = MyBase.Columns("ogone_card_type")
            Me.columnogone_card_no = MyBase.Columns("ogone_card_no")
            Me.columnogone_exp_date = MyBase.Columns("ogone_exp_date")
            Me.columnogone_owner = MyBase.Columns("ogone_owner")
            Me.columnogone_cc_expiration_status = MyBase.Columns("ogone_cc_expiration_status")
            Me.columnoffline_payment_status = MyBase.Columns("offline_payment_status")
            Me.columncomment = MyBase.Columns("comment")
            Me.columnvip = MyBase.Columns("vip")
            Me.columnblack_listed = MyBase.Columns("black_listed")
            Me.columnred_listed = MyBase.Columns("red_listed")
            Me.columnsm_eligible = MyBase.Columns("sm_eligible")
            Me.columncustomers_enquiry_id = MyBase.Columns("customers_enquiry_id")
            Me.columndate_first_delivery = MyBase.Columns("date_first_delivery")
            Me.columnmail_wl_adult_not_sufficient = MyBase.Columns("mail_wl_adult_not_sufficient")
            Me.columnmail_wl_norm_not_sufficient = MyBase.Columns("mail_wl_norm_not_sufficient")
            Me.columnmgm_points = MyBase.Columns("mgm_points")
            Me.columnwishlist_kind = MyBase.Columns("wishlist_kind")
            Me.columncustomers_info_date_of_last_logon = MyBase.Columns("customers_info_date_of_last_logon")
            Me.columncustomers_info_number_of_logons = MyBase.Columns("customers_info_number_of_logons")
            Me.columncustomers_info_date_account_created = MyBase.Columns("customers_info_date_account_created")
            Me.columncustomers_info_date_account_last_modified = MyBase.Columns("customers_info_date_account_last_modified")
            Me.columnglobal_product_notifications = MyBase.Columns("global_product_notifications")
            Me.columncustomers_language = MyBase.Columns("customers_language")
            Me.columnsite = MyBase.Columns("site")
            Me.columnpartners_id = MyBase.Columns("partners_id")
            Me.columnbelgiqueloisirs_id = MyBase.Columns("belgiqueloisirs_id")
            Me.columnselected_for_email = MyBase.Columns("selected_for_email")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_gender = New Global.System.Data.DataColumn("customers_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_gender)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_dob = New Global.System.Data.DataColumn("customers_dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_dob)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_default_address_id = New Global.System.Data.DataColumn("customers_default_address_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_default_address_id)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columncustomers_telephone_evening = New Global.System.Data.DataColumn("customers_telephone_evening", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone_evening)
            Me.columncustomers_fax = New Global.System.Data.DataColumn("customers_fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_fax)
            Me.columncustomers_password = New Global.System.Data.DataColumn("customers_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_password)
            Me.columncustomers_newsletter = New Global.System.Data.DataColumn("customers_newsletter", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletter)
            Me.columncustomers_newsletterpartner = New Global.System.Data.DataColumn("customers_newsletterpartner", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletterpartner)
            Me.columncustomers_privilege = New Global.System.Data.DataColumn("customers_privilege", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege)
            Me.columncustomers_privilege_balance = New Global.System.Data.DataColumn("customers_privilege_balance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege_balance)
            Me.columncustomers_garantie = New Global.System.Data.DataColumn("customers_garantie", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_garantie)
            Me.columnsponsoring_code = New Global.System.Data.DataColumn("sponsoring_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsoring_code)
            Me.columnsponsored_code = New Global.System.Data.DataColumn("sponsored_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsored_code)
            Me.columncustomers_abo = New Global.System.Data.DataColumn("customers_abo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo)
            Me.columncustomers_abo_suspended = New Global.System.Data.DataColumn("customers_abo_suspended", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_suspended)
            Me.columncustomers_abo_type = New Global.System.Data.DataColumn("customers_abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_type)
            Me.columnflagminiat1995 = New Global.System.Data.DataColumn("flagminiat1995", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnflagminiat1995)
            Me.columncustomers_abo_method = New Global.System.Data.DataColumn("customers_abo_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_method)
            Me.columncustomers_abo_dvd_norm = New Global.System.Data.DataColumn("customers_abo_dvd_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_norm)
            Me.columncustomers_abo_dvd_adult = New Global.System.Data.DataColumn("customers_abo_dvd_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_adult)
            Me.columncustomers_abo_dvd_home_norm = New Global.System.Data.DataColumn("customers_abo_dvd_home_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_norm)
            Me.columncustomers_abo_dvd_home_adult = New Global.System.Data.DataColumn("customers_abo_dvd_home_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_adult)
            Me.columnthrottling = New Global.System.Data.DataColumn("throttling", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnthrottling)
            Me.columncustomers_abo_validityto = New Global.System.Data.DataColumn("customers_abo_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_validityto)
            Me.columncustomers_abo_rank = New Global.System.Data.DataColumn("customers_abo_rank", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_rank)
            Me.columncustomers_abo_start_rentthismonth = New Global.System.Data.DataColumn("customers_abo_start_rentthismonth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_start_rentthismonth)
            Me.columncustomers_abo_dvd_credit = New Global.System.Data.DataColumn("customers_abo_dvd_credit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_credit)
            Me.columncustomers_abo_multishipment = New Global.System.Data.DataColumn("customers_abo_multishipment", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_multishipment)
            Me.columncustomers_abo_discount_recurring_to_date = New Global.System.Data.DataColumn("customers_abo_discount_recurring_to_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_discount_recurring_to_date)
            Me.columnabotested = New Global.System.Data.DataColumn("abotested", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabotested)
            Me.columncustomers_abo_status = New Global.System.Data.DataColumn("customers_abo_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_status)
            Me.columncustomers_abo_payment_method = New Global.System.Data.DataColumn("customers_abo_payment_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_payment_method)
            Me.columndomiciliation_status = New Global.System.Data.DataColumn("domiciliation_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_status)
            Me.columndomiciliation_debiter_name = New Global.System.Data.DataColumn("domiciliation_debiter_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_debiter_name)
            Me.columndomiciliation_number = New Global.System.Data.DataColumn("domiciliation_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_number)
            Me.columndomiciliation_account_number = New Global.System.Data.DataColumn("domiciliation_account_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_account_number)
            Me.columnadult_pwd = New Global.System.Data.DataColumn("adult_pwd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadult_pwd)
            Me.columnogone_card_type = New Global.System.Data.DataColumn("ogone_card_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_type)
            Me.columnogone_card_no = New Global.System.Data.DataColumn("ogone_card_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_no)
            Me.columnogone_exp_date = New Global.System.Data.DataColumn("ogone_exp_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_exp_date)
            Me.columnogone_owner = New Global.System.Data.DataColumn("ogone_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_owner)
            Me.columnogone_cc_expiration_status = New Global.System.Data.DataColumn("ogone_cc_expiration_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_cc_expiration_status)
            Me.columnoffline_payment_status = New Global.System.Data.DataColumn("offline_payment_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoffline_payment_status)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnvip = New Global.System.Data.DataColumn("vip", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvip)
            Me.columnblack_listed = New Global.System.Data.DataColumn("black_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblack_listed)
            Me.columnred_listed = New Global.System.Data.DataColumn("red_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnred_listed)
            Me.columnsm_eligible = New Global.System.Data.DataColumn("sm_eligible", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsm_eligible)
            Me.columncustomers_enquiry_id = New Global.System.Data.DataColumn("customers_enquiry_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_enquiry_id)
            Me.columndate_first_delivery = New Global.System.Data.DataColumn("date_first_delivery", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_first_delivery)
            Me.columnmail_wl_adult_not_sufficient = New Global.System.Data.DataColumn("mail_wl_adult_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_adult_not_sufficient)
            Me.columnmail_wl_norm_not_sufficient = New Global.System.Data.DataColumn("mail_wl_norm_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_norm_not_sufficient)
            Me.columnmgm_points = New Global.System.Data.DataColumn("mgm_points", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmgm_points)
            Me.columnwishlist_kind = New Global.System.Data.DataColumn("wishlist_kind", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwishlist_kind)
            Me.columncustomers_info_date_of_last_logon = New Global.System.Data.DataColumn("customers_info_date_of_last_logon", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_of_last_logon)
            Me.columncustomers_info_number_of_logons = New Global.System.Data.DataColumn("customers_info_number_of_logons", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_number_of_logons)
            Me.columncustomers_info_date_account_created = New Global.System.Data.DataColumn("customers_info_date_account_created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_account_created)
            Me.columncustomers_info_date_account_last_modified = New Global.System.Data.DataColumn("customers_info_date_account_last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_account_last_modified)
            Me.columnglobal_product_notifications = New Global.System.Data.DataColumn("global_product_notifications", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnglobal_product_notifications)
            Me.columncustomers_language = New Global.System.Data.DataColumn("customers_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_language)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.columnpartners_id = New Global.System.Data.DataColumn("partners_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartners_id)
            Me.columnbelgiqueloisirs_id = New Global.System.Data.DataColumn("belgiqueloisirs_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbelgiqueloisirs_id)
            Me.columnselected_for_email = New Global.System.Data.DataColumn("selected_for_email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnselected_for_email)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey1", New Global.System.Data.DataColumn() {Me.columncustomers_id}, true))
            Me.columncustomers_id.AutoIncrement = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_id.ReadOnly = true
            Me.columncustomers_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewcustomersRow() As customersRow
            Return CType(Me.NewRow,customersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New customersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(customersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.customersRowChangedEvent) Is Nothing) Then
                RaiseEvent customersRowChanged(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.customersRowChangingEvent) Is Nothing) Then
                RaiseEvent customersRowChanging(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.customersRowDeletedEvent) Is Nothing) Then
                RaiseEvent customersRowDeleted(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.customersRowDeletingEvent) Is Nothing) Then
                RaiseEvent customersRowDeleting(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovecustomersRow(ByVal row As customersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "customersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class customers_infoDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_info_id As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_of_last_logon As Global.System.Data.DataColumn
        
        Private columncustomers_info_number_of_logons As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_account_created As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_account_last_modified As Global.System.Data.DataColumn
        
        Private columnglobal_product_notifications As Global.System.Data.DataColumn
        
        Private columncustomers_language As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        Private columnpartners_id As Global.System.Data.DataColumn
        
        Private columnbelgiqueloisirs_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "customers_info"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_of_last_logonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_of_last_logon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_number_of_logonsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_number_of_logons
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_account_createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_account_created
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_account_last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_account_last_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property global_product_notificationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnglobal_product_notifications
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property partners_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartners_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property belgiqueloisirs_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbelgiqueloisirs_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As customers_infoRow
            Get
                Return CType(Me.Rows(index),customers_infoRow)
            End Get
        End Property
        
        Public Event customers_infoRowChanging As customers_infoRowChangeEventHandler
        
        Public Event customers_infoRowChanged As customers_infoRowChangeEventHandler
        
        Public Event customers_infoRowDeleting As customers_infoRowChangeEventHandler
        
        Public Event customers_infoRowDeleted As customers_infoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addcustomers_infoRow(ByVal row As customers_infoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addcustomers_infoRow(ByVal customers_info_id As Integer, ByVal customers_info_date_of_last_logon As Date, ByVal customers_info_number_of_logons As Integer, ByVal customers_info_date_account_created As Date, ByVal customers_info_date_account_last_modified As Date, ByVal global_product_notifications As Integer, ByVal customers_language As Integer, ByVal site As String, ByVal partners_id As Integer, ByVal belgiqueloisirs_id As String) As customers_infoRow
            Dim rowcustomers_infoRow As customers_infoRow = CType(Me.NewRow,customers_infoRow)
            Dim columnValuesArray() As Object = New Object() {customers_info_id, customers_info_date_of_last_logon, customers_info_number_of_logons, customers_info_date_account_created, customers_info_date_account_last_modified, global_product_notifications, customers_language, site, partners_id, belgiqueloisirs_id}
            rowcustomers_infoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustomers_infoRow)
            Return rowcustomers_infoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycustomers_info_id(ByVal customers_info_id As Integer) As customers_infoRow
            Return CType(Me.Rows.Find(New Object() {customers_info_id}),customers_infoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As customers_infoDataTable = CType(MyBase.Clone,customers_infoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New customers_infoDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_info_id = MyBase.Columns("customers_info_id")
            Me.columncustomers_info_date_of_last_logon = MyBase.Columns("customers_info_date_of_last_logon")
            Me.columncustomers_info_number_of_logons = MyBase.Columns("customers_info_number_of_logons")
            Me.columncustomers_info_date_account_created = MyBase.Columns("customers_info_date_account_created")
            Me.columncustomers_info_date_account_last_modified = MyBase.Columns("customers_info_date_account_last_modified")
            Me.columnglobal_product_notifications = MyBase.Columns("global_product_notifications")
            Me.columncustomers_language = MyBase.Columns("customers_language")
            Me.columnsite = MyBase.Columns("site")
            Me.columnpartners_id = MyBase.Columns("partners_id")
            Me.columnbelgiqueloisirs_id = MyBase.Columns("belgiqueloisirs_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_info_id = New Global.System.Data.DataColumn("customers_info_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_id)
            Me.columncustomers_info_date_of_last_logon = New Global.System.Data.DataColumn("customers_info_date_of_last_logon", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_of_last_logon)
            Me.columncustomers_info_number_of_logons = New Global.System.Data.DataColumn("customers_info_number_of_logons", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_number_of_logons)
            Me.columncustomers_info_date_account_created = New Global.System.Data.DataColumn("customers_info_date_account_created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_account_created)
            Me.columncustomers_info_date_account_last_modified = New Global.System.Data.DataColumn("customers_info_date_account_last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_account_last_modified)
            Me.columnglobal_product_notifications = New Global.System.Data.DataColumn("global_product_notifications", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnglobal_product_notifications)
            Me.columncustomers_language = New Global.System.Data.DataColumn("customers_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_language)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.columnpartners_id = New Global.System.Data.DataColumn("partners_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartners_id)
            Me.columnbelgiqueloisirs_id = New Global.System.Data.DataColumn("belgiqueloisirs_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbelgiqueloisirs_id)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey2", New Global.System.Data.DataColumn() {Me.columncustomers_info_id}, true))
            Me.columncustomers_info_id.AllowDBNull = false
            Me.columncustomers_info_id.Unique = true
            Me.columncustomers_language.AllowDBNull = false
            Me.columnsite.AllowDBNull = false
            Me.columnpartners_id.AllowDBNull = false
            Me.columnbelgiqueloisirs_id.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newcustomers_infoRow() As customers_infoRow
            Return CType(Me.NewRow,customers_infoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New customers_infoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(customers_infoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.customers_infoRowChangedEvent) Is Nothing) Then
                RaiseEvent customers_infoRowChanged(Me, New customers_infoRowChangeEvent(CType(e.Row,customers_infoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.customers_infoRowChangingEvent) Is Nothing) Then
                RaiseEvent customers_infoRowChanging(Me, New customers_infoRowChangeEvent(CType(e.Row,customers_infoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.customers_infoRowDeletedEvent) Is Nothing) Then
                RaiseEvent customers_infoRowDeleted(Me, New customers_infoRowChangeEvent(CType(e.Row,customers_infoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.customers_infoRowDeletingEvent) Is Nothing) Then
                RaiseEvent customers_infoRowDeleting(Me, New customers_infoRowChangeEvent(CType(e.Row,customers_infoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removecustomers_infoRow(ByVal row As customers_infoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "customers_infoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class customers_instant_profileDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnabo As Global.System.Data.DataColumn
        
        Private columnabo_type As Global.System.Data.DataColumn
        
        Private columnabo_pattern As Global.System.Data.DataColumn
        
        Private columnabo_pattern_info As Global.System.Data.DataColumn
        
        Private columnpayable As Global.System.Data.DataColumn
        
        Private columnpayment_method As Global.System.Data.DataColumn
        
        Private columnincome As Global.System.Data.DataColumn
        
        Private columndvd_norm As Global.System.Data.DataColumn
        
        Private columndvd_adult As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_credit As Global.System.Data.DataColumn
        
        Private columnat_home_norm As Global.System.Data.DataColumn
        
        Private columnat_home_adult As Global.System.Data.DataColumn
        
        Private columnwl_norm As Global.System.Data.DataColumn
        
        Private columnwl_adult As Global.System.Data.DataColumn
        
        Private columnrentals_norm As Global.System.Data.DataColumn
        
        Private columnrentals_adult As Global.System.Data.DataColumn
        
        Private columndelays As Global.System.Data.DataColumn
        
        Private columndelays_after_1juin2005 As Global.System.Data.DataColumn
        
        Private columncompensations As Global.System.Data.DataColumn
        
        Private columncustserv_repair As Global.System.Data.DataColumn
        
        Private columncustserv_delays As Global.System.Data.DataColumn
        
        Private columnrentals_lastmonth As Global.System.Data.DataColumn
        
        Private columncustserv_repair_lastmonth As Global.System.Data.DataColumn
        
        Private columncustserv_delays_lastmonth As Global.System.Data.DataColumn
        
        Private columnabo_stop As Global.System.Data.DataColumn
        
        Private columnabo_stop_cust As Global.System.Data.DataColumn
        
        Private columnprofitability As Global.System.Data.DataColumn
        
        Private columndvd_sent_by_kiala As Global.System.Data.DataColumn
        
        Private columndvd_sent_by_kiala_lastmonth As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "customers_instant_profile"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_patternColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_pattern
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_pattern_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_pattern_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property incomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnincome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvd_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndvd_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvd_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndvd_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_creditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_credit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property at_home_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnat_home_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property at_home_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnat_home_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wl_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwl_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wl_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwl_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rentals_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrentals_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rentals_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrentals_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delaysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelays
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delays_after_1juin2005Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndelays_after_1juin2005
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property compensationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompensations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property custserv_repairColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustserv_repair
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property custserv_delaysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustserv_delays
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rentals_lastmonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrentals_lastmonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property custserv_repair_lastmonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustserv_repair_lastmonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property custserv_delays_lastmonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustserv_delays_lastmonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_stopColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_stop
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_stop_custColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_stop_cust
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property profitabilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprofitability
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvd_sent_by_kialaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndvd_sent_by_kiala
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvd_sent_by_kiala_lastmonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndvd_sent_by_kiala_lastmonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As customers_instant_profileRow
            Get
                Return CType(Me.Rows(index),customers_instant_profileRow)
            End Get
        End Property
        
        Public Event customers_instant_profileRowChanging As customers_instant_profileRowChangeEventHandler
        
        Public Event customers_instant_profileRowChanged As customers_instant_profileRowChangeEventHandler
        
        Public Event customers_instant_profileRowDeleting As customers_instant_profileRowChangeEventHandler
        
        Public Event customers_instant_profileRowDeleted As customers_instant_profileRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addcustomers_instant_profileRow(ByVal row As customers_instant_profileRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addcustomers_instant_profileRow( _
                    ByVal customers_id As Integer,  _
                    ByVal abo As Short,  _
                    ByVal abo_type As Integer,  _
                    ByVal abo_pattern As String,  _
                    ByVal abo_pattern_info As Integer,  _
                    ByVal payable As Short,  _
                    ByVal payment_method As String,  _
                    ByVal income As Decimal,  _
                    ByVal dvd_norm As Integer,  _
                    ByVal dvd_adult As Integer,  _
                    ByVal customers_abo_dvd_credit As Integer,  _
                    ByVal at_home_norm As Integer,  _
                    ByVal at_home_adult As Integer,  _
                    ByVal wl_norm As Integer,  _
                    ByVal wl_adult As Integer,  _
                    ByVal rentals_norm As Integer,  _
                    ByVal rentals_adult As Integer,  _
                    ByVal delays As Integer,  _
                    ByVal delays_after_1juin2005 As Integer,  _
                    ByVal compensations As Integer,  _
                    ByVal custserv_repair As Integer,  _
                    ByVal custserv_delays As Integer,  _
                    ByVal rentals_lastmonth As Integer,  _
                    ByVal custserv_repair_lastmonth As Integer,  _
                    ByVal custserv_delays_lastmonth As Integer,  _
                    ByVal abo_stop As Integer,  _
                    ByVal abo_stop_cust As Integer,  _
                    ByVal profitability As Decimal,  _
                    ByVal dvd_sent_by_kiala As Integer,  _
                    ByVal dvd_sent_by_kiala_lastmonth As Integer) As customers_instant_profileRow
            Dim rowcustomers_instant_profileRow As customers_instant_profileRow = CType(Me.NewRow,customers_instant_profileRow)
            Dim columnValuesArray() As Object = New Object() {customers_id, abo, abo_type, abo_pattern, abo_pattern_info, payable, payment_method, income, dvd_norm, dvd_adult, customers_abo_dvd_credit, at_home_norm, at_home_adult, wl_norm, wl_adult, rentals_norm, rentals_adult, delays, delays_after_1juin2005, compensations, custserv_repair, custserv_delays, rentals_lastmonth, custserv_repair_lastmonth, custserv_delays_lastmonth, abo_stop, abo_stop_cust, profitability, dvd_sent_by_kiala, dvd_sent_by_kiala_lastmonth}
            rowcustomers_instant_profileRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustomers_instant_profileRow)
            Return rowcustomers_instant_profileRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycustomers_id(ByVal customers_id As Integer) As customers_instant_profileRow
            Return CType(Me.Rows.Find(New Object() {customers_id}),customers_instant_profileRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As customers_instant_profileDataTable = CType(MyBase.Clone,customers_instant_profileDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New customers_instant_profileDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnabo = MyBase.Columns("abo")
            Me.columnabo_type = MyBase.Columns("abo_type")
            Me.columnabo_pattern = MyBase.Columns("abo_pattern")
            Me.columnabo_pattern_info = MyBase.Columns("abo_pattern_info")
            Me.columnpayable = MyBase.Columns("payable")
            Me.columnpayment_method = MyBase.Columns("payment_method")
            Me.columnincome = MyBase.Columns("income")
            Me.columndvd_norm = MyBase.Columns("dvd_norm")
            Me.columndvd_adult = MyBase.Columns("dvd_adult")
            Me.columncustomers_abo_dvd_credit = MyBase.Columns("customers_abo_dvd_credit")
            Me.columnat_home_norm = MyBase.Columns("at_home_norm")
            Me.columnat_home_adult = MyBase.Columns("at_home_adult")
            Me.columnwl_norm = MyBase.Columns("wl_norm")
            Me.columnwl_adult = MyBase.Columns("wl_adult")
            Me.columnrentals_norm = MyBase.Columns("rentals_norm")
            Me.columnrentals_adult = MyBase.Columns("rentals_adult")
            Me.columndelays = MyBase.Columns("delays")
            Me.columndelays_after_1juin2005 = MyBase.Columns("delays_after_1juin2005")
            Me.columncompensations = MyBase.Columns("compensations")
            Me.columncustserv_repair = MyBase.Columns("custserv_repair")
            Me.columncustserv_delays = MyBase.Columns("custserv_delays")
            Me.columnrentals_lastmonth = MyBase.Columns("rentals_lastmonth")
            Me.columncustserv_repair_lastmonth = MyBase.Columns("custserv_repair_lastmonth")
            Me.columncustserv_delays_lastmonth = MyBase.Columns("custserv_delays_lastmonth")
            Me.columnabo_stop = MyBase.Columns("abo_stop")
            Me.columnabo_stop_cust = MyBase.Columns("abo_stop_cust")
            Me.columnprofitability = MyBase.Columns("profitability")
            Me.columndvd_sent_by_kiala = MyBase.Columns("dvd_sent_by_kiala")
            Me.columndvd_sent_by_kiala_lastmonth = MyBase.Columns("dvd_sent_by_kiala_lastmonth")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnabo = New Global.System.Data.DataColumn("abo", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo)
            Me.columnabo_type = New Global.System.Data.DataColumn("abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_type)
            Me.columnabo_pattern = New Global.System.Data.DataColumn("abo_pattern", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_pattern)
            Me.columnabo_pattern_info = New Global.System.Data.DataColumn("abo_pattern_info", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_pattern_info)
            Me.columnpayable = New Global.System.Data.DataColumn("payable", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayable)
            Me.columnpayment_method = New Global.System.Data.DataColumn("payment_method", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayment_method)
            Me.columnincome = New Global.System.Data.DataColumn("income", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnincome)
            Me.columndvd_norm = New Global.System.Data.DataColumn("dvd_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvd_norm)
            Me.columndvd_adult = New Global.System.Data.DataColumn("dvd_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvd_adult)
            Me.columncustomers_abo_dvd_credit = New Global.System.Data.DataColumn("customers_abo_dvd_credit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_credit)
            Me.columnat_home_norm = New Global.System.Data.DataColumn("at_home_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnat_home_norm)
            Me.columnat_home_adult = New Global.System.Data.DataColumn("at_home_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnat_home_adult)
            Me.columnwl_norm = New Global.System.Data.DataColumn("wl_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwl_norm)
            Me.columnwl_adult = New Global.System.Data.DataColumn("wl_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwl_adult)
            Me.columnrentals_norm = New Global.System.Data.DataColumn("rentals_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrentals_norm)
            Me.columnrentals_adult = New Global.System.Data.DataColumn("rentals_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrentals_adult)
            Me.columndelays = New Global.System.Data.DataColumn("delays", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelays)
            Me.columndelays_after_1juin2005 = New Global.System.Data.DataColumn("delays_after_1juin2005", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelays_after_1juin2005)
            Me.columncompensations = New Global.System.Data.DataColumn("compensations", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompensations)
            Me.columncustserv_repair = New Global.System.Data.DataColumn("custserv_repair", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustserv_repair)
            Me.columncustserv_delays = New Global.System.Data.DataColumn("custserv_delays", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustserv_delays)
            Me.columnrentals_lastmonth = New Global.System.Data.DataColumn("rentals_lastmonth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrentals_lastmonth)
            Me.columncustserv_repair_lastmonth = New Global.System.Data.DataColumn("custserv_repair_lastmonth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustserv_repair_lastmonth)
            Me.columncustserv_delays_lastmonth = New Global.System.Data.DataColumn("custserv_delays_lastmonth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustserv_delays_lastmonth)
            Me.columnabo_stop = New Global.System.Data.DataColumn("abo_stop", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_stop)
            Me.columnabo_stop_cust = New Global.System.Data.DataColumn("abo_stop_cust", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_stop_cust)
            Me.columnprofitability = New Global.System.Data.DataColumn("profitability", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprofitability)
            Me.columndvd_sent_by_kiala = New Global.System.Data.DataColumn("dvd_sent_by_kiala", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvd_sent_by_kiala)
            Me.columndvd_sent_by_kiala_lastmonth = New Global.System.Data.DataColumn("dvd_sent_by_kiala_lastmonth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvd_sent_by_kiala_lastmonth)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey3", New Global.System.Data.DataColumn() {Me.columncustomers_id}, true))
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_id.Unique = true
            Me.columnabo.AllowDBNull = false
            Me.columnabo_type.AllowDBNull = false
            Me.columnabo_pattern.AllowDBNull = false
            Me.columnabo_pattern_info.AllowDBNull = false
            Me.columnpayable.AllowDBNull = false
            Me.columnpayment_method.AllowDBNull = false
            Me.columnincome.AllowDBNull = false
            Me.columndvd_norm.AllowDBNull = false
            Me.columndvd_adult.AllowDBNull = false
            Me.columncustomers_abo_dvd_credit.AllowDBNull = false
            Me.columnat_home_norm.AllowDBNull = false
            Me.columnat_home_adult.AllowDBNull = false
            Me.columnwl_norm.AllowDBNull = false
            Me.columnwl_adult.AllowDBNull = false
            Me.columnrentals_norm.AllowDBNull = false
            Me.columnrentals_adult.AllowDBNull = false
            Me.columndelays.AllowDBNull = false
            Me.columndelays_after_1juin2005.AllowDBNull = false
            Me.columncompensations.AllowDBNull = false
            Me.columncustserv_repair.AllowDBNull = false
            Me.columncustserv_delays.AllowDBNull = false
            Me.columnrentals_lastmonth.AllowDBNull = false
            Me.columncustserv_repair_lastmonth.AllowDBNull = false
            Me.columncustserv_delays_lastmonth.AllowDBNull = false
            Me.columnabo_stop.AllowDBNull = false
            Me.columnabo_stop_cust.AllowDBNull = false
            Me.columnprofitability.AllowDBNull = false
            Me.columndvd_sent_by_kiala.AllowDBNull = false
            Me.columndvd_sent_by_kiala_lastmonth.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newcustomers_instant_profileRow() As customers_instant_profileRow
            Return CType(Me.NewRow,customers_instant_profileRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New customers_instant_profileRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(customers_instant_profileRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.customers_instant_profileRowChangedEvent) Is Nothing) Then
                RaiseEvent customers_instant_profileRowChanged(Me, New customers_instant_profileRowChangeEvent(CType(e.Row,customers_instant_profileRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.customers_instant_profileRowChangingEvent) Is Nothing) Then
                RaiseEvent customers_instant_profileRowChanging(Me, New customers_instant_profileRowChangeEvent(CType(e.Row,customers_instant_profileRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.customers_instant_profileRowDeletedEvent) Is Nothing) Then
                RaiseEvent customers_instant_profileRowDeleted(Me, New customers_instant_profileRowChangeEvent(CType(e.Row,customers_instant_profileRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.customers_instant_profileRowDeletingEvent) Is Nothing) Then
                RaiseEvent customers_instant_profileRowDeleting(Me, New customers_instant_profileRowChangeEvent(CType(e.Row,customers_instant_profileRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removecustomers_instant_profileRow(ByVal row As customers_instant_profileRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "customers_instant_profileDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class mail_messagesDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnmail_messages_id As Global.System.Data.DataColumn
        
        Private columnlanguage_id As Global.System.Data.DataColumn
        
        Private columnmessages_subject As Global.System.Data.DataColumn
        
        Private columnmessages_title As Global.System.Data.DataColumn
        
        Private columnmessages_html As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "mail_messages"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_messages_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_messages_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property language_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlanguage_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property messages_subjectColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmessages_subject
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property messages_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmessages_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property messages_htmlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmessages_html
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As mail_messagesRow
            Get
                Return CType(Me.Rows(index),mail_messagesRow)
            End Get
        End Property
        
        Public Event mail_messagesRowChanging As mail_messagesRowChangeEventHandler
        
        Public Event mail_messagesRowChanged As mail_messagesRowChangeEventHandler
        
        Public Event mail_messagesRowDeleting As mail_messagesRowChangeEventHandler
        
        Public Event mail_messagesRowDeleted As mail_messagesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addmail_messagesRow(ByVal row As mail_messagesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addmail_messagesRow(ByVal mail_messages_id As Integer, ByVal language_id As Integer, ByVal messages_subject As String, ByVal messages_title As String, ByVal messages_html As String, ByVal comment As String) As mail_messagesRow
            Dim rowmail_messagesRow As mail_messagesRow = CType(Me.NewRow,mail_messagesRow)
            Dim columnValuesArray() As Object = New Object() {mail_messages_id, language_id, messages_subject, messages_title, messages_html, comment}
            rowmail_messagesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowmail_messagesRow)
            Return rowmail_messagesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBymail_messages_idlanguage_id(ByVal mail_messages_id As Integer, ByVal language_id As Integer) As mail_messagesRow
            Return CType(Me.Rows.Find(New Object() {mail_messages_id, language_id}),mail_messagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As mail_messagesDataTable = CType(MyBase.Clone,mail_messagesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New mail_messagesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnmail_messages_id = MyBase.Columns("mail_messages_id")
            Me.columnlanguage_id = MyBase.Columns("language_id")
            Me.columnmessages_subject = MyBase.Columns("messages_subject")
            Me.columnmessages_title = MyBase.Columns("messages_title")
            Me.columnmessages_html = MyBase.Columns("messages_html")
            Me.columncomment = MyBase.Columns("comment")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnmail_messages_id = New Global.System.Data.DataColumn("mail_messages_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_messages_id)
            Me.columnlanguage_id = New Global.System.Data.DataColumn("language_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanguage_id)
            Me.columnmessages_subject = New Global.System.Data.DataColumn("messages_subject", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmessages_subject)
            Me.columnmessages_title = New Global.System.Data.DataColumn("messages_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmessages_title)
            Me.columnmessages_html = New Global.System.Data.DataColumn("messages_html", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmessages_html)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey4", New Global.System.Data.DataColumn() {Me.columnmail_messages_id, Me.columnlanguage_id}, true))
            Me.columnmail_messages_id.AllowDBNull = false
            Me.columnlanguage_id.AllowDBNull = false
            Me.columnmessages_subject.AllowDBNull = false
            Me.columnmessages_title.AllowDBNull = false
            Me.columnmessages_html.AllowDBNull = false
            Me.columncomment.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newmail_messagesRow() As mail_messagesRow
            Return CType(Me.NewRow,mail_messagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New mail_messagesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(mail_messagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.mail_messagesRowChangedEvent) Is Nothing) Then
                RaiseEvent mail_messagesRowChanged(Me, New mail_messagesRowChangeEvent(CType(e.Row,mail_messagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.mail_messagesRowChangingEvent) Is Nothing) Then
                RaiseEvent mail_messagesRowChanging(Me, New mail_messagesRowChangeEvent(CType(e.Row,mail_messagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.mail_messagesRowDeletedEvent) Is Nothing) Then
                RaiseEvent mail_messagesRowDeleted(Me, New mail_messagesRowChangeEvent(CType(e.Row,mail_messagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.mail_messagesRowDeletingEvent) Is Nothing) Then
                RaiseEvent mail_messagesRowDeleting(Me, New mail_messagesRowChangeEvent(CType(e.Row,mail_messagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removemail_messagesRow(ByVal row As mail_messagesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "mail_messagesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class mail_messages_sent_historyDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnmail_messages_sent_history_id As Global.System.Data.DataColumn
        
        Private columndate As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnmail_messages_id As Global.System.Data.DataColumn
        
        Private columnlanguage_id As Global.System.Data.DataColumn
        
        Private columnmail_opened As Global.System.Data.DataColumn
        
        Private columnmail_opened_date As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "mail_messages_sent_history"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_messages_sent_history_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_messages_sent_history_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_messages_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_messages_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property language_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlanguage_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_openedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_opened
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_opened_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_opened_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As mail_messages_sent_historyRow
            Get
                Return CType(Me.Rows(index),mail_messages_sent_historyRow)
            End Get
        End Property
        
        Public Event mail_messages_sent_historyRowChanging As mail_messages_sent_historyRowChangeEventHandler
        
        Public Event mail_messages_sent_historyRowChanged As mail_messages_sent_historyRowChangeEventHandler
        
        Public Event mail_messages_sent_historyRowDeleting As mail_messages_sent_historyRowChangeEventHandler
        
        Public Event mail_messages_sent_historyRowDeleted As mail_messages_sent_historyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addmail_messages_sent_historyRow(ByVal row As mail_messages_sent_historyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addmail_messages_sent_historyRow(ByVal _date As Date, ByVal customers_id As Integer, ByVal mail_messages_id As Integer, ByVal language_id As Integer, ByVal mail_opened As Integer, ByVal mail_opened_date As Date) As mail_messages_sent_historyRow
            Dim rowmail_messages_sent_historyRow As mail_messages_sent_historyRow = CType(Me.NewRow,mail_messages_sent_historyRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, _date, customers_id, mail_messages_id, language_id, mail_opened, mail_opened_date}
            rowmail_messages_sent_historyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowmail_messages_sent_historyRow)
            Return rowmail_messages_sent_historyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBymail_messages_sent_history_id(ByVal mail_messages_sent_history_id As Integer) As mail_messages_sent_historyRow
            Return CType(Me.Rows.Find(New Object() {mail_messages_sent_history_id}),mail_messages_sent_historyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As mail_messages_sent_historyDataTable = CType(MyBase.Clone,mail_messages_sent_historyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New mail_messages_sent_historyDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnmail_messages_sent_history_id = MyBase.Columns("mail_messages_sent_history_id")
            Me.columndate = MyBase.Columns("date")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnmail_messages_id = MyBase.Columns("mail_messages_id")
            Me.columnlanguage_id = MyBase.Columns("language_id")
            Me.columnmail_opened = MyBase.Columns("mail_opened")
            Me.columnmail_opened_date = MyBase.Columns("mail_opened_date")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnmail_messages_sent_history_id = New Global.System.Data.DataColumn("mail_messages_sent_history_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_messages_sent_history_id)
            Me.columndate = New Global.System.Data.DataColumn("date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columndate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "dateColumn")
            Me.columndate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columndate")
            Me.columndate.ExtendedProperties.Add("Generator_UserColumnName", "date")
            MyBase.Columns.Add(Me.columndate)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnmail_messages_id = New Global.System.Data.DataColumn("mail_messages_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_messages_id)
            Me.columnlanguage_id = New Global.System.Data.DataColumn("language_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanguage_id)
            Me.columnmail_opened = New Global.System.Data.DataColumn("mail_opened", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_opened)
            Me.columnmail_opened_date = New Global.System.Data.DataColumn("mail_opened_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_opened_date)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey5", New Global.System.Data.DataColumn() {Me.columnmail_messages_sent_history_id}, true))
            Me.columnmail_messages_sent_history_id.AutoIncrement = true
            Me.columnmail_messages_sent_history_id.AllowDBNull = false
            Me.columnmail_messages_sent_history_id.ReadOnly = true
            Me.columnmail_messages_sent_history_id.Unique = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columnmail_messages_id.AllowDBNull = false
            Me.columnlanguage_id.AllowDBNull = false
            Me.columnmail_opened.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newmail_messages_sent_historyRow() As mail_messages_sent_historyRow
            Return CType(Me.NewRow,mail_messages_sent_historyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New mail_messages_sent_historyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(mail_messages_sent_historyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.mail_messages_sent_historyRowChangedEvent) Is Nothing) Then
                RaiseEvent mail_messages_sent_historyRowChanged(Me, New mail_messages_sent_historyRowChangeEvent(CType(e.Row,mail_messages_sent_historyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.mail_messages_sent_historyRowChangingEvent) Is Nothing) Then
                RaiseEvent mail_messages_sent_historyRowChanging(Me, New mail_messages_sent_historyRowChangeEvent(CType(e.Row,mail_messages_sent_historyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.mail_messages_sent_historyRowDeletedEvent) Is Nothing) Then
                RaiseEvent mail_messages_sent_historyRowDeleted(Me, New mail_messages_sent_historyRowChangeEvent(CType(e.Row,mail_messages_sent_historyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.mail_messages_sent_historyRowDeletingEvent) Is Nothing) Then
                RaiseEvent mail_messages_sent_historyRowDeleting(Me, New mail_messages_sent_historyRowChangeEvent(CType(e.Row,mail_messages_sent_historyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removemail_messages_sent_historyRow(ByVal row As mail_messages_sent_historyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "mail_messages_sent_historyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class customers_view1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_gender As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_abo As Global.System.Data.DataColumn
        
        Private columncustomers_abo_type As Global.System.Data.DataColumn
        
        Private columncustomers_dob As Global.System.Data.DataColumn
        
        Private columncustomers_abo_validityto As Global.System.Data.DataColumn
        
        Private columncode As Global.System.Data.DataColumn
        
        Private columncode_creation_date As Global.System.Data.DataColumn
        
        Private columnselected_for_email As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        Private columncustomers_registration_step As Global.System.Data.DataColumn
        
        Private columncustomers_info_date_account_created As Global.System.Data.DataColumn
        
        Private columnactivation_discount_code_type As Global.System.Data.DataColumn
        
        Private columnentry_postcode As Global.System.Data.DataColumn
        
        Private columnis_email_valid As Global.System.Data.DataColumn
        
        Private columndate_first_delivery As Global.System.Data.DataColumn
        
        Private columnEntityID As Global.System.Data.DataColumn
        
        Private columnAboStoppedSinceDelay As Global.System.Data.DataColumn
        
        Private columncode_type As Global.System.Data.DataColumn
        
        Private columnabo_action As Global.System.Data.DataColumn
        
        Private columnmarketing_ok As Global.System.Data.DataColumn
        
        Private columnactivation_discount_code_id As Global.System.Data.DataColumn
        
        Private columndate_last_order As Global.System.Data.DataColumn
        
        Private columnalready_sent As Global.System.Data.DataColumn
        
        Private columnmgm_points As Global.System.Data.DataColumn
        
        Private columnentry_country_id As Global.System.Data.DataColumn
        
        Private columnwl_size As Global.System.Data.DataColumn
        
        Private columnmarredevivre As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "customers_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_dob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property code_creation_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode_creation_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property selected_for_emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnselected_for_email
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_registration_stepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_registration_step
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_info_date_account_createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_info_date_account_created
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_discount_code_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactivation_discount_code_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property is_email_validColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_email_valid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_first_deliveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_first_delivery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EntityIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEntityID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AboStoppedSinceDelayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAboStoppedSinceDelay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property code_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_actionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_action
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property marketing_okColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmarketing_ok
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_discount_code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactivation_discount_code_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_last_orderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_last_order
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property already_sentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnalready_sent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mgm_pointsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmgm_points
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_country_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_country_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wl_sizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwl_size
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property marredevivreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmarredevivre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As customers_view1Row
            Get
                Return CType(Me.Rows(index),customers_view1Row)
            End Get
        End Property
        
        Public Event customers_view1RowChanging As customers_view1RowChangeEventHandler
        
        Public Event customers_view1RowChanged As customers_view1RowChangeEventHandler
        
        Public Event customers_view1RowDeleting As customers_view1RowChangeEventHandler
        
        Public Event customers_view1RowDeleted As customers_view1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addcustomers_view1Row(ByVal row As customers_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addcustomers_view1Row( _
                    ByVal customers_id As Integer,  _
                    ByVal customers_gender As String,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_lastname As String,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_abo As Integer,  _
                    ByVal customers_abo_type As Integer,  _
                    ByVal customers_dob As String,  _
                    ByVal customers_abo_validityto As Date,  _
                    ByVal code As String,  _
                    ByVal code_creation_date As Date,  _
                    ByVal selected_for_email As String,  _
                    ByVal site As String,  _
                    ByVal customers_registration_step As String,  _
                    ByVal customers_info_date_account_created As Date,  _
                    ByVal activation_discount_code_type As String,  _
                    ByVal entry_postcode As String,  _
                    ByVal is_email_valid As String,  _
                    ByVal date_first_delivery As String,  _
                    ByVal EntityID As String,  _
                    ByVal AboStoppedSinceDelay As String,  _
                    ByVal code_type As String,  _
                    ByVal abo_action As String,  _
                    ByVal marketing_ok As String,  _
                    ByVal activation_discount_code_id As String,  _
                    ByVal date_last_order As Date,  _
                    ByVal already_sent As String,  _
                    ByVal mgm_points As Integer,  _
                    ByVal entry_country_id As String,  _
                    ByVal wl_size As String,  _
                    ByVal marredevivre As String) As customers_view1Row
            Dim rowcustomers_view1Row As customers_view1Row = CType(Me.NewRow,customers_view1Row)
            Dim columnValuesArray() As Object = New Object() {customers_id, customers_gender, customers_firstname, customers_lastname, customers_email_address, customers_abo, customers_abo_type, customers_dob, customers_abo_validityto, code, code_creation_date, selected_for_email, site, customers_registration_step, customers_info_date_account_created, activation_discount_code_type, entry_postcode, is_email_valid, date_first_delivery, EntityID, AboStoppedSinceDelay, code_type, abo_action, marketing_ok, activation_discount_code_id, date_last_order, already_sent, mgm_points, entry_country_id, wl_size, marredevivre}
            rowcustomers_view1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustomers_view1Row)
            Return rowcustomers_view1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As customers_view1DataTable = CType(MyBase.Clone,customers_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New customers_view1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_gender = MyBase.Columns("customers_gender")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_abo = MyBase.Columns("customers_abo")
            Me.columncustomers_abo_type = MyBase.Columns("customers_abo_type")
            Me.columncustomers_dob = MyBase.Columns("customers_dob")
            Me.columncustomers_abo_validityto = MyBase.Columns("customers_abo_validityto")
            Me.columncode = MyBase.Columns("code")
            Me.columncode_creation_date = MyBase.Columns("code_creation_date")
            Me.columnselected_for_email = MyBase.Columns("selected_for_email")
            Me.columnsite = MyBase.Columns("site")
            Me.columncustomers_registration_step = MyBase.Columns("customers_registration_step")
            Me.columncustomers_info_date_account_created = MyBase.Columns("customers_info_date_account_created")
            Me.columnactivation_discount_code_type = MyBase.Columns("activation_discount_code_type")
            Me.columnentry_postcode = MyBase.Columns("entry_postcode")
            Me.columnis_email_valid = MyBase.Columns("is_email_valid")
            Me.columndate_first_delivery = MyBase.Columns("date_first_delivery")
            Me.columnEntityID = MyBase.Columns("EntityID")
            Me.columnAboStoppedSinceDelay = MyBase.Columns("AboStoppedSinceDelay")
            Me.columncode_type = MyBase.Columns("code_type")
            Me.columnabo_action = MyBase.Columns("abo_action")
            Me.columnmarketing_ok = MyBase.Columns("marketing_ok")
            Me.columnactivation_discount_code_id = MyBase.Columns("activation_discount_code_id")
            Me.columndate_last_order = MyBase.Columns("date_last_order")
            Me.columnalready_sent = MyBase.Columns("already_sent")
            Me.columnmgm_points = MyBase.Columns("mgm_points")
            Me.columnentry_country_id = MyBase.Columns("entry_country_id")
            Me.columnwl_size = MyBase.Columns("wl_size")
            Me.columnmarredevivre = MyBase.Columns("marredevivre")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_gender = New Global.System.Data.DataColumn("customers_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_gender)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_abo = New Global.System.Data.DataColumn("customers_abo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo)
            Me.columncustomers_abo_type = New Global.System.Data.DataColumn("customers_abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_type)
            Me.columncustomers_dob = New Global.System.Data.DataColumn("customers_dob", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_dob)
            Me.columncustomers_abo_validityto = New Global.System.Data.DataColumn("customers_abo_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_validityto)
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columncode_creation_date = New Global.System.Data.DataColumn("code_creation_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode_creation_date)
            Me.columnselected_for_email = New Global.System.Data.DataColumn("selected_for_email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnselected_for_email)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.columncustomers_registration_step = New Global.System.Data.DataColumn("customers_registration_step", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_registration_step)
            Me.columncustomers_info_date_account_created = New Global.System.Data.DataColumn("customers_info_date_account_created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_info_date_account_created)
            Me.columnactivation_discount_code_type = New Global.System.Data.DataColumn("activation_discount_code_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_discount_code_type)
            Me.columnentry_postcode = New Global.System.Data.DataColumn("entry_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_postcode)
            Me.columnis_email_valid = New Global.System.Data.DataColumn("is_email_valid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_email_valid)
            Me.columndate_first_delivery = New Global.System.Data.DataColumn("date_first_delivery", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_first_delivery)
            Me.columnEntityID = New Global.System.Data.DataColumn("EntityID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEntityID)
            Me.columnAboStoppedSinceDelay = New Global.System.Data.DataColumn("AboStoppedSinceDelay", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAboStoppedSinceDelay)
            Me.columncode_type = New Global.System.Data.DataColumn("code_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode_type)
            Me.columnabo_action = New Global.System.Data.DataColumn("abo_action", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_action)
            Me.columnmarketing_ok = New Global.System.Data.DataColumn("marketing_ok", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmarketing_ok)
            Me.columnactivation_discount_code_id = New Global.System.Data.DataColumn("activation_discount_code_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_discount_code_id)
            Me.columndate_last_order = New Global.System.Data.DataColumn("date_last_order", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_last_order)
            Me.columnalready_sent = New Global.System.Data.DataColumn("already_sent", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnalready_sent)
            Me.columnmgm_points = New Global.System.Data.DataColumn("mgm_points", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmgm_points)
            Me.columnentry_country_id = New Global.System.Data.DataColumn("entry_country_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_country_id)
            Me.columnwl_size = New Global.System.Data.DataColumn("wl_size", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwl_size)
            Me.columnmarredevivre = New Global.System.Data.DataColumn("marredevivre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmarredevivre)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newcustomers_view1Row() As customers_view1Row
            Return CType(Me.NewRow,customers_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New customers_view1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(customers_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.customers_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent customers_view1RowChanged(Me, New customers_view1RowChangeEvent(CType(e.Row,customers_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.customers_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent customers_view1RowChanging(Me, New customers_view1RowChangeEvent(CType(e.Row,customers_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.customers_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent customers_view1RowDeleted(Me, New customers_view1RowChangeEvent(CType(e.Row,customers_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.customers_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent customers_view1RowDeleting(Me, New customers_view1RowChangeEvent(CType(e.Row,customers_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removecustomers_view1Row(ByVal row As customers_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "customers_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class mail_messages1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnmail_messages_id As Global.System.Data.DataColumn
        
        Private columnlanguage_id As Global.System.Data.DataColumn
        
        Private columnmessages_subject As Global.System.Data.DataColumn
        
        Private columnmessages_title As Global.System.Data.DataColumn
        
        Private columnmessages_html As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "mail_messages1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_messages_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_messages_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property language_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlanguage_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property messages_subjectColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmessages_subject
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property messages_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmessages_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property messages_htmlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmessages_html
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As mail_messages1Row
            Get
                Return CType(Me.Rows(index),mail_messages1Row)
            End Get
        End Property
        
        Public Event mail_messages1RowChanging As mail_messages1RowChangeEventHandler
        
        Public Event mail_messages1RowChanged As mail_messages1RowChangeEventHandler
        
        Public Event mail_messages1RowDeleting As mail_messages1RowChangeEventHandler
        
        Public Event mail_messages1RowDeleted As mail_messages1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addmail_messages1Row(ByVal row As mail_messages1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addmail_messages1Row(ByVal mail_messages_id As Integer, ByVal language_id As Integer, ByVal messages_subject As String, ByVal messages_title As String, ByVal messages_html As String, ByVal comment As String) As mail_messages1Row
            Dim rowmail_messages1Row As mail_messages1Row = CType(Me.NewRow,mail_messages1Row)
            Dim columnValuesArray() As Object = New Object() {mail_messages_id, language_id, messages_subject, messages_title, messages_html, comment}
            rowmail_messages1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowmail_messages1Row)
            Return rowmail_messages1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As mail_messages1DataTable = CType(MyBase.Clone,mail_messages1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New mail_messages1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnmail_messages_id = MyBase.Columns("mail_messages_id")
            Me.columnlanguage_id = MyBase.Columns("language_id")
            Me.columnmessages_subject = MyBase.Columns("messages_subject")
            Me.columnmessages_title = MyBase.Columns("messages_title")
            Me.columnmessages_html = MyBase.Columns("messages_html")
            Me.columncomment = MyBase.Columns("comment")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnmail_messages_id = New Global.System.Data.DataColumn("mail_messages_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_messages_id)
            Me.columnlanguage_id = New Global.System.Data.DataColumn("language_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanguage_id)
            Me.columnmessages_subject = New Global.System.Data.DataColumn("messages_subject", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmessages_subject)
            Me.columnmessages_title = New Global.System.Data.DataColumn("messages_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmessages_title)
            Me.columnmessages_html = New Global.System.Data.DataColumn("messages_html", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmessages_html)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnmail_messages_id.AllowDBNull = false
            Me.columnlanguage_id.AllowDBNull = false
            Me.columnmessages_subject.AllowDBNull = false
            Me.columnmessages_title.AllowDBNull = false
            Me.columnmessages_html.AllowDBNull = false
            Me.columncomment.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newmail_messages1Row() As mail_messages1Row
            Return CType(Me.NewRow,mail_messages1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New mail_messages1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(mail_messages1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.mail_messages1RowChangedEvent) Is Nothing) Then
                RaiseEvent mail_messages1RowChanged(Me, New mail_messages1RowChangeEvent(CType(e.Row,mail_messages1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.mail_messages1RowChangingEvent) Is Nothing) Then
                RaiseEvent mail_messages1RowChanging(Me, New mail_messages1RowChangeEvent(CType(e.Row,mail_messages1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.mail_messages1RowDeletedEvent) Is Nothing) Then
                RaiseEvent mail_messages1RowDeleted(Me, New mail_messages1RowChangeEvent(CType(e.Row,mail_messages1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.mail_messages1RowDeletingEvent) Is Nothing) Then
                RaiseEvent mail_messages1RowDeleting(Me, New mail_messages1RowChangeEvent(CType(e.Row,mail_messages1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removemail_messages1Row(ByVal row As mail_messages1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "mail_messages1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class languagesDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnlanguages_id As Global.System.Data.DataColumn
        
        Private columnname As Global.System.Data.DataColumn
        
        Private columncode As Global.System.Data.DataColumn
        
        Private columnimage As Global.System.Data.DataColumn
        
        Private columndirectory As Global.System.Data.DataColumn
        
        Private columnsort_order As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "languages"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property languages_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlanguages_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property directoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirectory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sort_orderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsort_order
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As languagesRow
            Get
                Return CType(Me.Rows(index),languagesRow)
            End Get
        End Property
        
        Public Event languagesRowChanging As languagesRowChangeEventHandler
        
        Public Event languagesRowChanged As languagesRowChangeEventHandler
        
        Public Event languagesRowDeleting As languagesRowChangeEventHandler
        
        Public Event languagesRowDeleted As languagesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddlanguagesRow(ByVal row As languagesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddlanguagesRow(ByVal name As String, ByVal code As String, ByVal image As String, ByVal directory As String, ByVal sort_order As Integer) As languagesRow
            Dim rowlanguagesRow As languagesRow = CType(Me.NewRow,languagesRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, name, code, image, directory, sort_order}
            rowlanguagesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowlanguagesRow)
            Return rowlanguagesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBylanguages_id(ByVal languages_id As Integer) As languagesRow
            Return CType(Me.Rows.Find(New Object() {languages_id}),languagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As languagesDataTable = CType(MyBase.Clone,languagesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New languagesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnlanguages_id = MyBase.Columns("languages_id")
            Me.columnname = MyBase.Columns("name")
            Me.columncode = MyBase.Columns("code")
            Me.columnimage = MyBase.Columns("image")
            Me.columndirectory = MyBase.Columns("directory")
            Me.columnsort_order = MyBase.Columns("sort_order")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnlanguages_id = New Global.System.Data.DataColumn("languages_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanguages_id)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columnimage = New Global.System.Data.DataColumn("image", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimage)
            Me.columndirectory = New Global.System.Data.DataColumn("directory", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirectory)
            Me.columnsort_order = New Global.System.Data.DataColumn("sort_order", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsort_order)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey6", New Global.System.Data.DataColumn() {Me.columnlanguages_id}, true))
            Me.columnlanguages_id.AutoIncrement = true
            Me.columnlanguages_id.AllowDBNull = false
            Me.columnlanguages_id.ReadOnly = true
            Me.columnlanguages_id.Unique = true
            Me.columnname.AllowDBNull = false
            Me.columncode.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewlanguagesRow() As languagesRow
            Return CType(Me.NewRow,languagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New languagesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(languagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.languagesRowChangedEvent) Is Nothing) Then
                RaiseEvent languagesRowChanged(Me, New languagesRowChangeEvent(CType(e.Row,languagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.languagesRowChangingEvent) Is Nothing) Then
                RaiseEvent languagesRowChanging(Me, New languagesRowChangeEvent(CType(e.Row,languagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.languagesRowDeletedEvent) Is Nothing) Then
                RaiseEvent languagesRowDeleted(Me, New languagesRowChangeEvent(CType(e.Row,languagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.languagesRowDeletingEvent) Is Nothing) Then
                RaiseEvent languagesRowDeleting(Me, New languagesRowChangeEvent(CType(e.Row,languagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovelanguagesRow(ByVal row As languagesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "languagesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class orders_status_historyDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnorders_status_history_id As Global.System.Data.DataColumn
        
        Private columnorders_id As Global.System.Data.DataColumn
        
        Private columnnew_value As Global.System.Data.DataColumn
        
        Private columnold_value As Global.System.Data.DataColumn
        
        Private columndate_added As Global.System.Data.DataColumn
        
        Private columncustomer_notified As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "orders_status_history"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_status_history_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_status_history_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property new_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnew_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property old_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnold_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customer_notifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomer_notified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As orders_status_historyRow
            Get
                Return CType(Me.Rows(index),orders_status_historyRow)
            End Get
        End Property
        
        Public Event orders_status_historyRowChanging As orders_status_historyRowChangeEventHandler
        
        Public Event orders_status_historyRowChanged As orders_status_historyRowChangeEventHandler
        
        Public Event orders_status_historyRowDeleting As orders_status_historyRowChangeEventHandler
        
        Public Event orders_status_historyRowDeleted As orders_status_historyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addorders_status_historyRow(ByVal row As orders_status_historyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addorders_status_historyRow(ByVal orders_id As Integer, ByVal new_value As Integer, ByVal old_value As Integer, ByVal date_added As Date, ByVal customer_notified As Integer) As orders_status_historyRow
            Dim roworders_status_historyRow As orders_status_historyRow = CType(Me.NewRow,orders_status_historyRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, orders_id, new_value, old_value, date_added, customer_notified}
            roworders_status_historyRow.ItemArray = columnValuesArray
            Me.Rows.Add(roworders_status_historyRow)
            Return roworders_status_historyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByorders_status_history_id(ByVal orders_status_history_id As Integer) As orders_status_historyRow
            Return CType(Me.Rows.Find(New Object() {orders_status_history_id}),orders_status_historyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As orders_status_historyDataTable = CType(MyBase.Clone,orders_status_historyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New orders_status_historyDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnorders_status_history_id = MyBase.Columns("orders_status_history_id")
            Me.columnorders_id = MyBase.Columns("orders_id")
            Me.columnnew_value = MyBase.Columns("new_value")
            Me.columnold_value = MyBase.Columns("old_value")
            Me.columndate_added = MyBase.Columns("date_added")
            Me.columncustomer_notified = MyBase.Columns("customer_notified")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnorders_status_history_id = New Global.System.Data.DataColumn("orders_status_history_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_status_history_id)
            Me.columnorders_id = New Global.System.Data.DataColumn("orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_id)
            Me.columnnew_value = New Global.System.Data.DataColumn("new_value", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnew_value)
            Me.columnold_value = New Global.System.Data.DataColumn("old_value", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnold_value)
            Me.columndate_added = New Global.System.Data.DataColumn("date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_added)
            Me.columncustomer_notified = New Global.System.Data.DataColumn("customer_notified", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomer_notified)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey7", New Global.System.Data.DataColumn() {Me.columnorders_status_history_id}, true))
            Me.columnorders_status_history_id.AutoIncrement = true
            Me.columnorders_status_history_id.AllowDBNull = false
            Me.columnorders_status_history_id.ReadOnly = true
            Me.columnorders_status_history_id.Unique = true
            Me.columnorders_id.AllowDBNull = false
            Me.columnnew_value.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Neworders_status_historyRow() As orders_status_historyRow
            Return CType(Me.NewRow,orders_status_historyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New orders_status_historyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(orders_status_historyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.orders_status_historyRowChangedEvent) Is Nothing) Then
                RaiseEvent orders_status_historyRowChanged(Me, New orders_status_historyRowChangeEvent(CType(e.Row,orders_status_historyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.orders_status_historyRowChangingEvent) Is Nothing) Then
                RaiseEvent orders_status_historyRowChanging(Me, New orders_status_historyRowChangeEvent(CType(e.Row,orders_status_historyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.orders_status_historyRowDeletedEvent) Is Nothing) Then
                RaiseEvent orders_status_historyRowDeleted(Me, New orders_status_historyRowChangeEvent(CType(e.Row,orders_status_historyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.orders_status_historyRowDeletingEvent) Is Nothing) Then
                RaiseEvent orders_status_historyRowDeleting(Me, New orders_status_historyRowChangeEvent(CType(e.Row,orders_status_historyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeorders_status_historyRow(ByVal row As orders_status_historyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "orders_status_historyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ordersDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnorders_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_name As Global.System.Data.DataColumn
        
        Private columncustomers_street_address As Global.System.Data.DataColumn
        
        Private columncustomers_suburb As Global.System.Data.DataColumn
        
        Private columncustomers_city As Global.System.Data.DataColumn
        
        Private columncustomers_postcode As Global.System.Data.DataColumn
        
        Private columncustomers_state As Global.System.Data.DataColumn
        
        Private columncustomers_country As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_address_format_id As Global.System.Data.DataColumn
        
        Private columndelivery_name As Global.System.Data.DataColumn
        
        Private columndelivery_street_address As Global.System.Data.DataColumn
        
        Private columndelivery_suburb As Global.System.Data.DataColumn
        
        Private columndelivery_city As Global.System.Data.DataColumn
        
        Private columndelivery_postcode As Global.System.Data.DataColumn
        
        Private columndelivery_state As Global.System.Data.DataColumn
        
        Private columndelivery_country As Global.System.Data.DataColumn
        
        Private columndelivery_address_format_id As Global.System.Data.DataColumn
        
        Private columnpayment_method As Global.System.Data.DataColumn
        
        Private columncc_type As Global.System.Data.DataColumn
        
        Private columncc_owner As Global.System.Data.DataColumn
        
        Private columncc_number As Global.System.Data.DataColumn
        
        Private columncc_expires As Global.System.Data.DataColumn
        
        Private columnlast_modified As Global.System.Data.DataColumn
        
        Private columndate_purchased As Global.System.Data.DataColumn
        
        Private columnorders_status As Global.System.Data.DataColumn
        
        Private columnorders_date_finished As Global.System.Data.DataColumn
        
        Private columncomments As Global.System.Data.DataColumn
        
        Private columncurrency As Global.System.Data.DataColumn
        
        Private columncurrency_value As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        Private columnsecured_mail As Global.System.Data.DataColumn
        
        Private columnmultishipment_sm As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "orders"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_street_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_street_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_suburbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_suburb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_state
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_country
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_address_format_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_address_format_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_street_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_street_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_suburbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_suburb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_state
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_country
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property delivery_address_format_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelivery_address_format_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_expiresColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_expires
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_purchasedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_purchased
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_date_finishedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_date_finished
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property currencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncurrency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property currency_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncurrency_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property secured_mailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsecured_mail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property multishipment_smColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmultishipment_sm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ordersRow
            Get
                Return CType(Me.Rows(index),ordersRow)
            End Get
        End Property
        
        Public Event ordersRowChanging As ordersRowChangeEventHandler
        
        Public Event ordersRowChanged As ordersRowChangeEventHandler
        
        Public Event ordersRowDeleting As ordersRowChangeEventHandler
        
        Public Event ordersRowDeleted As ordersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddordersRow(ByVal row As ordersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddordersRow( _
                    ByVal customers_id As Integer,  _
                    ByVal customers_name As String,  _
                    ByVal customers_street_address As String,  _
                    ByVal customers_suburb As String,  _
                    ByVal customers_city As String,  _
                    ByVal customers_postcode As String,  _
                    ByVal customers_state As String,  _
                    ByVal customers_country As String,  _
                    ByVal customers_telephone As String,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_address_format_id As Integer,  _
                    ByVal delivery_name As String,  _
                    ByVal delivery_street_address As String,  _
                    ByVal delivery_suburb As String,  _
                    ByVal delivery_city As String,  _
                    ByVal delivery_postcode As String,  _
                    ByVal delivery_state As String,  _
                    ByVal delivery_country As String,  _
                    ByVal delivery_address_format_id As Integer,  _
                    ByVal payment_method As String,  _
                    ByVal cc_type As String,  _
                    ByVal cc_owner As String,  _
                    ByVal cc_number As String,  _
                    ByVal cc_expires As String,  _
                    ByVal last_modified As Date,  _
                    ByVal date_purchased As Date,  _
                    ByVal orders_status As Integer,  _
                    ByVal orders_date_finished As Date,  _
                    ByVal comments As String,  _
                    ByVal currency As String,  _
                    ByVal currency_value As Decimal,  _
                    ByVal site As Integer,  _
                    ByVal secured_mail As Integer,  _
                    ByVal multishipment_sm As String) As ordersRow
            Dim rowordersRow As ordersRow = CType(Me.NewRow,ordersRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customers_id, customers_name, customers_street_address, customers_suburb, customers_city, customers_postcode, customers_state, customers_country, customers_telephone, customers_email_address, customers_address_format_id, delivery_name, delivery_street_address, delivery_suburb, delivery_city, delivery_postcode, delivery_state, delivery_country, delivery_address_format_id, payment_method, cc_type, cc_owner, cc_number, cc_expires, last_modified, date_purchased, orders_status, orders_date_finished, comments, currency, currency_value, site, secured_mail, multishipment_sm}
            rowordersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowordersRow)
            Return rowordersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByorders_id(ByVal orders_id As Integer) As ordersRow
            Return CType(Me.Rows.Find(New Object() {orders_id}),ordersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ordersDataTable = CType(MyBase.Clone,ordersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ordersDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnorders_id = MyBase.Columns("orders_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_name = MyBase.Columns("customers_name")
            Me.columncustomers_street_address = MyBase.Columns("customers_street_address")
            Me.columncustomers_suburb = MyBase.Columns("customers_suburb")
            Me.columncustomers_city = MyBase.Columns("customers_city")
            Me.columncustomers_postcode = MyBase.Columns("customers_postcode")
            Me.columncustomers_state = MyBase.Columns("customers_state")
            Me.columncustomers_country = MyBase.Columns("customers_country")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_address_format_id = MyBase.Columns("customers_address_format_id")
            Me.columndelivery_name = MyBase.Columns("delivery_name")
            Me.columndelivery_street_address = MyBase.Columns("delivery_street_address")
            Me.columndelivery_suburb = MyBase.Columns("delivery_suburb")
            Me.columndelivery_city = MyBase.Columns("delivery_city")
            Me.columndelivery_postcode = MyBase.Columns("delivery_postcode")
            Me.columndelivery_state = MyBase.Columns("delivery_state")
            Me.columndelivery_country = MyBase.Columns("delivery_country")
            Me.columndelivery_address_format_id = MyBase.Columns("delivery_address_format_id")
            Me.columnpayment_method = MyBase.Columns("payment_method")
            Me.columncc_type = MyBase.Columns("cc_type")
            Me.columncc_owner = MyBase.Columns("cc_owner")
            Me.columncc_number = MyBase.Columns("cc_number")
            Me.columncc_expires = MyBase.Columns("cc_expires")
            Me.columnlast_modified = MyBase.Columns("last_modified")
            Me.columndate_purchased = MyBase.Columns("date_purchased")
            Me.columnorders_status = MyBase.Columns("orders_status")
            Me.columnorders_date_finished = MyBase.Columns("orders_date_finished")
            Me.columncomments = MyBase.Columns("comments")
            Me.columncurrency = MyBase.Columns("currency")
            Me.columncurrency_value = MyBase.Columns("currency_value")
            Me.columnsite = MyBase.Columns("site")
            Me.columnsecured_mail = MyBase.Columns("secured_mail")
            Me.columnmultishipment_sm = MyBase.Columns("multishipment_sm")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnorders_id = New Global.System.Data.DataColumn("orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_name = New Global.System.Data.DataColumn("customers_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_name)
            Me.columncustomers_street_address = New Global.System.Data.DataColumn("customers_street_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_street_address)
            Me.columncustomers_suburb = New Global.System.Data.DataColumn("customers_suburb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_suburb)
            Me.columncustomers_city = New Global.System.Data.DataColumn("customers_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_city)
            Me.columncustomers_postcode = New Global.System.Data.DataColumn("customers_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_postcode)
            Me.columncustomers_state = New Global.System.Data.DataColumn("customers_state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_state)
            Me.columncustomers_country = New Global.System.Data.DataColumn("customers_country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_country)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_address_format_id = New Global.System.Data.DataColumn("customers_address_format_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_address_format_id)
            Me.columndelivery_name = New Global.System.Data.DataColumn("delivery_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_name)
            Me.columndelivery_street_address = New Global.System.Data.DataColumn("delivery_street_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_street_address)
            Me.columndelivery_suburb = New Global.System.Data.DataColumn("delivery_suburb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_suburb)
            Me.columndelivery_city = New Global.System.Data.DataColumn("delivery_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_city)
            Me.columndelivery_postcode = New Global.System.Data.DataColumn("delivery_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_postcode)
            Me.columndelivery_state = New Global.System.Data.DataColumn("delivery_state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_state)
            Me.columndelivery_country = New Global.System.Data.DataColumn("delivery_country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_country)
            Me.columndelivery_address_format_id = New Global.System.Data.DataColumn("delivery_address_format_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelivery_address_format_id)
            Me.columnpayment_method = New Global.System.Data.DataColumn("payment_method", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayment_method)
            Me.columncc_type = New Global.System.Data.DataColumn("cc_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_type)
            Me.columncc_owner = New Global.System.Data.DataColumn("cc_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_owner)
            Me.columncc_number = New Global.System.Data.DataColumn("cc_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_number)
            Me.columncc_expires = New Global.System.Data.DataColumn("cc_expires", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_expires)
            Me.columnlast_modified = New Global.System.Data.DataColumn("last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_modified)
            Me.columndate_purchased = New Global.System.Data.DataColumn("date_purchased", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_purchased)
            Me.columnorders_status = New Global.System.Data.DataColumn("orders_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_status)
            Me.columnorders_date_finished = New Global.System.Data.DataColumn("orders_date_finished", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_date_finished)
            Me.columncomments = New Global.System.Data.DataColumn("comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomments)
            Me.columncurrency = New Global.System.Data.DataColumn("currency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurrency)
            Me.columncurrency_value = New Global.System.Data.DataColumn("currency_value", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurrency_value)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.columnsecured_mail = New Global.System.Data.DataColumn("secured_mail", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsecured_mail)
            Me.columnmultishipment_sm = New Global.System.Data.DataColumn("multishipment_sm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmultishipment_sm)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey8", New Global.System.Data.DataColumn() {Me.columnorders_id}, true))
            Me.columnorders_id.AutoIncrement = true
            Me.columnorders_id.AllowDBNull = false
            Me.columnorders_id.ReadOnly = true
            Me.columnorders_id.Unique = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_name.AllowDBNull = false
            Me.columncustomers_street_address.AllowDBNull = false
            Me.columncustomers_city.AllowDBNull = false
            Me.columncustomers_postcode.AllowDBNull = false
            Me.columncustomers_country.AllowDBNull = false
            Me.columncustomers_telephone.AllowDBNull = false
            Me.columncustomers_email_address.AllowDBNull = false
            Me.columncustomers_address_format_id.AllowDBNull = false
            Me.columndelivery_name.AllowDBNull = false
            Me.columndelivery_street_address.AllowDBNull = false
            Me.columndelivery_city.AllowDBNull = false
            Me.columndelivery_postcode.AllowDBNull = false
            Me.columndelivery_country.AllowDBNull = false
            Me.columndelivery_address_format_id.AllowDBNull = false
            Me.columnpayment_method.AllowDBNull = false
            Me.columnorders_status.AllowDBNull = false
            Me.columnsite.AllowDBNull = false
            Me.columnsecured_mail.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewordersRow() As ordersRow
            Return CType(Me.NewRow,ordersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ordersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ordersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ordersRowChangedEvent) Is Nothing) Then
                RaiseEvent ordersRowChanged(Me, New ordersRowChangeEvent(CType(e.Row,ordersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ordersRowChangingEvent) Is Nothing) Then
                RaiseEvent ordersRowChanging(Me, New ordersRowChangeEvent(CType(e.Row,ordersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ordersRowDeletedEvent) Is Nothing) Then
                RaiseEvent ordersRowDeleted(Me, New ordersRowChangeEvent(CType(e.Row,ordersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ordersRowDeletingEvent) Is Nothing) Then
                RaiseEvent ordersRowDeleting(Me, New ordersRowChangeEvent(CType(e.Row,ordersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveordersRow(ByVal row As ordersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ordersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class orders_productsDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnorders_products_id As Global.System.Data.DataColumn
        
        Private columnorders_id As Global.System.Data.DataColumn
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnproducts_name As Global.System.Data.DataColumn
        
        Private columnproducts_price As Global.System.Data.DataColumn
        
        Private columnfinal_price As Global.System.Data.DataColumn
        
        Private columnproducts_tax As Global.System.Data.DataColumn
        
        Private columnproducts_quantity As Global.System.Data.DataColumn
        
        Private columnproducts_dvd As Global.System.Data.DataColumn
        
        Private columnorders_products_status As Global.System.Data.DataColumn
        
        Private columnfeesharing As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "orders_products"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_products_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property final_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfinal_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_taxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_quantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_products_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_products_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As orders_productsRow
            Get
                Return CType(Me.Rows(index),orders_productsRow)
            End Get
        End Property
        
        Public Event orders_productsRowChanging As orders_productsRowChangeEventHandler
        
        Public Event orders_productsRowChanged As orders_productsRowChangeEventHandler
        
        Public Event orders_productsRowDeleting As orders_productsRowChangeEventHandler
        
        Public Event orders_productsRowDeleted As orders_productsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addorders_productsRow(ByVal row As orders_productsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addorders_productsRow(ByVal orders_id As Integer, ByVal products_id As Integer, ByVal products_model As String, ByVal products_name As String, ByVal products_price As Decimal, ByVal final_price As Decimal, ByVal products_tax As Decimal, ByVal products_quantity As Integer, ByVal products_dvd As Integer, ByVal orders_products_status As Integer, ByVal feesharing As Integer) As orders_productsRow
            Dim roworders_productsRow As orders_productsRow = CType(Me.NewRow,orders_productsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, orders_id, products_id, products_model, products_name, products_price, final_price, products_tax, products_quantity, products_dvd, orders_products_status, feesharing}
            roworders_productsRow.ItemArray = columnValuesArray
            Me.Rows.Add(roworders_productsRow)
            Return roworders_productsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByorders_products_id(ByVal orders_products_id As Integer) As orders_productsRow
            Return CType(Me.Rows.Find(New Object() {orders_products_id}),orders_productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As orders_productsDataTable = CType(MyBase.Clone,orders_productsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New orders_productsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnorders_products_id = MyBase.Columns("orders_products_id")
            Me.columnorders_id = MyBase.Columns("orders_id")
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnproducts_name = MyBase.Columns("products_name")
            Me.columnproducts_price = MyBase.Columns("products_price")
            Me.columnfinal_price = MyBase.Columns("final_price")
            Me.columnproducts_tax = MyBase.Columns("products_tax")
            Me.columnproducts_quantity = MyBase.Columns("products_quantity")
            Me.columnproducts_dvd = MyBase.Columns("products_dvd")
            Me.columnorders_products_status = MyBase.Columns("orders_products_status")
            Me.columnfeesharing = MyBase.Columns("feesharing")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnorders_products_id = New Global.System.Data.DataColumn("orders_products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_products_id)
            Me.columnorders_id = New Global.System.Data.DataColumn("orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_id)
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnproducts_name = New Global.System.Data.DataColumn("products_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_name)
            Me.columnproducts_price = New Global.System.Data.DataColumn("products_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_price)
            Me.columnfinal_price = New Global.System.Data.DataColumn("final_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfinal_price)
            Me.columnproducts_tax = New Global.System.Data.DataColumn("products_tax", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tax)
            Me.columnproducts_quantity = New Global.System.Data.DataColumn("products_quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_quantity)
            Me.columnproducts_dvd = New Global.System.Data.DataColumn("products_dvd", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvd)
            Me.columnorders_products_status = New Global.System.Data.DataColumn("orders_products_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_products_status)
            Me.columnfeesharing = New Global.System.Data.DataColumn("feesharing", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey9", New Global.System.Data.DataColumn() {Me.columnorders_products_id}, true))
            Me.columnorders_products_id.AutoIncrement = true
            Me.columnorders_products_id.AllowDBNull = false
            Me.columnorders_products_id.ReadOnly = true
            Me.columnorders_products_id.Unique = true
            Me.columnorders_id.AllowDBNull = false
            Me.columnproducts_id.AllowDBNull = false
            Me.columnproducts_name.AllowDBNull = false
            Me.columnproducts_price.AllowDBNull = false
            Me.columnfinal_price.AllowDBNull = false
            Me.columnproducts_tax.AllowDBNull = false
            Me.columnproducts_quantity.AllowDBNull = false
            Me.columnproducts_dvd.AllowDBNull = false
            Me.columnorders_products_status.AllowDBNull = false
            Me.columnfeesharing.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Neworders_productsRow() As orders_productsRow
            Return CType(Me.NewRow,orders_productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New orders_productsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(orders_productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.orders_productsRowChangedEvent) Is Nothing) Then
                RaiseEvent orders_productsRowChanged(Me, New orders_productsRowChangeEvent(CType(e.Row,orders_productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.orders_productsRowChangingEvent) Is Nothing) Then
                RaiseEvent orders_productsRowChanging(Me, New orders_productsRowChangeEvent(CType(e.Row,orders_productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.orders_productsRowDeletedEvent) Is Nothing) Then
                RaiseEvent orders_productsRowDeleted(Me, New orders_productsRowChangeEvent(CType(e.Row,orders_productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.orders_productsRowDeletingEvent) Is Nothing) Then
                RaiseEvent orders_productsRowDeleting(Me, New orders_productsRowChangeEvent(CType(e.Row,orders_productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeorders_productsRow(ByVal row As orders_productsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "orders_productsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class productsDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnproducts_quantity As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnimdb_id As Global.System.Data.DataColumn
        
        Private columnproducts_title As Global.System.Data.DataColumn
        
        Private columnproducts_image As Global.System.Data.DataColumn
        
        Private columnproducts_price As Global.System.Data.DataColumn
        
        Private columnproducts_date_added As Global.System.Data.DataColumn
        
        Private columnproducts_last_modified As Global.System.Data.DataColumn
        
        Private columnproducts_date_available As Global.System.Data.DataColumn
        
        Private columnproducts_weight As Global.System.Data.DataColumn
        
        Private columnproducts_status As Global.System.Data.DataColumn
        
        Private columnproducts_tax_class_id As Global.System.Data.DataColumn
        
        Private columnmanufacturers_id As Global.System.Data.DataColumn
        
        Private columnproducts_ordered As Global.System.Data.DataColumn
        
        Private columnproducts_public As Global.System.Data.DataColumn
        
        Private columnproducts_runtime As Global.System.Data.DataColumn
        
        Private columnproducts_year As Global.System.Data.DataColumn
        
        Private columnproducts_countries_id As Global.System.Data.DataColumn
        
        Private columnproducts_picture_format As Global.System.Data.DataColumn
        
        Private columnproducts_rating As Global.System.Data.DataColumn
        
        Private columnproducts_directors_id As Global.System.Data.DataColumn
        
        Private columnproducts_regional_code As Global.System.Data.DataColumn
        
        Private columnproducts_studio As Global.System.Data.DataColumn
        
        Private columnproducts_barcode As Global.System.Data.DataColumn
        
        Private columnproducts_dvd_quantity As Global.System.Data.DataColumn
        
        Private columnproducts_language_fr As Global.System.Data.DataColumn
        
        Private columnproducts_undertitle_nl As Global.System.Data.DataColumn
        
        Private columnin_the_bags As Global.System.Data.DataColumn
        
        Private columnin_the_bags_next As Global.System.Data.DataColumn
        
        Private columnin_cinema_now As Global.System.Data.DataColumn
        
        Private columnproducts_dvdpostchoice As Global.System.Data.DataColumn
        
        Private columnproducts_other_language As Global.System.Data.DataColumn
        
        Private columnproducts_french As Global.System.Data.DataColumn
        
        Private columnproducts_next As Global.System.Data.DataColumn
        
        Private columnproducts_tiscali_hp_fr As Global.System.Data.DataColumn
        
        Private columnproducts_tiscali_hp_nl As Global.System.Data.DataColumn
        
        Private columnproducts_series_id As Global.System.Data.DataColumn
        
        Private columnproducts_series_number As Global.System.Data.DataColumn
        
        Private columnproducts_series_aboprocess_id As Global.System.Data.DataColumn
        
        Private columnproducts_series_aboprocess_number As Global.System.Data.DataColumn
        
        Private columncinebel_id As Global.System.Data.DataColumn
        
        Private columncinebel_trailer As Global.System.Data.DataColumn
        
        Private columnfeesharing As Global.System.Data.DataColumn
        
        Private columnfeesharing_end As Global.System.Data.DataColumn
        
        Private columnfeesharing_upfront_fee As Global.System.Data.DataColumn
        
        Private columnfeesharing_upfront_fee_recoverable As Global.System.Data.DataColumn
        
        Private columnfeesharing_turn_price As Global.System.Data.DataColumn
        
        Private columnfeesharing_turn_price_after3month As Global.System.Data.DataColumn
        
        Private columnfeesharing_buy_option_price As Global.System.Data.DataColumn
        
        Private columnfeesharing_expected_nbr_turns As Global.System.Data.DataColumn
        
        Private columnproducts_desire As Global.System.Data.DataColumn
        
        Private columnproducts_desire_weighted As Global.System.Data.DataColumn
        
        Private columnproducts_availability As Global.System.Data.DataColumn
        
        Private columnquantity_to_sale As Global.System.Data.DataColumn
        
        Private columnproducts_sale_price As Global.System.Data.DataColumn
        
        Private columnproducts_sale_date As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "products"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_quantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imdb_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimdb_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_image
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_last_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_availableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_available
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_weightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tax_class_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tax_class_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property manufacturers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmanufacturers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_orderedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_ordered
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_publicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_public
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_runtimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_runtime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_yearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_countries_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_countries_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_picture_formatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_picture_format
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_ratingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_rating
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_directors_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_directors_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_regional_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_regional_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_studioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_studio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_barcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_barcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvd_quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvd_quantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_language_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_language_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_undertitle_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_undertitle_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_the_bagsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_the_bags
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_the_bags_nextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_the_bags_next
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_cinema_nowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_cinema_now
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvdpostchoiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvdpostchoice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_other_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_other_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_frenchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_french
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_nextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_next
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tiscali_hp_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tiscali_hp_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tiscali_hp_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tiscali_hp_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_aboprocess_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_aboprocess_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_aboprocess_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_aboprocess_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cinebel_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncinebel_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cinebel_trailerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncinebel_trailer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_endColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_end
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_upfront_feeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_upfront_fee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_upfront_fee_recoverableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_upfront_fee_recoverable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_turn_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_turn_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_turn_price_after3monthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_turn_price_after3month
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_buy_option_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_buy_option_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_expected_nbr_turnsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_expected_nbr_turns
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_desireColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_desire
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_desire_weightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_desire_weighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_availabilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_availability
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quantity_to_saleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquantity_to_sale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_sale_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_sale_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_sale_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_sale_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As productsRow
            Get
                Return CType(Me.Rows(index),productsRow)
            End Get
        End Property
        
        Public Event productsRowChanging As productsRowChangeEventHandler
        
        Public Event productsRowChanged As productsRowChangeEventHandler
        
        Public Event productsRowDeleting As productsRowChangeEventHandler
        
        Public Event productsRowDeleted As productsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddproductsRow(ByVal row As productsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overloads Function AddproductsRow( _
                    ByVal products_id As Integer, _
                    ByVal products_quantity As Integer, _
                    ByVal products_model As String, _
                    ByVal imdb_id As Integer, _
                    ByVal products_title As String, _
                    ByVal products_image As String, _
                    ByVal products_price As Decimal, _
                    ByVal products_date_added As Date, _
                    ByVal products_last_modified As Date, _
                    ByVal products_date_available As Date, _
                    ByVal products_weight As Integer, _
                    ByVal products_status As Integer, _
                    ByVal products_tax_class_id As Integer, _
                    ByVal manufacturers_id As Integer, _
                    ByVal products_ordered As Integer, _
                    ByVal products_public As Integer, _
                    ByVal products_runtime As Integer, _
                    ByVal products_year As Integer, _
                    ByVal products_countries_id As Integer, _
                    ByVal products_picture_format As Integer, _
                    ByVal products_rating As Integer, _
                    ByVal products_directors_id As Integer, _
                    ByVal products_regional_code As Integer, _
                    ByVal products_studio As Integer, _
                    ByVal products_barcode As Integer, _
                    ByVal products_dvd_quantity As Integer, _
                    ByVal products_language_fr As Integer, _
                    ByVal products_undertitle_nl As Integer, _
                    ByVal in_the_bags As Integer, _
                    ByVal in_the_bags_next As Integer, _
                    ByVal in_cinema_now As Integer, _
                    ByVal products_dvdpostchoice As Integer, _
                    ByVal products_other_language As Integer, _
                    ByVal products_french As Integer, _
                    ByVal products_next As Integer, _
                    ByVal products_tiscali_hp_fr As Integer, _
                    ByVal products_tiscali_hp_nl As Integer, _
                    ByVal products_series_id As Integer, _
                    ByVal products_series_number As Integer, _
                    ByVal products_series_aboprocess_id As Integer, _
                    ByVal products_series_aboprocess_number As Integer, _
                    ByVal cinebel_id As Integer, _
                    ByVal cinebel_trailer As Integer, _
                    ByVal feesharing As Integer, _
                    ByVal feesharing_end As Date, _
                    ByVal feesharing_upfront_fee As Decimal, _
                    ByVal feesharing_upfront_fee_recoverable As Integer, _
                    ByVal feesharing_turn_price As Decimal, _
                    ByVal feesharing_turn_price_after3month As Decimal, _
                    ByVal feesharing_buy_option_price As Decimal, _
                    ByVal feesharing_expected_nbr_turns As Integer, _
                    ByVal products_desire As Integer, _
                    ByVal products_desire_weighted As Decimal, _
                    ByVal products_availability As Integer, _
                    ByVal quantity_to_sale As Integer, _
                    ByVal products_sale_price As Decimal, _
                    ByVal products_sale_date As Date) As productsRow
            Dim rowproductsRow As productsRow = CType(Me.NewRow, productsRow)
            Dim columnValuesArray() As Object = New Object() {products_id, products_quantity, products_model, imdb_id, products_title, products_image, products_price, products_date_added, products_last_modified, products_date_available, products_weight, products_status, products_tax_class_id, manufacturers_id, products_ordered, products_public, products_runtime, products_year, products_countries_id, products_picture_format, products_rating, products_directors_id, products_regional_code, products_studio, products_barcode, products_dvd_quantity, products_language_fr, products_undertitle_nl, in_the_bags, in_the_bags_next, in_cinema_now, products_dvdpostchoice, products_other_language, products_french, products_next, products_tiscali_hp_fr, products_tiscali_hp_nl, products_series_id, products_series_number, products_series_aboprocess_id, products_series_aboprocess_number, cinebel_id, cinebel_trailer, feesharing, feesharing_end, feesharing_upfront_fee, feesharing_upfront_fee_recoverable, feesharing_turn_price, feesharing_turn_price_after3month, feesharing_buy_option_price, feesharing_expected_nbr_turns, products_desire, products_desire_weighted, products_availability, quantity_to_sale, products_sale_price, products_sale_date}
            rowproductsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproductsRow)
            Return rowproductsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproducts_id(ByVal products_id As Integer) As productsRow
            Return CType(Me.Rows.Find(New Object() {products_id}),productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As productsDataTable = CType(MyBase.Clone,productsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New productsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnproducts_quantity = MyBase.Columns("products_quantity")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnimdb_id = MyBase.Columns("imdb_id")
            Me.columnproducts_title = MyBase.Columns("products_title")
            Me.columnproducts_image = MyBase.Columns("products_image")
            Me.columnproducts_price = MyBase.Columns("products_price")
            Me.columnproducts_date_added = MyBase.Columns("products_date_added")
            Me.columnproducts_last_modified = MyBase.Columns("products_last_modified")
            Me.columnproducts_date_available = MyBase.Columns("products_date_available")
            Me.columnproducts_weight = MyBase.Columns("products_weight")
            Me.columnproducts_status = MyBase.Columns("products_status")
            Me.columnproducts_tax_class_id = MyBase.Columns("products_tax_class_id")
            Me.columnmanufacturers_id = MyBase.Columns("manufacturers_id")
            Me.columnproducts_ordered = MyBase.Columns("products_ordered")
            Me.columnproducts_public = MyBase.Columns("products_public")
            Me.columnproducts_runtime = MyBase.Columns("products_runtime")
            Me.columnproducts_year = MyBase.Columns("products_year")
            Me.columnproducts_countries_id = MyBase.Columns("products_countries_id")
            Me.columnproducts_picture_format = MyBase.Columns("products_picture_format")
            Me.columnproducts_rating = MyBase.Columns("products_rating")
            Me.columnproducts_directors_id = MyBase.Columns("products_directors_id")
            Me.columnproducts_regional_code = MyBase.Columns("products_regional_code")
            Me.columnproducts_studio = MyBase.Columns("products_studio")
            Me.columnproducts_barcode = MyBase.Columns("products_barcode")
            Me.columnproducts_dvd_quantity = MyBase.Columns("products_dvd_quantity")
            Me.columnproducts_language_fr = MyBase.Columns("products_language_fr")
            Me.columnproducts_undertitle_nl = MyBase.Columns("products_undertitle_nl")
            Me.columnin_the_bags = MyBase.Columns("in_the_bags")
            Me.columnin_the_bags_next = MyBase.Columns("in_the_bags_next")
            Me.columnin_cinema_now = MyBase.Columns("in_cinema_now")
            Me.columnproducts_dvdpostchoice = MyBase.Columns("products_dvdpostchoice")
            Me.columnproducts_other_language = MyBase.Columns("products_other_language")
            Me.columnproducts_french = MyBase.Columns("products_french")
            Me.columnproducts_next = MyBase.Columns("products_next")
            Me.columnproducts_tiscali_hp_fr = MyBase.Columns("products_tiscali_hp_fr")
            Me.columnproducts_tiscali_hp_nl = MyBase.Columns("products_tiscali_hp_nl")
            Me.columnproducts_series_id = MyBase.Columns("products_series_id")
            Me.columnproducts_series_number = MyBase.Columns("products_series_number")
            Me.columnproducts_series_aboprocess_id = MyBase.Columns("products_series_aboprocess_id")
            Me.columnproducts_series_aboprocess_number = MyBase.Columns("products_series_aboprocess_number")
            Me.columncinebel_id = MyBase.Columns("cinebel_id")
            Me.columncinebel_trailer = MyBase.Columns("cinebel_trailer")
            Me.columnfeesharing = MyBase.Columns("feesharing")
            Me.columnfeesharing_end = MyBase.Columns("feesharing_end")
            Me.columnfeesharing_upfront_fee = MyBase.Columns("feesharing_upfront_fee")
            Me.columnfeesharing_upfront_fee_recoverable = MyBase.Columns("feesharing_upfront_fee_recoverable")
            Me.columnfeesharing_turn_price = MyBase.Columns("feesharing_turn_price")
            Me.columnfeesharing_turn_price_after3month = MyBase.Columns("feesharing_turn_price_after3month")
            Me.columnfeesharing_buy_option_price = MyBase.Columns("feesharing_buy_option_price")
            Me.columnfeesharing_expected_nbr_turns = MyBase.Columns("feesharing_expected_nbr_turns")
            Me.columnproducts_desire = MyBase.Columns("products_desire")
            Me.columnproducts_desire_weighted = MyBase.Columns("products_desire_weighted")
            Me.columnproducts_availability = MyBase.Columns("products_availability")
            Me.columnquantity_to_sale = MyBase.Columns("quantity_to_sale")
            Me.columnproducts_sale_price = MyBase.Columns("products_sale_price")
            Me.columnproducts_sale_date = MyBase.Columns("products_sale_date")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnproducts_quantity = New Global.System.Data.DataColumn("products_quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_quantity)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnimdb_id = New Global.System.Data.DataColumn("imdb_id", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimdb_id)
            Me.columnproducts_title = New Global.System.Data.DataColumn("products_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_title)
            Me.columnproducts_image = New Global.System.Data.DataColumn("products_image", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_image)
            Me.columnproducts_price = New Global.System.Data.DataColumn("products_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_price)
            Me.columnproducts_date_added = New Global.System.Data.DataColumn("products_date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_added)
            Me.columnproducts_last_modified = New Global.System.Data.DataColumn("products_last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_last_modified)
            Me.columnproducts_date_available = New Global.System.Data.DataColumn("products_date_available", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_available)
            Me.columnproducts_weight = New Global.System.Data.DataColumn("products_weight", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_weight)
            Me.columnproducts_status = New Global.System.Data.DataColumn("products_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_status)
            Me.columnproducts_tax_class_id = New Global.System.Data.DataColumn("products_tax_class_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tax_class_id)
            Me.columnmanufacturers_id = New Global.System.Data.DataColumn("manufacturers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmanufacturers_id)
            Me.columnproducts_ordered = New Global.System.Data.DataColumn("products_ordered", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_ordered)
            Me.columnproducts_public = New Global.System.Data.DataColumn("products_public", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_public)
            Me.columnproducts_runtime = New Global.System.Data.DataColumn("products_runtime", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_runtime)
            Me.columnproducts_year = New Global.System.Data.DataColumn("products_year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_year)
            Me.columnproducts_countries_id = New Global.System.Data.DataColumn("products_countries_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_countries_id)
            Me.columnproducts_picture_format = New Global.System.Data.DataColumn("products_picture_format", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_picture_format)
            Me.columnproducts_rating = New Global.System.Data.DataColumn("products_rating", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_rating)
            Me.columnproducts_directors_id = New Global.System.Data.DataColumn("products_directors_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_directors_id)
            Me.columnproducts_regional_code = New Global.System.Data.DataColumn("products_regional_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_regional_code)
            Me.columnproducts_studio = New Global.System.Data.DataColumn("products_studio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_studio)
            Me.columnproducts_barcode = New Global.System.Data.DataColumn("products_barcode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_barcode)
            Me.columnproducts_dvd_quantity = New Global.System.Data.DataColumn("products_dvd_quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvd_quantity)
            Me.columnproducts_language_fr = New Global.System.Data.DataColumn("products_language_fr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_language_fr)
            Me.columnproducts_undertitle_nl = New Global.System.Data.DataColumn("products_undertitle_nl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_undertitle_nl)
            Me.columnin_the_bags = New Global.System.Data.DataColumn("in_the_bags", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_the_bags)
            Me.columnin_the_bags_next = New Global.System.Data.DataColumn("in_the_bags_next", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_the_bags_next)
            Me.columnin_cinema_now = New Global.System.Data.DataColumn("in_cinema_now", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_cinema_now)
            Me.columnproducts_dvdpostchoice = New Global.System.Data.DataColumn("products_dvdpostchoice", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvdpostchoice)
            Me.columnproducts_other_language = New Global.System.Data.DataColumn("products_other_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_other_language)
            Me.columnproducts_french = New Global.System.Data.DataColumn("products_french", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_french)
            Me.columnproducts_next = New Global.System.Data.DataColumn("products_next", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_next)
            Me.columnproducts_tiscali_hp_fr = New Global.System.Data.DataColumn("products_tiscali_hp_fr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tiscali_hp_fr)
            Me.columnproducts_tiscali_hp_nl = New Global.System.Data.DataColumn("products_tiscali_hp_nl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tiscali_hp_nl)
            Me.columnproducts_series_id = New Global.System.Data.DataColumn("products_series_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_id)
            Me.columnproducts_series_number = New Global.System.Data.DataColumn("products_series_number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_number)
            Me.columnproducts_series_aboprocess_id = New Global.System.Data.DataColumn("products_series_aboprocess_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_aboprocess_id)
            Me.columnproducts_series_aboprocess_number = New Global.System.Data.DataColumn("products_series_aboprocess_number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_aboprocess_number)
            Me.columncinebel_id = New Global.System.Data.DataColumn("cinebel_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncinebel_id)
            Me.columncinebel_trailer = New Global.System.Data.DataColumn("cinebel_trailer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncinebel_trailer)
            Me.columnfeesharing = New Global.System.Data.DataColumn("feesharing", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing)
            Me.columnfeesharing_end = New Global.System.Data.DataColumn("feesharing_end", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_end)
            Me.columnfeesharing_upfront_fee = New Global.System.Data.DataColumn("feesharing_upfront_fee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_upfront_fee)
            Me.columnfeesharing_upfront_fee_recoverable = New Global.System.Data.DataColumn("feesharing_upfront_fee_recoverable", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_upfront_fee_recoverable)
            Me.columnfeesharing_turn_price = New Global.System.Data.DataColumn("feesharing_turn_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_turn_price)
            Me.columnfeesharing_turn_price_after3month = New Global.System.Data.DataColumn("feesharing_turn_price_after3month", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_turn_price_after3month)
            Me.columnfeesharing_buy_option_price = New Global.System.Data.DataColumn("feesharing_buy_option_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_buy_option_price)
            Me.columnfeesharing_expected_nbr_turns = New Global.System.Data.DataColumn("feesharing_expected_nbr_turns", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_expected_nbr_turns)
            Me.columnproducts_desire = New Global.System.Data.DataColumn("products_desire", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_desire)
            Me.columnproducts_desire_weighted = New Global.System.Data.DataColumn("products_desire_weighted", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_desire_weighted)
            Me.columnproducts_availability = New Global.System.Data.DataColumn("products_availability", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_availability)
            Me.columnquantity_to_sale = New Global.System.Data.DataColumn("quantity_to_sale", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquantity_to_sale)
            Me.columnproducts_sale_price = New Global.System.Data.DataColumn("products_sale_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_sale_price)
            Me.columnproducts_sale_date = New Global.System.Data.DataColumn("products_sale_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_sale_date)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey10", New Global.System.Data.DataColumn() {Me.columnproducts_id}, true))
            Me.columnproducts_id.AllowDBNull = false
            Me.columnproducts_id.Unique = true
            Me.columnproducts_quantity.AllowDBNull = false
            Me.columnimdb_id.AllowDBNull = false
            Me.columnproducts_title.AllowDBNull = false
            Me.columnproducts_price.AllowDBNull = false
            Me.columnproducts_status.AllowDBNull = false
            Me.columnproducts_tax_class_id.AllowDBNull = false
            Me.columnproducts_ordered.AllowDBNull = false
            Me.columnproducts_countries_id.AllowDBNull = false
            Me.columnproducts_barcode.AllowDBNull = false
            Me.columnproducts_dvd_quantity.AllowDBNull = false
            Me.columnproducts_language_fr.AllowDBNull = false
            Me.columnproducts_undertitle_nl.AllowDBNull = false
            Me.columnin_the_bags.AllowDBNull = false
            Me.columnin_the_bags_next.AllowDBNull = false
            Me.columnin_cinema_now.AllowDBNull = false
            Me.columnproducts_dvdpostchoice.AllowDBNull = false
            Me.columnproducts_french.AllowDBNull = false
            Me.columnproducts_next.AllowDBNull = false
            Me.columnproducts_tiscali_hp_fr.AllowDBNull = false
            Me.columnproducts_tiscali_hp_nl.AllowDBNull = false
            Me.columnproducts_series_id.AllowDBNull = false
            Me.columnproducts_series_number.AllowDBNull = false
            Me.columnproducts_series_aboprocess_id.AllowDBNull = false
            Me.columnproducts_series_aboprocess_number.AllowDBNull = false
            Me.columnfeesharing.AllowDBNull = false
            Me.columnfeesharing_upfront_fee.AllowDBNull = false
            Me.columnfeesharing_upfront_fee_recoverable.AllowDBNull = false
            Me.columnfeesharing_turn_price.AllowDBNull = false
            Me.columnfeesharing_turn_price_after3month.AllowDBNull = false
            Me.columnfeesharing_buy_option_price.AllowDBNull = false
            Me.columnfeesharing_expected_nbr_turns.AllowDBNull = false
            Me.columnproducts_desire.AllowDBNull = false
            Me.columnproducts_desire_weighted.AllowDBNull = false
            Me.columnproducts_availability.AllowDBNull = false
            Me.columnquantity_to_sale.AllowDBNull = false
            Me.columnproducts_sale_price.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewproductsRow() As productsRow
            Return CType(Me.NewRow,productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New productsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.productsRowChangedEvent) Is Nothing) Then
                RaiseEvent productsRowChanged(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.productsRowChangingEvent) Is Nothing) Then
                RaiseEvent productsRowChanging(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.productsRowDeletedEvent) Is Nothing) Then
                RaiseEvent productsRowDeleted(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.productsRowDeletingEvent) Is Nothing) Then
                RaiseEvent productsRowDeleting(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveproductsRow(ByVal row As productsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "productsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class products_adultDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnproducts_quantity As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnproducts_image As Global.System.Data.DataColumn
        
        Private columnproducts_price As Global.System.Data.DataColumn
        
        Private columnproducts_date_added As Global.System.Data.DataColumn
        
        Private columnproducts_last_modified As Global.System.Data.DataColumn
        
        Private columnproducts_date_available As Global.System.Data.DataColumn
        
        Private columnproducts_weight As Global.System.Data.DataColumn
        
        Private columnproducts_status As Global.System.Data.DataColumn
        
        Private columnproducts_tax_class_id As Global.System.Data.DataColumn
        
        Private columnmanufacturers_id As Global.System.Data.DataColumn
        
        Private columndistributors_adult_id As Global.System.Data.DataColumn
        
        Private columnproducts_ordered As Global.System.Data.DataColumn
        
        Private columnproducts_public As Global.System.Data.DataColumn
        
        Private columnproducts_runtime As Global.System.Data.DataColumn
        
        Private columnproducts_year As Global.System.Data.DataColumn
        
        Private columnproducts_picture_format As Global.System.Data.DataColumn
        
        Private columnproducts_rating As Global.System.Data.DataColumn
        
        Private columnproducts_directors_id As Global.System.Data.DataColumn
        
        Private columnproducts_regional_code As Global.System.Data.DataColumn
        
        Private columnproducts_studio As Global.System.Data.DataColumn
        
        Private columnproducts_barcode As Global.System.Data.DataColumn
        
        Private columnproducts_dvd_quantity As Global.System.Data.DataColumn
        
        Private columnproducts_language_fr As Global.System.Data.DataColumn
        
        Private columnproducts_undertitle_nl As Global.System.Data.DataColumn
        
        Private columnin_the_bags As Global.System.Data.DataColumn
        
        Private columnproducts_dvdpostchoice As Global.System.Data.DataColumn
        
        Private columnproducts_other_language As Global.System.Data.DataColumn
        
        Private columnproducts_french As Global.System.Data.DataColumn
        
        Private columnproducts_next As Global.System.Data.DataColumn
        
        Private columnproducts_desire As Global.System.Data.DataColumn
        
        Private columnproducts_desire_weighted As Global.System.Data.DataColumn
        
        Private columnproducts_availability As Global.System.Data.DataColumn
        
        Private columnquantity_to_sale As Global.System.Data.DataColumn
        
        Private columnproducts_sale_price As Global.System.Data.DataColumn
        
        Private columnquantity_new_to_sale As Global.System.Data.DataColumn
        
        Private columnproducts_new_sale_price As Global.System.Data.DataColumn
        
        Private columnonly_for_sale As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "products_adult"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_quantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_image
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_last_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_availableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_available
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_weightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tax_class_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tax_class_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property manufacturers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmanufacturers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property distributors_adult_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndistributors_adult_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_orderedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_ordered
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_publicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_public
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_runtimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_runtime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_yearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_picture_formatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_picture_format
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_ratingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_rating
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_directors_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_directors_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_regional_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_regional_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_studioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_studio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_barcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_barcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvd_quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvd_quantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_language_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_language_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_undertitle_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_undertitle_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_the_bagsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_the_bags
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvdpostchoiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvdpostchoice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_other_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_other_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_frenchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_french
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_nextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_next
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_desireColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_desire
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_desire_weightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_desire_weighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_availabilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_availability
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quantity_to_saleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquantity_to_sale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_sale_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_sale_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quantity_new_to_saleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquantity_new_to_sale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_new_sale_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_new_sale_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property only_for_saleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnonly_for_sale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As products_adultRow
            Get
                Return CType(Me.Rows(index),products_adultRow)
            End Get
        End Property
        
        Public Event products_adultRowChanging As products_adultRowChangeEventHandler
        
        Public Event products_adultRowChanged As products_adultRowChangeEventHandler
        
        Public Event products_adultRowDeleting As products_adultRowChangeEventHandler
        
        Public Event products_adultRowDeleted As products_adultRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addproducts_adultRow(ByVal row As products_adultRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addproducts_adultRow( _
                    ByVal products_quantity As Integer,  _
                    ByVal products_model As String,  _
                    ByVal products_image As String,  _
                    ByVal products_price As Decimal,  _
                    ByVal products_date_added As Date,  _
                    ByVal products_last_modified As Date,  _
                    ByVal products_date_available As Date,  _
                    ByVal products_weight As Integer,  _
                    ByVal products_status As Integer,  _
                    ByVal products_tax_class_id As Integer,  _
                    ByVal manufacturers_id As Integer,  _
                    ByVal distributors_adult_id As Integer,  _
                    ByVal products_ordered As Integer,  _
                    ByVal products_public As Integer,  _
                    ByVal products_runtime As Integer,  _
                    ByVal products_year As Integer,  _
                    ByVal products_picture_format As Integer,  _
                    ByVal products_rating As Integer,  _
                    ByVal products_directors_id As Integer,  _
                    ByVal products_regional_code As Integer,  _
                    ByVal products_studio As Integer,  _
                    ByVal products_barcode As Integer,  _
                    ByVal products_dvd_quantity As Integer,  _
                    ByVal products_language_fr As Integer,  _
                    ByVal products_undertitle_nl As Integer,  _
                    ByVal in_the_bags As Integer,  _
                    ByVal products_dvdpostchoice As Integer,  _
                    ByVal products_other_language As Integer,  _
                    ByVal products_french As Integer,  _
                    ByVal products_next As Integer,  _
                    ByVal products_desire As Integer,  _
                    ByVal products_desire_weighted As Decimal,  _
                    ByVal products_availability As Integer,  _
                    ByVal quantity_to_sale As Integer,  _
                    ByVal products_sale_price As Decimal,  _
                    ByVal quantity_new_to_sale As Integer,  _
                    ByVal products_new_sale_price As Decimal,  _
                    ByVal only_for_sale As Integer) As products_adultRow
            Dim rowproducts_adultRow As products_adultRow = CType(Me.NewRow,products_adultRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, products_quantity, products_model, products_image, products_price, products_date_added, products_last_modified, products_date_available, products_weight, products_status, products_tax_class_id, manufacturers_id, distributors_adult_id, products_ordered, products_public, products_runtime, products_year, products_picture_format, products_rating, products_directors_id, products_regional_code, products_studio, products_barcode, products_dvd_quantity, products_language_fr, products_undertitle_nl, in_the_bags, products_dvdpostchoice, products_other_language, products_french, products_next, products_desire, products_desire_weighted, products_availability, quantity_to_sale, products_sale_price, quantity_new_to_sale, products_new_sale_price, only_for_sale}
            rowproducts_adultRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproducts_adultRow)
            Return rowproducts_adultRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproducts_id(ByVal products_id As Integer) As products_adultRow
            Return CType(Me.Rows.Find(New Object() {products_id}),products_adultRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As products_adultDataTable = CType(MyBase.Clone,products_adultDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New products_adultDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnproducts_quantity = MyBase.Columns("products_quantity")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnproducts_image = MyBase.Columns("products_image")
            Me.columnproducts_price = MyBase.Columns("products_price")
            Me.columnproducts_date_added = MyBase.Columns("products_date_added")
            Me.columnproducts_last_modified = MyBase.Columns("products_last_modified")
            Me.columnproducts_date_available = MyBase.Columns("products_date_available")
            Me.columnproducts_weight = MyBase.Columns("products_weight")
            Me.columnproducts_status = MyBase.Columns("products_status")
            Me.columnproducts_tax_class_id = MyBase.Columns("products_tax_class_id")
            Me.columnmanufacturers_id = MyBase.Columns("manufacturers_id")
            Me.columndistributors_adult_id = MyBase.Columns("distributors_adult_id")
            Me.columnproducts_ordered = MyBase.Columns("products_ordered")
            Me.columnproducts_public = MyBase.Columns("products_public")
            Me.columnproducts_runtime = MyBase.Columns("products_runtime")
            Me.columnproducts_year = MyBase.Columns("products_year")
            Me.columnproducts_picture_format = MyBase.Columns("products_picture_format")
            Me.columnproducts_rating = MyBase.Columns("products_rating")
            Me.columnproducts_directors_id = MyBase.Columns("products_directors_id")
            Me.columnproducts_regional_code = MyBase.Columns("products_regional_code")
            Me.columnproducts_studio = MyBase.Columns("products_studio")
            Me.columnproducts_barcode = MyBase.Columns("products_barcode")
            Me.columnproducts_dvd_quantity = MyBase.Columns("products_dvd_quantity")
            Me.columnproducts_language_fr = MyBase.Columns("products_language_fr")
            Me.columnproducts_undertitle_nl = MyBase.Columns("products_undertitle_nl")
            Me.columnin_the_bags = MyBase.Columns("in_the_bags")
            Me.columnproducts_dvdpostchoice = MyBase.Columns("products_dvdpostchoice")
            Me.columnproducts_other_language = MyBase.Columns("products_other_language")
            Me.columnproducts_french = MyBase.Columns("products_french")
            Me.columnproducts_next = MyBase.Columns("products_next")
            Me.columnproducts_desire = MyBase.Columns("products_desire")
            Me.columnproducts_desire_weighted = MyBase.Columns("products_desire_weighted")
            Me.columnproducts_availability = MyBase.Columns("products_availability")
            Me.columnquantity_to_sale = MyBase.Columns("quantity_to_sale")
            Me.columnproducts_sale_price = MyBase.Columns("products_sale_price")
            Me.columnquantity_new_to_sale = MyBase.Columns("quantity_new_to_sale")
            Me.columnproducts_new_sale_price = MyBase.Columns("products_new_sale_price")
            Me.columnonly_for_sale = MyBase.Columns("only_for_sale")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnproducts_quantity = New Global.System.Data.DataColumn("products_quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_quantity)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnproducts_image = New Global.System.Data.DataColumn("products_image", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_image)
            Me.columnproducts_price = New Global.System.Data.DataColumn("products_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_price)
            Me.columnproducts_date_added = New Global.System.Data.DataColumn("products_date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_added)
            Me.columnproducts_last_modified = New Global.System.Data.DataColumn("products_last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_last_modified)
            Me.columnproducts_date_available = New Global.System.Data.DataColumn("products_date_available", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_available)
            Me.columnproducts_weight = New Global.System.Data.DataColumn("products_weight", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_weight)
            Me.columnproducts_status = New Global.System.Data.DataColumn("products_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_status)
            Me.columnproducts_tax_class_id = New Global.System.Data.DataColumn("products_tax_class_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tax_class_id)
            Me.columnmanufacturers_id = New Global.System.Data.DataColumn("manufacturers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmanufacturers_id)
            Me.columndistributors_adult_id = New Global.System.Data.DataColumn("distributors_adult_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndistributors_adult_id)
            Me.columnproducts_ordered = New Global.System.Data.DataColumn("products_ordered", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_ordered)
            Me.columnproducts_public = New Global.System.Data.DataColumn("products_public", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_public)
            Me.columnproducts_runtime = New Global.System.Data.DataColumn("products_runtime", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_runtime)
            Me.columnproducts_year = New Global.System.Data.DataColumn("products_year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_year)
            Me.columnproducts_picture_format = New Global.System.Data.DataColumn("products_picture_format", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_picture_format)
            Me.columnproducts_rating = New Global.System.Data.DataColumn("products_rating", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_rating)
            Me.columnproducts_directors_id = New Global.System.Data.DataColumn("products_directors_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_directors_id)
            Me.columnproducts_regional_code = New Global.System.Data.DataColumn("products_regional_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_regional_code)
            Me.columnproducts_studio = New Global.System.Data.DataColumn("products_studio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_studio)
            Me.columnproducts_barcode = New Global.System.Data.DataColumn("products_barcode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_barcode)
            Me.columnproducts_dvd_quantity = New Global.System.Data.DataColumn("products_dvd_quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvd_quantity)
            Me.columnproducts_language_fr = New Global.System.Data.DataColumn("products_language_fr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_language_fr)
            Me.columnproducts_undertitle_nl = New Global.System.Data.DataColumn("products_undertitle_nl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_undertitle_nl)
            Me.columnin_the_bags = New Global.System.Data.DataColumn("in_the_bags", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_the_bags)
            Me.columnproducts_dvdpostchoice = New Global.System.Data.DataColumn("products_dvdpostchoice", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvdpostchoice)
            Me.columnproducts_other_language = New Global.System.Data.DataColumn("products_other_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_other_language)
            Me.columnproducts_french = New Global.System.Data.DataColumn("products_french", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_french)
            Me.columnproducts_next = New Global.System.Data.DataColumn("products_next", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_next)
            Me.columnproducts_desire = New Global.System.Data.DataColumn("products_desire", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_desire)
            Me.columnproducts_desire_weighted = New Global.System.Data.DataColumn("products_desire_weighted", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_desire_weighted)
            Me.columnproducts_availability = New Global.System.Data.DataColumn("products_availability", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_availability)
            Me.columnquantity_to_sale = New Global.System.Data.DataColumn("quantity_to_sale", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquantity_to_sale)
            Me.columnproducts_sale_price = New Global.System.Data.DataColumn("products_sale_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_sale_price)
            Me.columnquantity_new_to_sale = New Global.System.Data.DataColumn("quantity_new_to_sale", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquantity_new_to_sale)
            Me.columnproducts_new_sale_price = New Global.System.Data.DataColumn("products_new_sale_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_new_sale_price)
            Me.columnonly_for_sale = New Global.System.Data.DataColumn("only_for_sale", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnonly_for_sale)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey11", New Global.System.Data.DataColumn() {Me.columnproducts_id}, true))
            Me.columnproducts_id.AutoIncrement = true
            Me.columnproducts_id.AllowDBNull = false
            Me.columnproducts_id.ReadOnly = true
            Me.columnproducts_id.Unique = true
            Me.columnproducts_quantity.AllowDBNull = false
            Me.columnproducts_price.AllowDBNull = false
            Me.columnproducts_status.AllowDBNull = false
            Me.columnproducts_tax_class_id.AllowDBNull = false
            Me.columndistributors_adult_id.AllowDBNull = false
            Me.columnproducts_ordered.AllowDBNull = false
            Me.columnproducts_dvd_quantity.AllowDBNull = false
            Me.columnproducts_language_fr.AllowDBNull = false
            Me.columnproducts_undertitle_nl.AllowDBNull = false
            Me.columnin_the_bags.AllowDBNull = false
            Me.columnproducts_dvdpostchoice.AllowDBNull = false
            Me.columnproducts_french.AllowDBNull = false
            Me.columnproducts_next.AllowDBNull = false
            Me.columnproducts_desire.AllowDBNull = false
            Me.columnproducts_desire_weighted.AllowDBNull = false
            Me.columnproducts_availability.AllowDBNull = false
            Me.columnquantity_to_sale.AllowDBNull = false
            Me.columnproducts_sale_price.AllowDBNull = false
            Me.columnquantity_new_to_sale.AllowDBNull = false
            Me.columnproducts_new_sale_price.AllowDBNull = false
            Me.columnonly_for_sale.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newproducts_adultRow() As products_adultRow
            Return CType(Me.NewRow,products_adultRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New products_adultRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(products_adultRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.products_adultRowChangedEvent) Is Nothing) Then
                RaiseEvent products_adultRowChanged(Me, New products_adultRowChangeEvent(CType(e.Row,products_adultRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.products_adultRowChangingEvent) Is Nothing) Then
                RaiseEvent products_adultRowChanging(Me, New products_adultRowChangeEvent(CType(e.Row,products_adultRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.products_adultRowDeletedEvent) Is Nothing) Then
                RaiseEvent products_adultRowDeleted(Me, New products_adultRowChangeEvent(CType(e.Row,products_adultRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.products_adultRowDeletingEvent) Is Nothing) Then
                RaiseEvent products_adultRowDeleting(Me, New products_adultRowChangeEvent(CType(e.Row,products_adultRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeproducts_adultRow(ByVal row As products_adultRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "products_adultDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class products_descriptionDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnlanguage_id As Global.System.Data.DataColumn
        
        Private columnproducts_name As Global.System.Data.DataColumn
        
        Private columnproducts_description As Global.System.Data.DataColumn
        
        Private columnproducts_bonus As Global.System.Data.DataColumn
        
        Private columnproducts_url As Global.System.Data.DataColumn
        
        Private columnproducts_awards As Global.System.Data.DataColumn
        
        Private columnproducts_viewed As Global.System.Data.DataColumn
        
        Private columnproducts_image_big As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "products_description"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property language_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlanguage_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_descriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_bonusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_bonus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_urlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_url
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_awardsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_awards
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_viewedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_viewed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_image_bigColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_image_big
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As products_descriptionRow
            Get
                Return CType(Me.Rows(index),products_descriptionRow)
            End Get
        End Property
        
        Public Event products_descriptionRowChanging As products_descriptionRowChangeEventHandler
        
        Public Event products_descriptionRowChanged As products_descriptionRowChangeEventHandler
        
        Public Event products_descriptionRowDeleting As products_descriptionRowChangeEventHandler
        
        Public Event products_descriptionRowDeleted As products_descriptionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addproducts_descriptionRow(ByVal row As products_descriptionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addproducts_descriptionRow(ByVal language_id As Integer, ByVal products_name As String, ByVal products_description As String, ByVal products_bonus As String, ByVal products_url As String, ByVal products_awards As String, ByVal products_viewed As Integer, ByVal products_image_big As String) As products_descriptionRow
            Dim rowproducts_descriptionRow As products_descriptionRow = CType(Me.NewRow,products_descriptionRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, language_id, products_name, products_description, products_bonus, products_url, products_awards, products_viewed, products_image_big}
            rowproducts_descriptionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproducts_descriptionRow)
            Return rowproducts_descriptionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproducts_idlanguage_id(ByVal products_id As Integer, ByVal language_id As Integer) As products_descriptionRow
            Return CType(Me.Rows.Find(New Object() {products_id, language_id}),products_descriptionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As products_descriptionDataTable = CType(MyBase.Clone,products_descriptionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New products_descriptionDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnlanguage_id = MyBase.Columns("language_id")
            Me.columnproducts_name = MyBase.Columns("products_name")
            Me.columnproducts_description = MyBase.Columns("products_description")
            Me.columnproducts_bonus = MyBase.Columns("products_bonus")
            Me.columnproducts_url = MyBase.Columns("products_url")
            Me.columnproducts_awards = MyBase.Columns("products_awards")
            Me.columnproducts_viewed = MyBase.Columns("products_viewed")
            Me.columnproducts_image_big = MyBase.Columns("products_image_big")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnlanguage_id = New Global.System.Data.DataColumn("language_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanguage_id)
            Me.columnproducts_name = New Global.System.Data.DataColumn("products_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_name)
            Me.columnproducts_description = New Global.System.Data.DataColumn("products_description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_description)
            Me.columnproducts_bonus = New Global.System.Data.DataColumn("products_bonus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_bonus)
            Me.columnproducts_url = New Global.System.Data.DataColumn("products_url", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_url)
            Me.columnproducts_awards = New Global.System.Data.DataColumn("products_awards", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_awards)
            Me.columnproducts_viewed = New Global.System.Data.DataColumn("products_viewed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_viewed)
            Me.columnproducts_image_big = New Global.System.Data.DataColumn("products_image_big", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_image_big)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey12", New Global.System.Data.DataColumn() {Me.columnproducts_id, Me.columnlanguage_id}, true))
            Me.columnproducts_id.AutoIncrement = true
            Me.columnproducts_id.AllowDBNull = false
            Me.columnproducts_id.ReadOnly = true
            Me.columnlanguage_id.AllowDBNull = false
            Me.columnproducts_name.AllowDBNull = false
            Me.columnproducts_bonus.AllowDBNull = false
            Me.columnproducts_awards.AllowDBNull = false
            Me.columnproducts_image_big.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newproducts_descriptionRow() As products_descriptionRow
            Return CType(Me.NewRow,products_descriptionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New products_descriptionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(products_descriptionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.products_descriptionRowChangedEvent) Is Nothing) Then
                RaiseEvent products_descriptionRowChanged(Me, New products_descriptionRowChangeEvent(CType(e.Row,products_descriptionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.products_descriptionRowChangingEvent) Is Nothing) Then
                RaiseEvent products_descriptionRowChanging(Me, New products_descriptionRowChangeEvent(CType(e.Row,products_descriptionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.products_descriptionRowDeletedEvent) Is Nothing) Then
                RaiseEvent products_descriptionRowDeleted(Me, New products_descriptionRowChangeEvent(CType(e.Row,products_descriptionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.products_descriptionRowDeletingEvent) Is Nothing) Then
                RaiseEvent products_descriptionRowDeleting(Me, New products_descriptionRowChangeEvent(CType(e.Row,products_descriptionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeproducts_descriptionRow(ByVal row As products_descriptionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "products_descriptionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class directorsDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columndirectors_id As Global.System.Data.DataColumn
        
        Private columndirectors_name As Global.System.Data.DataColumn
        
        Private columndirectors_image As Global.System.Data.DataColumn
        
        Private columndirectors_dateofbirth As Global.System.Data.DataColumn
        
        Private columndirectors_description As Global.System.Data.DataColumn
        
        Private columndirectors_awards As Global.System.Data.DataColumn
        
        Private columntop_directors As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "directors"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property directors_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirectors_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property directors_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirectors_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property directors_imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirectors_image
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property directors_dateofbirthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirectors_dateofbirth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property directors_descriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirectors_description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property directors_awardsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirectors_awards
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property top_directorsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntop_directors
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As directorsRow
            Get
                Return CType(Me.Rows(index),directorsRow)
            End Get
        End Property
        
        Public Event directorsRowChanging As directorsRowChangeEventHandler
        
        Public Event directorsRowChanged As directorsRowChangeEventHandler
        
        Public Event directorsRowDeleting As directorsRowChangeEventHandler
        
        Public Event directorsRowDeleted As directorsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AdddirectorsRow(ByVal row As directorsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AdddirectorsRow(ByVal directors_name As String, ByVal directors_image As String, ByVal directors_dateofbirth As String, ByVal directors_description As String, ByVal directors_awards As String, ByVal top_directors As Integer) As directorsRow
            Dim rowdirectorsRow As directorsRow = CType(Me.NewRow,directorsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, directors_name, directors_image, directors_dateofbirth, directors_description, directors_awards, top_directors}
            rowdirectorsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdirectorsRow)
            Return rowdirectorsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBydirectors_id(ByVal directors_id As Integer) As directorsRow
            Return CType(Me.Rows.Find(New Object() {directors_id}),directorsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As directorsDataTable = CType(MyBase.Clone,directorsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New directorsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndirectors_id = MyBase.Columns("directors_id")
            Me.columndirectors_name = MyBase.Columns("directors_name")
            Me.columndirectors_image = MyBase.Columns("directors_image")
            Me.columndirectors_dateofbirth = MyBase.Columns("directors_dateofbirth")
            Me.columndirectors_description = MyBase.Columns("directors_description")
            Me.columndirectors_awards = MyBase.Columns("directors_awards")
            Me.columntop_directors = MyBase.Columns("top_directors")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndirectors_id = New Global.System.Data.DataColumn("directors_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirectors_id)
            Me.columndirectors_name = New Global.System.Data.DataColumn("directors_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirectors_name)
            Me.columndirectors_image = New Global.System.Data.DataColumn("directors_image", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirectors_image)
            Me.columndirectors_dateofbirth = New Global.System.Data.DataColumn("directors_dateofbirth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirectors_dateofbirth)
            Me.columndirectors_description = New Global.System.Data.DataColumn("directors_description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirectors_description)
            Me.columndirectors_awards = New Global.System.Data.DataColumn("directors_awards", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirectors_awards)
            Me.columntop_directors = New Global.System.Data.DataColumn("top_directors", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntop_directors)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey13", New Global.System.Data.DataColumn() {Me.columndirectors_id}, true))
            Me.columndirectors_id.AutoIncrement = true
            Me.columndirectors_id.AllowDBNull = false
            Me.columndirectors_id.ReadOnly = true
            Me.columndirectors_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewdirectorsRow() As directorsRow
            Return CType(Me.NewRow,directorsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New directorsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(directorsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.directorsRowChangedEvent) Is Nothing) Then
                RaiseEvent directorsRowChanged(Me, New directorsRowChangeEvent(CType(e.Row,directorsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.directorsRowChangingEvent) Is Nothing) Then
                RaiseEvent directorsRowChanging(Me, New directorsRowChangeEvent(CType(e.Row,directorsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.directorsRowDeletedEvent) Is Nothing) Then
                RaiseEvent directorsRowDeleted(Me, New directorsRowChangeEvent(CType(e.Row,directorsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.directorsRowDeletingEvent) Is Nothing) Then
                RaiseEvent directorsRowDeleting(Me, New directorsRowChangeEvent(CType(e.Row,directorsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovedirectorsRow(ByVal row As directorsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "directorsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class products_actors_view1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnactors_id As Global.System.Data.DataColumn
        
        Private columnactors_name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "products_actors_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property actors_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactors_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property actors_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactors_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As products_actors_view1Row
            Get
                Return CType(Me.Rows(index),products_actors_view1Row)
            End Get
        End Property
        
        Public Event products_actors_view1RowChanging As products_actors_view1RowChangeEventHandler
        
        Public Event products_actors_view1RowChanged As products_actors_view1RowChangeEventHandler
        
        Public Event products_actors_view1RowDeleting As products_actors_view1RowChangeEventHandler
        
        Public Event products_actors_view1RowDeleted As products_actors_view1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addproducts_actors_view1Row(ByVal row As products_actors_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addproducts_actors_view1Row(ByVal products_id As Integer, ByVal actors_id As Integer, ByVal actors_name As String) As products_actors_view1Row
            Dim rowproducts_actors_view1Row As products_actors_view1Row = CType(Me.NewRow,products_actors_view1Row)
            Dim columnValuesArray() As Object = New Object() {products_id, actors_id, actors_name}
            rowproducts_actors_view1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowproducts_actors_view1Row)
            Return rowproducts_actors_view1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As products_actors_view1DataTable = CType(MyBase.Clone,products_actors_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New products_actors_view1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnactors_id = MyBase.Columns("actors_id")
            Me.columnactors_name = MyBase.Columns("actors_name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnactors_id = New Global.System.Data.DataColumn("actors_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactors_id)
            Me.columnactors_name = New Global.System.Data.DataColumn("actors_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactors_name)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newproducts_actors_view1Row() As products_actors_view1Row
            Return CType(Me.NewRow,products_actors_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New products_actors_view1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(products_actors_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.products_actors_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent products_actors_view1RowChanged(Me, New products_actors_view1RowChangeEvent(CType(e.Row,products_actors_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.products_actors_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent products_actors_view1RowChanging(Me, New products_actors_view1RowChangeEvent(CType(e.Row,products_actors_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.products_actors_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent products_actors_view1RowDeleted(Me, New products_actors_view1RowChangeEvent(CType(e.Row,products_actors_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.products_actors_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent products_actors_view1RowDeleting(Me, New products_actors_view1RowChangeEvent(CType(e.Row,products_actors_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeproducts_actors_view1Row(ByVal row As products_actors_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "products_actors_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class prod_instock_image_view1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columncnt_dvd As Global.System.Data.DataColumn
        
        Private columnimage_fr As Global.System.Data.DataColumn
        
        Private columnimage_nl As Global.System.Data.DataColumn
        
        Private columnimage_en As Global.System.Data.DataColumn
        
        Private columnname_fr As Global.System.Data.DataColumn
        
        Private columnname_nl As Global.System.Data.DataColumn
        
        Private columnname_en As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "prod_instock_image_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cnt_dvdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncnt_dvd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property image_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimage_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property image_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimage_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property image_enColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimage_en
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property name_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property name_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property name_enColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname_en
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As prod_instock_image_view1Row
            Get
                Return CType(Me.Rows(index),prod_instock_image_view1Row)
            End Get
        End Property
        
        Public Event prod_instock_image_view1RowChanging As prod_instock_image_view1RowChangeEventHandler
        
        Public Event prod_instock_image_view1RowChanged As prod_instock_image_view1RowChangeEventHandler
        
        Public Event prod_instock_image_view1RowDeleting As prod_instock_image_view1RowChangeEventHandler
        
        Public Event prod_instock_image_view1RowDeleted As prod_instock_image_view1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addprod_instock_image_view1Row(ByVal row As prod_instock_image_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addprod_instock_image_view1Row(ByVal products_id As Integer, ByVal cnt_dvd As Integer, ByVal image_fr As String, ByVal image_nl As String, ByVal image_en As String, ByVal name_fr As String, ByVal name_nl As String, ByVal name_en As String) As prod_instock_image_view1Row
            Dim rowprod_instock_image_view1Row As prod_instock_image_view1Row = CType(Me.NewRow,prod_instock_image_view1Row)
            Dim columnValuesArray() As Object = New Object() {products_id, cnt_dvd, image_fr, image_nl, image_en, name_fr, name_nl, name_en}
            rowprod_instock_image_view1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowprod_instock_image_view1Row)
            Return rowprod_instock_image_view1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As prod_instock_image_view1DataTable = CType(MyBase.Clone,prod_instock_image_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New prod_instock_image_view1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columncnt_dvd = MyBase.Columns("cnt_dvd")
            Me.columnimage_fr = MyBase.Columns("image_fr")
            Me.columnimage_nl = MyBase.Columns("image_nl")
            Me.columnimage_en = MyBase.Columns("image_en")
            Me.columnname_fr = MyBase.Columns("name_fr")
            Me.columnname_nl = MyBase.Columns("name_nl")
            Me.columnname_en = MyBase.Columns("name_en")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columncnt_dvd = New Global.System.Data.DataColumn("cnt_dvd", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncnt_dvd)
            Me.columnimage_fr = New Global.System.Data.DataColumn("image_fr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimage_fr)
            Me.columnimage_nl = New Global.System.Data.DataColumn("image_nl", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimage_nl)
            Me.columnimage_en = New Global.System.Data.DataColumn("image_en", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimage_en)
            Me.columnname_fr = New Global.System.Data.DataColumn("name_fr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname_fr)
            Me.columnname_nl = New Global.System.Data.DataColumn("name_nl", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname_nl)
            Me.columnname_en = New Global.System.Data.DataColumn("name_en", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname_en)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newprod_instock_image_view1Row() As prod_instock_image_view1Row
            Return CType(Me.NewRow,prod_instock_image_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New prod_instock_image_view1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(prod_instock_image_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.prod_instock_image_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent prod_instock_image_view1RowChanged(Me, New prod_instock_image_view1RowChangeEvent(CType(e.Row,prod_instock_image_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.prod_instock_image_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent prod_instock_image_view1RowChanging(Me, New prod_instock_image_view1RowChangeEvent(CType(e.Row,prod_instock_image_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.prod_instock_image_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent prod_instock_image_view1RowDeleted(Me, New prod_instock_image_view1RowChangeEvent(CType(e.Row,prod_instock_image_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.prod_instock_image_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent prod_instock_image_view1RowDeleting(Me, New prod_instock_image_view1RowChangeEvent(CType(e.Row,prod_instock_image_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeprod_instock_image_view1Row(ByVal row As prod_instock_image_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "prod_instock_image_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class customers_view2DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_gender As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_abo As Global.System.Data.DataColumn
        
        Private columncustomers_abo_type As Global.System.Data.DataColumn
        
        Private columncustomers_dob As Global.System.Data.DataColumn
        
        Private columncustomers_abo_validityto As Global.System.Data.DataColumn
        
        Private columnship_firstname As Global.System.Data.DataColumn
        
        Private columnship_lastname As Global.System.Data.DataColumn
        
        Private columnship_address As Global.System.Data.DataColumn
        
        Private columnship_postcode As Global.System.Data.DataColumn
        
        Private columnship_city As Global.System.Data.DataColumn
        
        Private columnship_country As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columncustomers_telephone_evening As Global.System.Data.DataColumn
        
        Private columncustomers_newsletter As Global.System.Data.DataColumn
        
        Private columncustomers_next_abo_type As Global.System.Data.DataColumn
        
        Private columncustomers_newsletterpartner As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_adult As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_adult As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_credit As Global.System.Data.DataColumn
        
        Private columncustomers_abo_multishipment As Global.System.Data.DataColumn
        
        Private columncustomers_abo_payment_method As Global.System.Data.DataColumn
        
        Private columnaccount_created As Global.System.Data.DataColumn
        
        Private columnlang_id As Global.System.Data.DataColumn
        
        Private columnlang_name As Global.System.Data.DataColumn
        
        Private columndate_lastrented As Global.System.Data.DataColumn
        
        Private columnlast_abo_action_id As Global.System.Data.DataColumn
        
        Private columnlast_abo_action_name As Global.System.Data.DataColumn
        
        Private columnlast_abo_action_date As Global.System.Data.DataColumn
        
        Private columnnbr_dvd_wishlist As Global.System.Data.DataColumn
        
        Private columnbefore_last_action As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "customers_view2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_dob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ship_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnship_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ship_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnship_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ship_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnship_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ship_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnship_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ship_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnship_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ship_countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnship_country
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephone_eveningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone_evening
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_next_abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_next_abo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterpartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletterpartner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_creditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_credit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_multishipmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_multishipment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_payment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property account_createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccount_created
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lang_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlang_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lang_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlang_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_lastrentedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_lastrented
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_abo_action_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_abo_action_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_abo_action_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_abo_action_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_abo_action_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_abo_action_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nbr_dvd_wishlistColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnbr_dvd_wishlist
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property before_last_actionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbefore_last_action
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As customers_view2Row
            Get
                Return CType(Me.Rows(index),customers_view2Row)
            End Get
        End Property
        
        Public Event customers_view2RowChanging As customers_view2RowChangeEventHandler
        
        Public Event customers_view2RowChanged As customers_view2RowChangeEventHandler
        
        Public Event customers_view2RowDeleting As customers_view2RowChangeEventHandler
        
        Public Event customers_view2RowDeleted As customers_view2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addcustomers_view2Row(ByVal row As customers_view2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addcustomers_view2Row( _
                    ByVal customers_id As Integer,  _
                    ByVal customers_gender As String,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_lastname As String,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_abo As Integer,  _
                    ByVal customers_abo_type As Integer,  _
                    ByVal customers_dob As Date,  _
                    ByVal customers_abo_validityto As Date,  _
                    ByVal ship_firstname As String,  _
                    ByVal ship_lastname As String,  _
                    ByVal ship_address As String,  _
                    ByVal ship_postcode As String,  _
                    ByVal ship_city As String,  _
                    ByVal ship_country As String,  _
                    ByVal customers_telephone As String,  _
                    ByVal customers_telephone_evening As String,  _
                    ByVal customers_newsletter As String,  _
                    ByVal customers_next_abo_type As String,  _
                    ByVal customers_newsletterpartner As String,  _
                    ByVal customers_abo_dvd_norm As Integer,  _
                    ByVal customers_abo_dvd_adult As Integer,  _
                    ByVal customers_abo_dvd_home_norm As Integer,  _
                    ByVal customers_abo_dvd_home_adult As Integer,  _
                    ByVal customers_abo_dvd_credit As Integer,  _
                    ByVal customers_abo_multishipment As Integer,  _
                    ByVal customers_abo_payment_method As Integer,  _
                    ByVal account_created As Date,  _
                    ByVal lang_id As Integer,  _
                    ByVal lang_name As String,  _
                    ByVal date_lastrented As Date,  _
                    ByVal last_abo_action_id As Integer,  _
                    ByVal last_abo_action_name As String,  _
                    ByVal last_abo_action_date As Date,  _
                    ByVal nbr_dvd_wishlist As Integer,  _
                    ByVal before_last_action As String) As customers_view2Row
            Dim rowcustomers_view2Row As customers_view2Row = CType(Me.NewRow,customers_view2Row)
            Dim columnValuesArray() As Object = New Object() {customers_id, customers_gender, customers_firstname, customers_lastname, customers_email_address, customers_abo, customers_abo_type, customers_dob, customers_abo_validityto, ship_firstname, ship_lastname, ship_address, ship_postcode, ship_city, ship_country, customers_telephone, customers_telephone_evening, customers_newsletter, customers_next_abo_type, customers_newsletterpartner, customers_abo_dvd_norm, customers_abo_dvd_adult, customers_abo_dvd_home_norm, customers_abo_dvd_home_adult, customers_abo_dvd_credit, customers_abo_multishipment, customers_abo_payment_method, account_created, lang_id, lang_name, date_lastrented, last_abo_action_id, last_abo_action_name, last_abo_action_date, nbr_dvd_wishlist, before_last_action}
            rowcustomers_view2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustomers_view2Row)
            Return rowcustomers_view2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As customers_view2DataTable = CType(MyBase.Clone,customers_view2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New customers_view2DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_gender = MyBase.Columns("customers_gender")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_abo = MyBase.Columns("customers_abo")
            Me.columncustomers_abo_type = MyBase.Columns("customers_abo_type")
            Me.columncustomers_dob = MyBase.Columns("customers_dob")
            Me.columncustomers_abo_validityto = MyBase.Columns("customers_abo_validityto")
            Me.columnship_firstname = MyBase.Columns("ship_firstname")
            Me.columnship_lastname = MyBase.Columns("ship_lastname")
            Me.columnship_address = MyBase.Columns("ship_address")
            Me.columnship_postcode = MyBase.Columns("ship_postcode")
            Me.columnship_city = MyBase.Columns("ship_city")
            Me.columnship_country = MyBase.Columns("ship_country")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columncustomers_telephone_evening = MyBase.Columns("customers_telephone_evening")
            Me.columncustomers_newsletter = MyBase.Columns("customers_newsletter")
            Me.columncustomers_next_abo_type = MyBase.Columns("customers_next_abo_type")
            Me.columncustomers_newsletterpartner = MyBase.Columns("customers_newsletterpartner")
            Me.columncustomers_abo_dvd_norm = MyBase.Columns("customers_abo_dvd_norm")
            Me.columncustomers_abo_dvd_adult = MyBase.Columns("customers_abo_dvd_adult")
            Me.columncustomers_abo_dvd_home_norm = MyBase.Columns("customers_abo_dvd_home_norm")
            Me.columncustomers_abo_dvd_home_adult = MyBase.Columns("customers_abo_dvd_home_adult")
            Me.columncustomers_abo_dvd_credit = MyBase.Columns("customers_abo_dvd_credit")
            Me.columncustomers_abo_multishipment = MyBase.Columns("customers_abo_multishipment")
            Me.columncustomers_abo_payment_method = MyBase.Columns("customers_abo_payment_method")
            Me.columnaccount_created = MyBase.Columns("account_created")
            Me.columnlang_id = MyBase.Columns("lang_id")
            Me.columnlang_name = MyBase.Columns("lang_name")
            Me.columndate_lastrented = MyBase.Columns("date_lastrented")
            Me.columnlast_abo_action_id = MyBase.Columns("last_abo_action_id")
            Me.columnlast_abo_action_name = MyBase.Columns("last_abo_action_name")
            Me.columnlast_abo_action_date = MyBase.Columns("last_abo_action_date")
            Me.columnnbr_dvd_wishlist = MyBase.Columns("nbr_dvd_wishlist")
            Me.columnbefore_last_action = MyBase.Columns("before_last_action")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_gender = New Global.System.Data.DataColumn("customers_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_gender)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_abo = New Global.System.Data.DataColumn("customers_abo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo)
            Me.columncustomers_abo_type = New Global.System.Data.DataColumn("customers_abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_type)
            Me.columncustomers_dob = New Global.System.Data.DataColumn("customers_dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_dob)
            Me.columncustomers_abo_validityto = New Global.System.Data.DataColumn("customers_abo_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_validityto)
            Me.columnship_firstname = New Global.System.Data.DataColumn("ship_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnship_firstname)
            Me.columnship_lastname = New Global.System.Data.DataColumn("ship_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnship_lastname)
            Me.columnship_address = New Global.System.Data.DataColumn("ship_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnship_address)
            Me.columnship_postcode = New Global.System.Data.DataColumn("ship_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnship_postcode)
            Me.columnship_city = New Global.System.Data.DataColumn("ship_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnship_city)
            Me.columnship_country = New Global.System.Data.DataColumn("ship_country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnship_country)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columncustomers_telephone_evening = New Global.System.Data.DataColumn("customers_telephone_evening", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone_evening)
            Me.columncustomers_newsletter = New Global.System.Data.DataColumn("customers_newsletter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletter)
            Me.columncustomers_next_abo_type = New Global.System.Data.DataColumn("customers_next_abo_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_next_abo_type)
            Me.columncustomers_newsletterpartner = New Global.System.Data.DataColumn("customers_newsletterpartner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletterpartner)
            Me.columncustomers_abo_dvd_norm = New Global.System.Data.DataColumn("customers_abo_dvd_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_norm)
            Me.columncustomers_abo_dvd_adult = New Global.System.Data.DataColumn("customers_abo_dvd_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_adult)
            Me.columncustomers_abo_dvd_home_norm = New Global.System.Data.DataColumn("customers_abo_dvd_home_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_norm)
            Me.columncustomers_abo_dvd_home_adult = New Global.System.Data.DataColumn("customers_abo_dvd_home_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_adult)
            Me.columncustomers_abo_dvd_credit = New Global.System.Data.DataColumn("customers_abo_dvd_credit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_credit)
            Me.columncustomers_abo_multishipment = New Global.System.Data.DataColumn("customers_abo_multishipment", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_multishipment)
            Me.columncustomers_abo_payment_method = New Global.System.Data.DataColumn("customers_abo_payment_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_payment_method)
            Me.columnaccount_created = New Global.System.Data.DataColumn("account_created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccount_created)
            Me.columnlang_id = New Global.System.Data.DataColumn("lang_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlang_id)
            Me.columnlang_name = New Global.System.Data.DataColumn("lang_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlang_name)
            Me.columndate_lastrented = New Global.System.Data.DataColumn("date_lastrented", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_lastrented)
            Me.columnlast_abo_action_id = New Global.System.Data.DataColumn("last_abo_action_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_abo_action_id)
            Me.columnlast_abo_action_name = New Global.System.Data.DataColumn("last_abo_action_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_abo_action_name)
            Me.columnlast_abo_action_date = New Global.System.Data.DataColumn("last_abo_action_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_abo_action_date)
            Me.columnnbr_dvd_wishlist = New Global.System.Data.DataColumn("nbr_dvd_wishlist", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnbr_dvd_wishlist)
            Me.columnbefore_last_action = New Global.System.Data.DataColumn("before_last_action", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbefore_last_action)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newcustomers_view2Row() As customers_view2Row
            Return CType(Me.NewRow,customers_view2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New customers_view2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(customers_view2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.customers_view2RowChangedEvent) Is Nothing) Then
                RaiseEvent customers_view2RowChanged(Me, New customers_view2RowChangeEvent(CType(e.Row,customers_view2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.customers_view2RowChangingEvent) Is Nothing) Then
                RaiseEvent customers_view2RowChanging(Me, New customers_view2RowChangeEvent(CType(e.Row,customers_view2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.customers_view2RowDeletedEvent) Is Nothing) Then
                RaiseEvent customers_view2RowDeleted(Me, New customers_view2RowChangeEvent(CType(e.Row,customers_view2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.customers_view2RowDeletingEvent) Is Nothing) Then
                RaiseEvent customers_view2RowDeleting(Me, New customers_view2RowChangeEvent(CType(e.Row,customers_view2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removecustomers_view2Row(ByVal row As customers_view2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "customers_view2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class aboDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnabo_id As Global.System.Data.DataColumn
        
        Private columncustomerid As Global.System.Data.DataColumn
        
        Private columnAction As Global.System.Data.DataColumn
        
        Private columncode_id As Global.System.Data.DataColumn
        
        Private columnDate As Global.System.Data.DataColumn
        
        Private columnproduct_id As Global.System.Data.DataColumn
        
        Private columnpayment_method As Global.System.Data.DataColumn
        
        Private columnprivilege_notified As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "abo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customeridColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomerid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ActionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property product_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproduct_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property privilege_notifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprivilege_notified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As aboRow
            Get
                Return CType(Me.Rows(index),aboRow)
            End Get
        End Property
        
        Public Event aboRowChanging As aboRowChangeEventHandler
        
        Public Event aboRowChanged As aboRowChangeEventHandler
        
        Public Event aboRowDeleting As aboRowChangeEventHandler
        
        Public Event aboRowDeleted As aboRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddaboRow(ByVal row As aboRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddaboRow(ByVal customerid As Integer, ByVal Action As Integer, ByVal code_id As Integer, ByVal _Date As Date, ByVal product_id As Integer, ByVal payment_method As String, ByVal privilege_notified As Integer, ByVal comment As String, ByVal site As Integer) As aboRow
            Dim rowaboRow As aboRow = CType(Me.NewRow,aboRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customerid, Action, code_id, _Date, product_id, payment_method, privilege_notified, comment, site}
            rowaboRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowaboRow)
            Return rowaboRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByabo_id(ByVal abo_id As Integer) As aboRow
            Return CType(Me.Rows.Find(New Object() {abo_id}),aboRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As aboDataTable = CType(MyBase.Clone,aboDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New aboDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnabo_id = MyBase.Columns("abo_id")
            Me.columncustomerid = MyBase.Columns("customerid")
            Me.columnAction = MyBase.Columns("Action")
            Me.columncode_id = MyBase.Columns("code_id")
            Me.columnDate = MyBase.Columns("Date")
            Me.columnproduct_id = MyBase.Columns("product_id")
            Me.columnpayment_method = MyBase.Columns("payment_method")
            Me.columnprivilege_notified = MyBase.Columns("privilege_notified")
            Me.columncomment = MyBase.Columns("comment")
            Me.columnsite = MyBase.Columns("site")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnabo_id = New Global.System.Data.DataColumn("abo_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_id)
            Me.columncustomerid = New Global.System.Data.DataColumn("customerid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomerid)
            Me.columnAction = New Global.System.Data.DataColumn("Action", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAction)
            Me.columncode_id = New Global.System.Data.DataColumn("code_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode_id)
            Me.columnDate = New Global.System.Data.DataColumn("Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "DateColumn")
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnDate")
            Me.columnDate.ExtendedProperties.Add("Generator_UserColumnName", "Date")
            MyBase.Columns.Add(Me.columnDate)
            Me.columnproduct_id = New Global.System.Data.DataColumn("product_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproduct_id)
            Me.columnpayment_method = New Global.System.Data.DataColumn("payment_method", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayment_method)
            Me.columnprivilege_notified = New Global.System.Data.DataColumn("privilege_notified", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprivilege_notified)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey14", New Global.System.Data.DataColumn() {Me.columnabo_id}, true))
            Me.columnabo_id.AutoIncrement = true
            Me.columnabo_id.AllowDBNull = false
            Me.columnabo_id.ReadOnly = true
            Me.columnabo_id.Unique = true
            Me.columncustomerid.AllowDBNull = false
            Me.columnAction.AllowDBNull = false
            Me.columnproduct_id.AllowDBNull = false
            Me.columnpayment_method.AllowDBNull = false
            Me.columnprivilege_notified.AllowDBNull = false
            Me.columncomment.AllowDBNull = false
            Me.columnsite.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewaboRow() As aboRow
            Return CType(Me.NewRow,aboRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New aboRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(aboRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.aboRowChangedEvent) Is Nothing) Then
                RaiseEvent aboRowChanged(Me, New aboRowChangeEvent(CType(e.Row,aboRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.aboRowChangingEvent) Is Nothing) Then
                RaiseEvent aboRowChanging(Me, New aboRowChangeEvent(CType(e.Row,aboRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.aboRowDeletedEvent) Is Nothing) Then
                RaiseEvent aboRowDeleted(Me, New aboRowChangeEvent(CType(e.Row,aboRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.aboRowDeletingEvent) Is Nothing) Then
                RaiseEvent aboRowDeleting(Me, New aboRowChangeEvent(CType(e.Row,aboRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveaboRow(ByVal row As aboRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "aboDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class abo_actionDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnname As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "abo_action"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As abo_actionRow
            Get
                Return CType(Me.Rows(index),abo_actionRow)
            End Get
        End Property
        
        Public Event abo_actionRowChanging As abo_actionRowChangeEventHandler
        
        Public Event abo_actionRowChanged As abo_actionRowChangeEventHandler
        
        Public Event abo_actionRowDeleting As abo_actionRowChangeEventHandler
        
        Public Event abo_actionRowDeleted As abo_actionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addabo_actionRow(ByVal row As abo_actionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addabo_actionRow(ByVal id As Integer, ByVal name As String) As abo_actionRow
            Dim rowabo_actionRow As abo_actionRow = CType(Me.NewRow,abo_actionRow)
            Dim columnValuesArray() As Object = New Object() {id, name}
            rowabo_actionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowabo_actionRow)
            Return rowabo_actionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As abo_actionDataTable = CType(MyBase.Clone,abo_actionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New abo_actionDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnname = MyBase.Columns("name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnid.AllowDBNull = false
            Me.columnname.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newabo_actionRow() As abo_actionRow
            Return CType(Me.NewRow,abo_actionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New abo_actionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(abo_actionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.abo_actionRowChangedEvent) Is Nothing) Then
                RaiseEvent abo_actionRowChanged(Me, New abo_actionRowChangeEvent(CType(e.Row,abo_actionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.abo_actionRowChangingEvent) Is Nothing) Then
                RaiseEvent abo_actionRowChanging(Me, New abo_actionRowChangeEvent(CType(e.Row,abo_actionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.abo_actionRowDeletedEvent) Is Nothing) Then
                RaiseEvent abo_actionRowDeleted(Me, New abo_actionRowChangeEvent(CType(e.Row,abo_actionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.abo_actionRowDeletingEvent) Is Nothing) Then
                RaiseEvent abo_actionRowDeleting(Me, New abo_actionRowChangeEvent(CType(e.Row,abo_actionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeabo_actionRow(ByVal row As abo_actionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "abo_actionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class customers_mikeDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_gender As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_dob As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_default_address_id As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columncustomers_telephone_evening As Global.System.Data.DataColumn
        
        Private columncustomers_fax As Global.System.Data.DataColumn
        
        Private columncustomers_password As Global.System.Data.DataColumn
        
        Private columncustomers_newsletter As Global.System.Data.DataColumn
        
        Private columncustomers_newsletterpartner As Global.System.Data.DataColumn
        
        Private columncustomers_privilege As Global.System.Data.DataColumn
        
        Private columncustomers_privilege_balance As Global.System.Data.DataColumn
        
        Private columncustomers_garantie As Global.System.Data.DataColumn
        
        Private columnsponsoring_code As Global.System.Data.DataColumn
        
        Private columnsponsored_code As Global.System.Data.DataColumn
        
        Private columncustomers_abo As Global.System.Data.DataColumn
        
        Private columncustomers_abo_suspended As Global.System.Data.DataColumn
        
        Private columncustomers_abo_type As Global.System.Data.DataColumn
        
        Private columnflagminiat1995 As Global.System.Data.DataColumn
        
        Private columncustomers_abo_method As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_adult As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_norm As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_home_adult As Global.System.Data.DataColumn
        
        Private columnthrottling As Global.System.Data.DataColumn
        
        Private columncustomers_abo_validityto As Global.System.Data.DataColumn
        
        Private columncustomers_abo_rank As Global.System.Data.DataColumn
        
        Private columncustomers_abo_start_rentthismonth As Global.System.Data.DataColumn
        
        Private columncustomers_abo_dvd_credit As Global.System.Data.DataColumn
        
        Private columncustomers_abo_multishipment As Global.System.Data.DataColumn
        
        Private columncustomers_abo_discount_recurring_to_date As Global.System.Data.DataColumn
        
        Private columnabotested As Global.System.Data.DataColumn
        
        Private columncustomers_abo_status As Global.System.Data.DataColumn
        
        Private columncustomers_abo_payment_method As Global.System.Data.DataColumn
        
        Private columndomiciliation_status As Global.System.Data.DataColumn
        
        Private columndomiciliation_debiter_name As Global.System.Data.DataColumn
        
        Private columndomiciliation_number As Global.System.Data.DataColumn
        
        Private columndomiciliation_account_number As Global.System.Data.DataColumn
        
        Private columnadult_pwd As Global.System.Data.DataColumn
        
        Private columnogone_card_type As Global.System.Data.DataColumn
        
        Private columnogone_card_no As Global.System.Data.DataColumn
        
        Private columnogone_exp_date As Global.System.Data.DataColumn
        
        Private columnogone_owner As Global.System.Data.DataColumn
        
        Private columnogone_cc_expiration_status As Global.System.Data.DataColumn
        
        Private columnoffline_payment_status As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columnvip As Global.System.Data.DataColumn
        
        Private columnblack_listed As Global.System.Data.DataColumn
        
        Private columnred_listed As Global.System.Data.DataColumn
        
        Private columnsm_eligible As Global.System.Data.DataColumn
        
        Private columncustomers_enquiry_id As Global.System.Data.DataColumn
        
        Private columndate_first_delivery As Global.System.Data.DataColumn
        
        Private columnmail_wl_adult_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmail_wl_norm_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmgm_points As Global.System.Data.DataColumn
        
        Private columnwishlist_kind As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "customers_mike"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_dob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_default_address_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_default_address_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephone_eveningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone_evening
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_fax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterpartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletterpartner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilegeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_privilege_balanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_privilege_balance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_garantieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_garantie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsoring_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsoring_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sponsored_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsponsored_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_suspendedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_suspended
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property flagminiat1995Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnflagminiat1995
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_normColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_norm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_home_adultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_home_adult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property throttlingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnthrottling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_rankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_rank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_start_rentthismonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_start_rentthismonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_dvd_creditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_dvd_credit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_multishipmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_multishipment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_discount_recurring_to_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_discount_recurring_to_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abotestedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabotested
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_payment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_debiter_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_debiter_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_account_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_account_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property adult_pwdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadult_pwd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_exp_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_exp_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_cc_expiration_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_cc_expiration_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property offline_payment_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoffline_payment_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property black_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnblack_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property red_listedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnred_listed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sm_eligibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsm_eligible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_enquiry_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_enquiry_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_first_deliveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_first_delivery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_adult_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_adult_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_norm_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_norm_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mgm_pointsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmgm_points
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wishlist_kindColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwishlist_kind
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As customers_mikeRow
            Get
                Return CType(Me.Rows(index),customers_mikeRow)
            End Get
        End Property
        
        Public Event customers_mikeRowChanging As customers_mikeRowChangeEventHandler
        
        Public Event customers_mikeRowChanged As customers_mikeRowChangeEventHandler
        
        Public Event customers_mikeRowDeleting As customers_mikeRowChangeEventHandler
        
        Public Event customers_mikeRowDeleted As customers_mikeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addcustomers_mikeRow(ByVal row As customers_mikeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addcustomers_mikeRow( _
                    ByVal customers_gender As String,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_lastname As String,  _
                    ByVal customers_dob As Date,  _
                    ByVal customers_email_address As String,  _
                    ByVal customers_default_address_id As Integer,  _
                    ByVal customers_telephone As String,  _
                    ByVal customers_telephone_evening As String,  _
                    ByVal customers_fax As String,  _
                    ByVal customers_password As String,  _
                    ByVal customers_newsletter As String,  _
                    ByVal customers_newsletterpartner As String,  _
                    ByVal customers_privilege As Integer,  _
                    ByVal customers_privilege_balance As Decimal,  _
                    ByVal customers_garantie As Integer,  _
                    ByVal sponsoring_code As String,  _
                    ByVal sponsored_code As String,  _
                    ByVal customers_abo As Integer,  _
                    ByVal customers_abo_suspended As Integer,  _
                    ByVal customers_abo_type As Integer,  _
                    ByVal flagminiat1995 As Integer,  _
                    ByVal customers_abo_method As Integer,  _
                    ByVal customers_abo_dvd_norm As Integer,  _
                    ByVal customers_abo_dvd_adult As Integer,  _
                    ByVal customers_abo_dvd_home_norm As Integer,  _
                    ByVal customers_abo_dvd_home_adult As Integer,  _
                    ByVal throttling As Integer,  _
                    ByVal customers_abo_validityto As Date,  _
                    ByVal customers_abo_rank As Integer,  _
                    ByVal customers_abo_start_rentthismonth As Integer,  _
                    ByVal customers_abo_dvd_credit As Integer,  _
                    ByVal customers_abo_multishipment As Integer,  _
                    ByVal customers_abo_discount_recurring_to_date As Date,  _
                    ByVal abotested As Integer,  _
                    ByVal customers_abo_status As Integer,  _
                    ByVal customers_abo_payment_method As Integer,  _
                    ByVal domiciliation_status As Integer,  _
                    ByVal domiciliation_debiter_name As String,  _
                    ByVal domiciliation_number As String,  _
                    ByVal domiciliation_account_number As String,  _
                    ByVal adult_pwd As String,  _
                    ByVal ogone_card_type As String,  _
                    ByVal ogone_card_no As String,  _
                    ByVal ogone_exp_date As String,  _
                    ByVal ogone_owner As String,  _
                    ByVal ogone_cc_expiration_status As Integer,  _
                    ByVal offline_payment_status As Integer,  _
                    ByVal comment As String,  _
                    ByVal vip As Integer,  _
                    ByVal black_listed As Integer,  _
                    ByVal red_listed As Integer,  _
                    ByVal sm_eligible As Integer,  _
                    ByVal customers_enquiry_id As Integer,  _
                    ByVal date_first_delivery As Date,  _
                    ByVal mail_wl_adult_not_sufficient As Date,  _
                    ByVal mail_wl_norm_not_sufficient As Date,  _
                    ByVal mgm_points As Integer,  _
                    ByVal wishlist_kind As Integer) As customers_mikeRow
            Dim rowcustomers_mikeRow As customers_mikeRow = CType(Me.NewRow,customers_mikeRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customers_gender, customers_firstname, customers_lastname, customers_dob, customers_email_address, customers_default_address_id, customers_telephone, customers_telephone_evening, customers_fax, customers_password, customers_newsletter, customers_newsletterpartner, customers_privilege, customers_privilege_balance, customers_garantie, sponsoring_code, sponsored_code, customers_abo, customers_abo_suspended, customers_abo_type, flagminiat1995, customers_abo_method, customers_abo_dvd_norm, customers_abo_dvd_adult, customers_abo_dvd_home_norm, customers_abo_dvd_home_adult, throttling, customers_abo_validityto, customers_abo_rank, customers_abo_start_rentthismonth, customers_abo_dvd_credit, customers_abo_multishipment, customers_abo_discount_recurring_to_date, abotested, customers_abo_status, customers_abo_payment_method, domiciliation_status, domiciliation_debiter_name, domiciliation_number, domiciliation_account_number, adult_pwd, ogone_card_type, ogone_card_no, ogone_exp_date, ogone_owner, ogone_cc_expiration_status, offline_payment_status, comment, vip, black_listed, red_listed, sm_eligible, customers_enquiry_id, date_first_delivery, mail_wl_adult_not_sufficient, mail_wl_norm_not_sufficient, mgm_points, wishlist_kind}
            rowcustomers_mikeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustomers_mikeRow)
            Return rowcustomers_mikeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As customers_mikeDataTable = CType(MyBase.Clone,customers_mikeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New customers_mikeDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_gender = MyBase.Columns("customers_gender")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_dob = MyBase.Columns("customers_dob")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_default_address_id = MyBase.Columns("customers_default_address_id")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columncustomers_telephone_evening = MyBase.Columns("customers_telephone_evening")
            Me.columncustomers_fax = MyBase.Columns("customers_fax")
            Me.columncustomers_password = MyBase.Columns("customers_password")
            Me.columncustomers_newsletter = MyBase.Columns("customers_newsletter")
            Me.columncustomers_newsletterpartner = MyBase.Columns("customers_newsletterpartner")
            Me.columncustomers_privilege = MyBase.Columns("customers_privilege")
            Me.columncustomers_privilege_balance = MyBase.Columns("customers_privilege_balance")
            Me.columncustomers_garantie = MyBase.Columns("customers_garantie")
            Me.columnsponsoring_code = MyBase.Columns("sponsoring_code")
            Me.columnsponsored_code = MyBase.Columns("sponsored_code")
            Me.columncustomers_abo = MyBase.Columns("customers_abo")
            Me.columncustomers_abo_suspended = MyBase.Columns("customers_abo_suspended")
            Me.columncustomers_abo_type = MyBase.Columns("customers_abo_type")
            Me.columnflagminiat1995 = MyBase.Columns("flagminiat1995")
            Me.columncustomers_abo_method = MyBase.Columns("customers_abo_method")
            Me.columncustomers_abo_dvd_norm = MyBase.Columns("customers_abo_dvd_norm")
            Me.columncustomers_abo_dvd_adult = MyBase.Columns("customers_abo_dvd_adult")
            Me.columncustomers_abo_dvd_home_norm = MyBase.Columns("customers_abo_dvd_home_norm")
            Me.columncustomers_abo_dvd_home_adult = MyBase.Columns("customers_abo_dvd_home_adult")
            Me.columnthrottling = MyBase.Columns("throttling")
            Me.columncustomers_abo_validityto = MyBase.Columns("customers_abo_validityto")
            Me.columncustomers_abo_rank = MyBase.Columns("customers_abo_rank")
            Me.columncustomers_abo_start_rentthismonth = MyBase.Columns("customers_abo_start_rentthismonth")
            Me.columncustomers_abo_dvd_credit = MyBase.Columns("customers_abo_dvd_credit")
            Me.columncustomers_abo_multishipment = MyBase.Columns("customers_abo_multishipment")
            Me.columncustomers_abo_discount_recurring_to_date = MyBase.Columns("customers_abo_discount_recurring_to_date")
            Me.columnabotested = MyBase.Columns("abotested")
            Me.columncustomers_abo_status = MyBase.Columns("customers_abo_status")
            Me.columncustomers_abo_payment_method = MyBase.Columns("customers_abo_payment_method")
            Me.columndomiciliation_status = MyBase.Columns("domiciliation_status")
            Me.columndomiciliation_debiter_name = MyBase.Columns("domiciliation_debiter_name")
            Me.columndomiciliation_number = MyBase.Columns("domiciliation_number")
            Me.columndomiciliation_account_number = MyBase.Columns("domiciliation_account_number")
            Me.columnadult_pwd = MyBase.Columns("adult_pwd")
            Me.columnogone_card_type = MyBase.Columns("ogone_card_type")
            Me.columnogone_card_no = MyBase.Columns("ogone_card_no")
            Me.columnogone_exp_date = MyBase.Columns("ogone_exp_date")
            Me.columnogone_owner = MyBase.Columns("ogone_owner")
            Me.columnogone_cc_expiration_status = MyBase.Columns("ogone_cc_expiration_status")
            Me.columnoffline_payment_status = MyBase.Columns("offline_payment_status")
            Me.columncomment = MyBase.Columns("comment")
            Me.columnvip = MyBase.Columns("vip")
            Me.columnblack_listed = MyBase.Columns("black_listed")
            Me.columnred_listed = MyBase.Columns("red_listed")
            Me.columnsm_eligible = MyBase.Columns("sm_eligible")
            Me.columncustomers_enquiry_id = MyBase.Columns("customers_enquiry_id")
            Me.columndate_first_delivery = MyBase.Columns("date_first_delivery")
            Me.columnmail_wl_adult_not_sufficient = MyBase.Columns("mail_wl_adult_not_sufficient")
            Me.columnmail_wl_norm_not_sufficient = MyBase.Columns("mail_wl_norm_not_sufficient")
            Me.columnmgm_points = MyBase.Columns("mgm_points")
            Me.columnwishlist_kind = MyBase.Columns("wishlist_kind")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_gender = New Global.System.Data.DataColumn("customers_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_gender)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_dob = New Global.System.Data.DataColumn("customers_dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_dob)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_default_address_id = New Global.System.Data.DataColumn("customers_default_address_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_default_address_id)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columncustomers_telephone_evening = New Global.System.Data.DataColumn("customers_telephone_evening", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone_evening)
            Me.columncustomers_fax = New Global.System.Data.DataColumn("customers_fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_fax)
            Me.columncustomers_password = New Global.System.Data.DataColumn("customers_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_password)
            Me.columncustomers_newsletter = New Global.System.Data.DataColumn("customers_newsletter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletter)
            Me.columncustomers_newsletterpartner = New Global.System.Data.DataColumn("customers_newsletterpartner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletterpartner)
            Me.columncustomers_privilege = New Global.System.Data.DataColumn("customers_privilege", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege)
            Me.columncustomers_privilege_balance = New Global.System.Data.DataColumn("customers_privilege_balance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_privilege_balance)
            Me.columncustomers_garantie = New Global.System.Data.DataColumn("customers_garantie", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_garantie)
            Me.columnsponsoring_code = New Global.System.Data.DataColumn("sponsoring_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsoring_code)
            Me.columnsponsored_code = New Global.System.Data.DataColumn("sponsored_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsponsored_code)
            Me.columncustomers_abo = New Global.System.Data.DataColumn("customers_abo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo)
            Me.columncustomers_abo_suspended = New Global.System.Data.DataColumn("customers_abo_suspended", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_suspended)
            Me.columncustomers_abo_type = New Global.System.Data.DataColumn("customers_abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_type)
            Me.columnflagminiat1995 = New Global.System.Data.DataColumn("flagminiat1995", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnflagminiat1995)
            Me.columncustomers_abo_method = New Global.System.Data.DataColumn("customers_abo_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_method)
            Me.columncustomers_abo_dvd_norm = New Global.System.Data.DataColumn("customers_abo_dvd_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_norm)
            Me.columncustomers_abo_dvd_adult = New Global.System.Data.DataColumn("customers_abo_dvd_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_adult)
            Me.columncustomers_abo_dvd_home_norm = New Global.System.Data.DataColumn("customers_abo_dvd_home_norm", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_norm)
            Me.columncustomers_abo_dvd_home_adult = New Global.System.Data.DataColumn("customers_abo_dvd_home_adult", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_home_adult)
            Me.columnthrottling = New Global.System.Data.DataColumn("throttling", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnthrottling)
            Me.columncustomers_abo_validityto = New Global.System.Data.DataColumn("customers_abo_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_validityto)
            Me.columncustomers_abo_rank = New Global.System.Data.DataColumn("customers_abo_rank", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_rank)
            Me.columncustomers_abo_start_rentthismonth = New Global.System.Data.DataColumn("customers_abo_start_rentthismonth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_start_rentthismonth)
            Me.columncustomers_abo_dvd_credit = New Global.System.Data.DataColumn("customers_abo_dvd_credit", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_dvd_credit)
            Me.columncustomers_abo_multishipment = New Global.System.Data.DataColumn("customers_abo_multishipment", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_multishipment)
            Me.columncustomers_abo_discount_recurring_to_date = New Global.System.Data.DataColumn("customers_abo_discount_recurring_to_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_discount_recurring_to_date)
            Me.columnabotested = New Global.System.Data.DataColumn("abotested", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabotested)
            Me.columncustomers_abo_status = New Global.System.Data.DataColumn("customers_abo_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_status)
            Me.columncustomers_abo_payment_method = New Global.System.Data.DataColumn("customers_abo_payment_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_payment_method)
            Me.columndomiciliation_status = New Global.System.Data.DataColumn("domiciliation_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_status)
            Me.columndomiciliation_debiter_name = New Global.System.Data.DataColumn("domiciliation_debiter_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_debiter_name)
            Me.columndomiciliation_number = New Global.System.Data.DataColumn("domiciliation_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_number)
            Me.columndomiciliation_account_number = New Global.System.Data.DataColumn("domiciliation_account_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_account_number)
            Me.columnadult_pwd = New Global.System.Data.DataColumn("adult_pwd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadult_pwd)
            Me.columnogone_card_type = New Global.System.Data.DataColumn("ogone_card_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_type)
            Me.columnogone_card_no = New Global.System.Data.DataColumn("ogone_card_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_no)
            Me.columnogone_exp_date = New Global.System.Data.DataColumn("ogone_exp_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_exp_date)
            Me.columnogone_owner = New Global.System.Data.DataColumn("ogone_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_owner)
            Me.columnogone_cc_expiration_status = New Global.System.Data.DataColumn("ogone_cc_expiration_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_cc_expiration_status)
            Me.columnoffline_payment_status = New Global.System.Data.DataColumn("offline_payment_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoffline_payment_status)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnvip = New Global.System.Data.DataColumn("vip", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvip)
            Me.columnblack_listed = New Global.System.Data.DataColumn("black_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblack_listed)
            Me.columnred_listed = New Global.System.Data.DataColumn("red_listed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnred_listed)
            Me.columnsm_eligible = New Global.System.Data.DataColumn("sm_eligible", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsm_eligible)
            Me.columncustomers_enquiry_id = New Global.System.Data.DataColumn("customers_enquiry_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_enquiry_id)
            Me.columndate_first_delivery = New Global.System.Data.DataColumn("date_first_delivery", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_first_delivery)
            Me.columnmail_wl_adult_not_sufficient = New Global.System.Data.DataColumn("mail_wl_adult_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_adult_not_sufficient)
            Me.columnmail_wl_norm_not_sufficient = New Global.System.Data.DataColumn("mail_wl_norm_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_norm_not_sufficient)
            Me.columnmgm_points = New Global.System.Data.DataColumn("mgm_points", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmgm_points)
            Me.columnwishlist_kind = New Global.System.Data.DataColumn("wishlist_kind", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwishlist_kind)
            Me.columncustomers_id.AutoIncrement = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_id.ReadOnly = true
            Me.columncustomers_gender.AllowDBNull = false
            Me.columncustomers_firstname.AllowDBNull = false
            Me.columncustomers_lastname.AllowDBNull = false
            Me.columncustomers_email_address.AllowDBNull = false
            Me.columncustomers_default_address_id.AllowDBNull = false
            Me.columncustomers_telephone.AllowDBNull = false
            Me.columncustomers_telephone_evening.AllowDBNull = false
            Me.columncustomers_password.AllowDBNull = false
            Me.columncustomers_privilege.AllowDBNull = false
            Me.columncustomers_privilege_balance.AllowDBNull = false
            Me.columncustomers_garantie.AllowDBNull = false
            Me.columncustomers_abo.AllowDBNull = false
            Me.columncustomers_abo_suspended.AllowDBNull = false
            Me.columncustomers_abo_type.AllowDBNull = false
            Me.columnflagminiat1995.AllowDBNull = false
            Me.columncustomers_abo_method.AllowDBNull = false
            Me.columncustomers_abo_dvd_norm.AllowDBNull = false
            Me.columncustomers_abo_dvd_adult.AllowDBNull = false
            Me.columncustomers_abo_dvd_home_norm.AllowDBNull = false
            Me.columncustomers_abo_dvd_home_adult.AllowDBNull = false
            Me.columnthrottling.AllowDBNull = false
            Me.columncustomers_abo_rank.AllowDBNull = false
            Me.columncustomers_abo_start_rentthismonth.AllowDBNull = false
            Me.columncustomers_abo_dvd_credit.AllowDBNull = false
            Me.columncustomers_abo_multishipment.AllowDBNull = false
            Me.columnabotested.AllowDBNull = false
            Me.columncustomers_abo_status.AllowDBNull = false
            Me.columncustomers_abo_payment_method.AllowDBNull = false
            Me.columndomiciliation_status.AllowDBNull = false
            Me.columnogone_cc_expiration_status.AllowDBNull = false
            Me.columnoffline_payment_status.AllowDBNull = false
            Me.columnvip.AllowDBNull = false
            Me.columnblack_listed.AllowDBNull = false
            Me.columnred_listed.AllowDBNull = false
            Me.columnsm_eligible.AllowDBNull = false
            Me.columncustomers_enquiry_id.AllowDBNull = false
            Me.columnmgm_points.AllowDBNull = false
            Me.columnwishlist_kind.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newcustomers_mikeRow() As customers_mikeRow
            Return CType(Me.NewRow,customers_mikeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New customers_mikeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(customers_mikeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.customers_mikeRowChangedEvent) Is Nothing) Then
                RaiseEvent customers_mikeRowChanged(Me, New customers_mikeRowChangeEvent(CType(e.Row,customers_mikeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.customers_mikeRowChangingEvent) Is Nothing) Then
                RaiseEvent customers_mikeRowChanging(Me, New customers_mikeRowChangeEvent(CType(e.Row,customers_mikeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.customers_mikeRowDeletedEvent) Is Nothing) Then
                RaiseEvent customers_mikeRowDeleted(Me, New customers_mikeRowChangeEvent(CType(e.Row,customers_mikeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.customers_mikeRowDeletingEvent) Is Nothing) Then
                RaiseEvent customers_mikeRowDeleting(Me, New customers_mikeRowChangeEvent(CType(e.Row,customers_mikeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removecustomers_mikeRow(ByVal row As customers_mikeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "customers_mikeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class customers_nl_tempDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columndiscount_code As Global.System.Data.DataColumn
        
        Private columncustomers_language As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "customers_nl_temp"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As customers_nl_tempRow
            Get
                Return CType(Me.Rows(index),customers_nl_tempRow)
            End Get
        End Property
        
        Public Event customers_nl_tempRowChanging As customers_nl_tempRowChangeEventHandler
        
        Public Event customers_nl_tempRowChanged As customers_nl_tempRowChangeEventHandler
        
        Public Event customers_nl_tempRowDeleting As customers_nl_tempRowChangeEventHandler
        
        Public Event customers_nl_tempRowDeleted As customers_nl_tempRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addcustomers_nl_tempRow(ByVal row As customers_nl_tempRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addcustomers_nl_tempRow(ByVal customers_firstname As String, ByVal customers_lastname As String, ByVal customers_email_address As String, ByVal discount_code As String, ByVal customers_language As Integer) As customers_nl_tempRow
            Dim rowcustomers_nl_tempRow As customers_nl_tempRow = CType(Me.NewRow,customers_nl_tempRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customers_firstname, customers_lastname, customers_email_address, discount_code, customers_language}
            rowcustomers_nl_tempRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustomers_nl_tempRow)
            Return rowcustomers_nl_tempRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As customers_nl_tempDataTable = CType(MyBase.Clone,customers_nl_tempDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New customers_nl_tempDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columndiscount_code = MyBase.Columns("discount_code")
            Me.columncustomers_language = MyBase.Columns("customers_language")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columndiscount_code = New Global.System.Data.DataColumn("discount_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code)
            Me.columncustomers_language = New Global.System.Data.DataColumn("customers_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_language)
            Me.columncustomers_id.AutoIncrement = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_id.ReadOnly = true
            Me.columncustomers_firstname.AllowDBNull = false
            Me.columncustomers_lastname.AllowDBNull = false
            Me.columncustomers_email_address.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newcustomers_nl_tempRow() As customers_nl_tempRow
            Return CType(Me.NewRow,customers_nl_tempRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New customers_nl_tempRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(customers_nl_tempRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.customers_nl_tempRowChangedEvent) Is Nothing) Then
                RaiseEvent customers_nl_tempRowChanged(Me, New customers_nl_tempRowChangeEvent(CType(e.Row,customers_nl_tempRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.customers_nl_tempRowChangingEvent) Is Nothing) Then
                RaiseEvent customers_nl_tempRowChanging(Me, New customers_nl_tempRowChangeEvent(CType(e.Row,customers_nl_tempRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.customers_nl_tempRowDeletedEvent) Is Nothing) Then
                RaiseEvent customers_nl_tempRowDeleted(Me, New customers_nl_tempRowChangeEvent(CType(e.Row,customers_nl_tempRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.customers_nl_tempRowDeletingEvent) Is Nothing) Then
                RaiseEvent customers_nl_tempRowDeleting(Me, New customers_nl_tempRowChangeEvent(CType(e.Row,customers_nl_tempRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removecustomers_nl_tempRow(ByVal row As customers_nl_tempRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "customers_nl_tempDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class siteDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnsite_id As Global.System.Data.DataColumn
        
        Private columnsite_name As Global.System.Data.DataColumn
        
        Private columnsite_link As Global.System.Data.DataColumn
        
        Private columnlogo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "site"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property site_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property site_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property site_linkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite_link
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property logoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlogo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As siteRow
            Get
                Return CType(Me.Rows(index),siteRow)
            End Get
        End Property
        
        Public Event siteRowChanging As siteRowChangeEventHandler
        
        Public Event siteRowChanged As siteRowChangeEventHandler
        
        Public Event siteRowDeleting As siteRowChangeEventHandler
        
        Public Event siteRowDeleted As siteRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddsiteRow(ByVal row As siteRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddsiteRow(ByVal site_id As Integer, ByVal site_name As String, ByVal site_link As String, ByVal logo As String) As siteRow
            Dim rowsiteRow As siteRow = CType(Me.NewRow,siteRow)
            Dim columnValuesArray() As Object = New Object() {site_id, site_name, site_link, logo}
            rowsiteRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowsiteRow)
            Return rowsiteRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBysite_name(ByVal site_name As String) As siteRow
            Return CType(Me.Rows.Find(New Object() {site_name}),siteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As siteDataTable = CType(MyBase.Clone,siteDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New siteDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnsite_id = MyBase.Columns("site_id")
            Me.columnsite_name = MyBase.Columns("site_name")
            Me.columnsite_link = MyBase.Columns("site_link")
            Me.columnlogo = MyBase.Columns("logo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnsite_id = New Global.System.Data.DataColumn("site_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite_id)
            Me.columnsite_name = New Global.System.Data.DataColumn("site_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite_name)
            Me.columnsite_link = New Global.System.Data.DataColumn("site_link", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite_link)
            Me.columnlogo = New Global.System.Data.DataColumn("logo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlogo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnsite_name}, true))
            Me.columnsite_name.AllowDBNull = false
            Me.columnsite_name.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewsiteRow() As siteRow
            Return CType(Me.NewRow,siteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New siteRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(siteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.siteRowChangedEvent) Is Nothing) Then
                RaiseEvent siteRowChanged(Me, New siteRowChangeEvent(CType(e.Row,siteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.siteRowChangingEvent) Is Nothing) Then
                RaiseEvent siteRowChanging(Me, New siteRowChangeEvent(CType(e.Row,siteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.siteRowDeletedEvent) Is Nothing) Then
                RaiseEvent siteRowDeleted(Me, New siteRowChangeEvent(CType(e.Row,siteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.siteRowDeletingEvent) Is Nothing) Then
                RaiseEvent siteRowDeleting(Me, New siteRowChangeEvent(CType(e.Row,siteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovesiteRow(ByVal row As siteRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "siteDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class propsectsDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_email_address As Global.System.Data.DataColumn
        
        Private columncustomers_language As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        Private columnEntityID As Global.System.Data.DataColumn
        
        Private columnselected_for_email As Global.System.Data.DataColumn
        
        Private columnunsubscribe As Global.System.Data.DataColumn
        
        Private columnis_email_valid As Global.System.Data.DataColumn
        
        Private columnlast_email_sended As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "propsects"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_email_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_email_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EntityIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEntityID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property selected_for_emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnselected_for_email
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property unsubscribeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunsubscribe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property is_email_validColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnis_email_valid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_email_sendedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_email_sended
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As propsectsRow
            Get
                Return CType(Me.Rows(index),propsectsRow)
            End Get
        End Property
        
        Public Event propsectsRowChanging As propsectsRowChangeEventHandler
        
        Public Event propsectsRowChanged As propsectsRowChangeEventHandler
        
        Public Event propsectsRowDeleting As propsectsRowChangeEventHandler
        
        Public Event propsectsRowDeleted As propsectsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddpropsectsRow(ByVal row As propsectsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddpropsectsRow(ByVal customers_id As Integer, ByVal customers_firstname As String, ByVal customers_lastname As String, ByVal customers_email_address As String, ByVal customers_language As Integer, ByVal site As String, ByVal EntityID As Integer, ByVal selected_for_email As String, ByVal unsubscribe As String, ByVal is_email_valid As String, ByVal last_email_sended As String) As propsectsRow
            Dim rowpropsectsRow As propsectsRow = CType(Me.NewRow,propsectsRow)
            Dim columnValuesArray() As Object = New Object() {customers_id, customers_firstname, customers_lastname, customers_email_address, customers_language, site, EntityID, selected_for_email, unsubscribe, is_email_valid, last_email_sended}
            rowpropsectsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowpropsectsRow)
            Return rowpropsectsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycustomers_email_address(ByVal customers_email_address As String) As propsectsRow
            Return CType(Me.Rows.Find(New Object() {customers_email_address}),propsectsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As propsectsDataTable = CType(MyBase.Clone,propsectsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New propsectsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_email_address = MyBase.Columns("customers_email_address")
            Me.columncustomers_language = MyBase.Columns("customers_language")
            Me.columnsite = MyBase.Columns("site")
            Me.columnEntityID = MyBase.Columns("EntityID")
            Me.columnselected_for_email = MyBase.Columns("selected_for_email")
            Me.columnunsubscribe = MyBase.Columns("unsubscribe")
            Me.columnis_email_valid = MyBase.Columns("is_email_valid")
            Me.columnlast_email_sended = MyBase.Columns("last_email_sended")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_email_address = New Global.System.Data.DataColumn("customers_email_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_email_address)
            Me.columncustomers_language = New Global.System.Data.DataColumn("customers_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_language)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.columnEntityID = New Global.System.Data.DataColumn("EntityID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEntityID)
            Me.columnselected_for_email = New Global.System.Data.DataColumn("selected_for_email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnselected_for_email)
            Me.columnunsubscribe = New Global.System.Data.DataColumn("unsubscribe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunsubscribe)
            Me.columnis_email_valid = New Global.System.Data.DataColumn("is_email_valid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnis_email_valid)
            Me.columnlast_email_sended = New Global.System.Data.DataColumn("last_email_sended", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_email_sended)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsCustomersKey16", New Global.System.Data.DataColumn() {Me.columncustomers_email_address}, true))
            Me.columncustomers_email_address.AllowDBNull = false
            Me.columncustomers_email_address.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewpropsectsRow() As propsectsRow
            Return CType(Me.NewRow,propsectsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New propsectsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(propsectsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.propsectsRowChangedEvent) Is Nothing) Then
                RaiseEvent propsectsRowChanged(Me, New propsectsRowChangeEvent(CType(e.Row,propsectsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.propsectsRowChangingEvent) Is Nothing) Then
                RaiseEvent propsectsRowChanging(Me, New propsectsRowChangeEvent(CType(e.Row,propsectsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.propsectsRowDeletedEvent) Is Nothing) Then
                RaiseEvent propsectsRowDeleted(Me, New propsectsRowChangeEvent(CType(e.Row,propsectsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.propsectsRowDeletingEvent) Is Nothing) Then
                RaiseEvent propsectsRowDeleting(Me, New propsectsRowChangeEvent(CType(e.Row,propsectsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovepropsectsRow(ByVal row As propsectsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "propsectsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class customers_abo_payment_methodDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_abo_payment_method_id As Global.System.Data.DataColumn
        
        Private columncustomers_abo_payment_method_name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "customers_abo_payment_method"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_payment_method_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_payment_method_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_payment_method_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_payment_method_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As customers_abo_payment_methodRow
            Get
                Return CType(Me.Rows(index),customers_abo_payment_methodRow)
            End Get
        End Property
        
        Public Event customers_abo_payment_methodRowChanging As customers_abo_payment_methodRowChangeEventHandler
        
        Public Event customers_abo_payment_methodRowChanged As customers_abo_payment_methodRowChangeEventHandler
        
        Public Event customers_abo_payment_methodRowDeleting As customers_abo_payment_methodRowChangeEventHandler
        
        Public Event customers_abo_payment_methodRowDeleted As customers_abo_payment_methodRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addcustomers_abo_payment_methodRow(ByVal row As customers_abo_payment_methodRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addcustomers_abo_payment_methodRow(ByVal customers_abo_payment_method_id As Integer, ByVal customers_abo_payment_method_name As String) As customers_abo_payment_methodRow
            Dim rowcustomers_abo_payment_methodRow As customers_abo_payment_methodRow = CType(Me.NewRow,customers_abo_payment_methodRow)
            Dim columnValuesArray() As Object = New Object() {customers_abo_payment_method_id, customers_abo_payment_method_name}
            rowcustomers_abo_payment_methodRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustomers_abo_payment_methodRow)
            Return rowcustomers_abo_payment_methodRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycustomers_abo_payment_method_id(ByVal customers_abo_payment_method_id As Integer) As customers_abo_payment_methodRow
            Return CType(Me.Rows.Find(New Object() {customers_abo_payment_method_id}),customers_abo_payment_methodRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As customers_abo_payment_methodDataTable = CType(MyBase.Clone,customers_abo_payment_methodDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New customers_abo_payment_methodDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_abo_payment_method_id = MyBase.Columns("customers_abo_payment_method_id")
            Me.columncustomers_abo_payment_method_name = MyBase.Columns("customers_abo_payment_method_name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_abo_payment_method_id = New Global.System.Data.DataColumn("customers_abo_payment_method_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_payment_method_id)
            Me.columncustomers_abo_payment_method_name = New Global.System.Data.DataColumn("customers_abo_payment_method_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_payment_method_name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncustomers_abo_payment_method_id}, true))
            Me.columncustomers_abo_payment_method_id.AllowDBNull = false
            Me.columncustomers_abo_payment_method_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newcustomers_abo_payment_methodRow() As customers_abo_payment_methodRow
            Return CType(Me.NewRow,customers_abo_payment_methodRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New customers_abo_payment_methodRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(customers_abo_payment_methodRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.customers_abo_payment_methodRowChangedEvent) Is Nothing) Then
                RaiseEvent customers_abo_payment_methodRowChanged(Me, New customers_abo_payment_methodRowChangeEvent(CType(e.Row,customers_abo_payment_methodRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.customers_abo_payment_methodRowChangingEvent) Is Nothing) Then
                RaiseEvent customers_abo_payment_methodRowChanging(Me, New customers_abo_payment_methodRowChangeEvent(CType(e.Row,customers_abo_payment_methodRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.customers_abo_payment_methodRowDeletedEvent) Is Nothing) Then
                RaiseEvent customers_abo_payment_methodRowDeleted(Me, New customers_abo_payment_methodRowChangeEvent(CType(e.Row,customers_abo_payment_methodRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.customers_abo_payment_methodRowDeletingEvent) Is Nothing) Then
                RaiseEvent customers_abo_payment_methodRowDeleting(Me, New customers_abo_payment_methodRowChangeEvent(CType(e.Row,customers_abo_payment_methodRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removecustomers_abo_payment_methodRow(ByVal row As customers_abo_payment_methodRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "customers_abo_payment_methodDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class phone_requestDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "phone_request"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As phone_requestRow
            Get
                Return CType(Me.Rows(index),phone_requestRow)
            End Get
        End Property
        
        Public Event phone_requestRowChanging As phone_requestRowChangeEventHandler
        
        Public Event phone_requestRowChanged As phone_requestRowChangeEventHandler
        
        Public Event phone_requestRowDeleting As phone_requestRowChangeEventHandler
        
        Public Event phone_requestRowDeleted As phone_requestRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addphone_requestRow(ByVal row As phone_requestRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addphone_requestRow() As phone_requestRow
            Dim rowphone_requestRow As phone_requestRow = CType(Me.NewRow,phone_requestRow)
            Dim columnValuesArray(-1) As Object
            rowphone_requestRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowphone_requestRow)
            Return rowphone_requestRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As phone_requestDataTable = CType(MyBase.Clone,phone_requestDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New phone_requestDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newphone_requestRow() As phone_requestRow
            Return CType(Me.NewRow,phone_requestRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New phone_requestRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(phone_requestRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.phone_requestRowChangedEvent) Is Nothing) Then
                RaiseEvent phone_requestRowChanged(Me, New phone_requestRowChangeEvent(CType(e.Row,phone_requestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.phone_requestRowChangingEvent) Is Nothing) Then
                RaiseEvent phone_requestRowChanging(Me, New phone_requestRowChangeEvent(CType(e.Row,phone_requestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.phone_requestRowDeletedEvent) Is Nothing) Then
                RaiseEvent phone_requestRowDeleted(Me, New phone_requestRowChangeEvent(CType(e.Row,phone_requestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.phone_requestRowDeletingEvent) Is Nothing) Then
                RaiseEvent phone_requestRowDeleting(Me, New phone_requestRowChangeEvent(CType(e.Row,phone_requestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removephone_requestRow(ByVal row As phone_requestRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "phone_requestDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class weekdaysDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "weekdays"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As weekdaysRow
            Get
                Return CType(Me.Rows(index),weekdaysRow)
            End Get
        End Property
        
        Public Event weekdaysRowChanging As weekdaysRowChangeEventHandler
        
        Public Event weekdaysRowChanged As weekdaysRowChangeEventHandler
        
        Public Event weekdaysRowDeleting As weekdaysRowChangeEventHandler
        
        Public Event weekdaysRowDeleted As weekdaysRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddweekdaysRow(ByVal row As weekdaysRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddweekdaysRow() As weekdaysRow
            Dim rowweekdaysRow As weekdaysRow = CType(Me.NewRow,weekdaysRow)
            Dim columnValuesArray(-1) As Object
            rowweekdaysRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowweekdaysRow)
            Return rowweekdaysRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As weekdaysDataTable = CType(MyBase.Clone,weekdaysDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New weekdaysDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewweekdaysRow() As weekdaysRow
            Return CType(Me.NewRow,weekdaysRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New weekdaysRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(weekdaysRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.weekdaysRowChangedEvent) Is Nothing) Then
                RaiseEvent weekdaysRowChanged(Me, New weekdaysRowChangeEvent(CType(e.Row,weekdaysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.weekdaysRowChangingEvent) Is Nothing) Then
                RaiseEvent weekdaysRowChanging(Me, New weekdaysRowChangeEvent(CType(e.Row,weekdaysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.weekdaysRowDeletedEvent) Is Nothing) Then
                RaiseEvent weekdaysRowDeleted(Me, New weekdaysRowChangeEvent(CType(e.Row,weekdaysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.weekdaysRowDeletingEvent) Is Nothing) Then
                RaiseEvent weekdaysRowDeleting(Me, New weekdaysRowChangeEvent(CType(e.Row,weekdaysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveweekdaysRow(ByVal row As weekdaysRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "weekdaysDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class phone_request_hoursDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncodevalue As Global.System.Data.DataColumn
        
        Private columncodedesc As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "phone_request_hours"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codevalueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodevalue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codedescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodedesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As phone_request_hoursRow
            Get
                Return CType(Me.Rows(index),phone_request_hoursRow)
            End Get
        End Property
        
        Public Event phone_request_hoursRowChanging As phone_request_hoursRowChangeEventHandler
        
        Public Event phone_request_hoursRowChanged As phone_request_hoursRowChangeEventHandler
        
        Public Event phone_request_hoursRowDeleting As phone_request_hoursRowChangeEventHandler
        
        Public Event phone_request_hoursRowDeleted As phone_request_hoursRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addphone_request_hoursRow(ByVal row As phone_request_hoursRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addphone_request_hoursRow(ByVal codevalue As Integer, ByVal codedesc As String) As phone_request_hoursRow
            Dim rowphone_request_hoursRow As phone_request_hoursRow = CType(Me.NewRow,phone_request_hoursRow)
            Dim columnValuesArray() As Object = New Object() {codevalue, codedesc}
            rowphone_request_hoursRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowphone_request_hoursRow)
            Return rowphone_request_hoursRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As phone_request_hoursDataTable = CType(MyBase.Clone,phone_request_hoursDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New phone_request_hoursDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncodevalue = MyBase.Columns("codevalue")
            Me.columncodedesc = MyBase.Columns("codedesc")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncodevalue = New Global.System.Data.DataColumn("codevalue", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodevalue)
            Me.columncodedesc = New Global.System.Data.DataColumn("codedesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodedesc)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newphone_request_hoursRow() As phone_request_hoursRow
            Return CType(Me.NewRow,phone_request_hoursRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New phone_request_hoursRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(phone_request_hoursRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.phone_request_hoursRowChangedEvent) Is Nothing) Then
                RaiseEvent phone_request_hoursRowChanged(Me, New phone_request_hoursRowChangeEvent(CType(e.Row,phone_request_hoursRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.phone_request_hoursRowChangingEvent) Is Nothing) Then
                RaiseEvent phone_request_hoursRowChanging(Me, New phone_request_hoursRowChangeEvent(CType(e.Row,phone_request_hoursRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.phone_request_hoursRowDeletedEvent) Is Nothing) Then
                RaiseEvent phone_request_hoursRowDeleted(Me, New phone_request_hoursRowChangeEvent(CType(e.Row,phone_request_hoursRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.phone_request_hoursRowDeletingEvent) Is Nothing) Then
                RaiseEvent phone_request_hoursRowDeleting(Me, New phone_request_hoursRowChangeEvent(CType(e.Row,phone_request_hoursRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removephone_request_hoursRow(ByVal row As phone_request_hoursRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "phone_request_hoursDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class phone_request_reasonDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncodevalue As Global.System.Data.DataColumn
        
        Private columncodedesc As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "phone_request_reason"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codevalueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodevalue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codedescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodedesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As phone_request_reasonRow
            Get
                Return CType(Me.Rows(index),phone_request_reasonRow)
            End Get
        End Property
        
        Public Event phone_request_reasonRowChanging As phone_request_reasonRowChangeEventHandler
        
        Public Event phone_request_reasonRowChanged As phone_request_reasonRowChangeEventHandler
        
        Public Event phone_request_reasonRowDeleting As phone_request_reasonRowChangeEventHandler
        
        Public Event phone_request_reasonRowDeleted As phone_request_reasonRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addphone_request_reasonRow(ByVal row As phone_request_reasonRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addphone_request_reasonRow(ByVal codevalue As Integer, ByVal codedesc As String) As phone_request_reasonRow
            Dim rowphone_request_reasonRow As phone_request_reasonRow = CType(Me.NewRow,phone_request_reasonRow)
            Dim columnValuesArray() As Object = New Object() {codevalue, codedesc}
            rowphone_request_reasonRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowphone_request_reasonRow)
            Return rowphone_request_reasonRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As phone_request_reasonDataTable = CType(MyBase.Clone,phone_request_reasonDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New phone_request_reasonDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncodevalue = MyBase.Columns("codevalue")
            Me.columncodedesc = MyBase.Columns("codedesc")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncodevalue = New Global.System.Data.DataColumn("codevalue", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodevalue)
            Me.columncodedesc = New Global.System.Data.DataColumn("codedesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodedesc)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newphone_request_reasonRow() As phone_request_reasonRow
            Return CType(Me.NewRow,phone_request_reasonRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New phone_request_reasonRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(phone_request_reasonRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.phone_request_reasonRowChangedEvent) Is Nothing) Then
                RaiseEvent phone_request_reasonRowChanged(Me, New phone_request_reasonRowChangeEvent(CType(e.Row,phone_request_reasonRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.phone_request_reasonRowChangingEvent) Is Nothing) Then
                RaiseEvent phone_request_reasonRowChanging(Me, New phone_request_reasonRowChangeEvent(CType(e.Row,phone_request_reasonRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.phone_request_reasonRowDeletedEvent) Is Nothing) Then
                RaiseEvent phone_request_reasonRowDeleted(Me, New phone_request_reasonRowChangeEvent(CType(e.Row,phone_request_reasonRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.phone_request_reasonRowDeletingEvent) Is Nothing) Then
                RaiseEvent phone_request_reasonRowDeleting(Me, New phone_request_reasonRowChangeEvent(CType(e.Row,phone_request_reasonRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removephone_request_reasonRow(ByVal row As phone_request_reasonRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "phone_request_reasonDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class QuizzDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnquizz_id As Global.System.Data.DataColumn
        
        Private columndate As Global.System.Data.DataColumn
        
        Private columnlanguage_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnemail As Global.System.Data.DataColumn
        
        Private columnpseudo As Global.System.Data.DataColumn
        
        Private columnquizz_name_id As Global.System.Data.DataColumn
        
        Private columnscore As Global.System.Data.DataColumn
        
        Private columnnbrofquestions As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        Private columnEntityID As Global.System.Data.DataColumn
        
        Private columnunsubscribe As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Quizz"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quizz_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquizz_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property language_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlanguage_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pseudoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpseudo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quizz_name_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquizz_name_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property scoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnscore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nbrofquestionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnbrofquestions
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EntityIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEntityID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property unsubscribeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunsubscribe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As QuizzRow
            Get
                Return CType(Me.Rows(index),QuizzRow)
            End Get
        End Property
        
        Public Event QuizzRowChanging As QuizzRowChangeEventHandler
        
        Public Event QuizzRowChanged As QuizzRowChangeEventHandler
        
        Public Event QuizzRowDeleting As QuizzRowChangeEventHandler
        
        Public Event QuizzRowDeleted As QuizzRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddQuizzRow(ByVal row As QuizzRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddQuizzRow(ByVal quizz_id As String, ByVal _date As String, ByVal language_id As String, ByVal email As String, ByVal pseudo As String, ByVal quizz_name_id As String, ByVal score As String, ByVal nbrofquestions As String, ByVal site As String, ByVal EntityID As String, ByVal unsubscribe As Integer) As QuizzRow
            Dim rowQuizzRow As QuizzRow = CType(Me.NewRow,QuizzRow)
            Dim columnValuesArray() As Object = New Object() {quizz_id, _date, language_id, Nothing, email, pseudo, quizz_name_id, score, nbrofquestions, site, EntityID, unsubscribe}
            rowQuizzRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowQuizzRow)
            Return rowQuizzRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As QuizzDataTable = CType(MyBase.Clone,QuizzDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New QuizzDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnquizz_id = MyBase.Columns("quizz_id")
            Me.columndate = MyBase.Columns("date")
            Me.columnlanguage_id = MyBase.Columns("language_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnemail = MyBase.Columns("email")
            Me.columnpseudo = MyBase.Columns("pseudo")
            Me.columnquizz_name_id = MyBase.Columns("quizz_name_id")
            Me.columnscore = MyBase.Columns("score")
            Me.columnnbrofquestions = MyBase.Columns("nbrofquestions")
            Me.columnsite = MyBase.Columns("site")
            Me.columnEntityID = MyBase.Columns("EntityID")
            Me.columnunsubscribe = MyBase.Columns("unsubscribe")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnquizz_id = New Global.System.Data.DataColumn("quizz_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquizz_id)
            Me.columndate = New Global.System.Data.DataColumn("date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columndate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "dateColumn")
            Me.columndate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columndate")
            Me.columndate.ExtendedProperties.Add("Generator_UserColumnName", "date")
            MyBase.Columns.Add(Me.columndate)
            Me.columnlanguage_id = New Global.System.Data.DataColumn("language_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlanguage_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnemail = New Global.System.Data.DataColumn("email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columnpseudo = New Global.System.Data.DataColumn("pseudo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpseudo)
            Me.columnquizz_name_id = New Global.System.Data.DataColumn("quizz_name_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquizz_name_id)
            Me.columnscore = New Global.System.Data.DataColumn("score", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnscore)
            Me.columnnbrofquestions = New Global.System.Data.DataColumn("nbrofquestions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnbrofquestions)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.columnEntityID = New Global.System.Data.DataColumn("EntityID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEntityID)
            Me.columnunsubscribe = New Global.System.Data.DataColumn("unsubscribe", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunsubscribe)
            Me.columncustomers_id.AutoIncrement = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_id.ReadOnly = true
            Me.columnscore.AllowDBNull = false
            Me.columnscore.Caption = "customers_firstname"
            Me.columnnbrofquestions.AllowDBNull = false
            Me.columnnbrofquestions.Caption = "customers_lastname"
            Me.columnsite.AllowDBNull = false
            Me.columnsite.Caption = "customers_email_address"
            Me.columnEntityID.Caption = "discount_code"
            Me.columnunsubscribe.Caption = "customers_language"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewQuizzRow() As QuizzRow
            Return CType(Me.NewRow,QuizzRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New QuizzRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(QuizzRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.QuizzRowChangedEvent) Is Nothing) Then
                RaiseEvent QuizzRowChanged(Me, New QuizzRowChangeEvent(CType(e.Row,QuizzRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.QuizzRowChangingEvent) Is Nothing) Then
                RaiseEvent QuizzRowChanging(Me, New QuizzRowChangeEvent(CType(e.Row,QuizzRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.QuizzRowDeletedEvent) Is Nothing) Then
                RaiseEvent QuizzRowDeleted(Me, New QuizzRowChangeEvent(CType(e.Row,QuizzRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.QuizzRowDeletingEvent) Is Nothing) Then
                RaiseEvent QuizzRowDeleting(Me, New QuizzRowChangeEvent(CType(e.Row,QuizzRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveQuizzRow(ByVal row As QuizzRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "QuizzDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class code_tmpDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncode As Global.System.Data.DataColumn
        
        Private columncode_type As Global.System.Data.DataColumn
        
        Private columnCode_Creation_Date As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "code_tmp"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property code_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_Creation_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_Creation_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As code_tmpRow
            Get
                Return CType(Me.Rows(index),code_tmpRow)
            End Get
        End Property
        
        Public Event code_tmpRowChanging As code_tmpRowChangeEventHandler
        
        Public Event code_tmpRowChanged As code_tmpRowChangeEventHandler
        
        Public Event code_tmpRowDeleting As code_tmpRowChangeEventHandler
        
        Public Event code_tmpRowDeleted As code_tmpRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addcode_tmpRow(ByVal row As code_tmpRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addcode_tmpRow(ByVal customers_id As Integer, ByVal code As String, ByVal code_type As String, ByVal Code_Creation_Date As String) As code_tmpRow
            Dim rowcode_tmpRow As code_tmpRow = CType(Me.NewRow,code_tmpRow)
            Dim columnValuesArray() As Object = New Object() {customers_id, code, code_type, Code_Creation_Date}
            rowcode_tmpRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcode_tmpRow)
            Return rowcode_tmpRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As code_tmpDataTable = CType(MyBase.Clone,code_tmpDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New code_tmpDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncode = MyBase.Columns("code")
            Me.columncode_type = MyBase.Columns("code_type")
            Me.columnCode_Creation_Date = MyBase.Columns("Code_Creation_Date")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columncode_type = New Global.System.Data.DataColumn("code_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode_type)
            Me.columnCode_Creation_Date = New Global.System.Data.DataColumn("Code_Creation_Date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_Creation_Date)
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_id.Caption = "mail_messages_id"
            Me.columncode.Caption = "language_id"
            Me.columncode_type.AllowDBNull = false
            Me.columncode_type.Caption = "messages_title"
            Me.columnCode_Creation_Date.Caption = "messages_html"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newcode_tmpRow() As code_tmpRow
            Return CType(Me.NewRow,code_tmpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New code_tmpRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(code_tmpRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.code_tmpRowChangedEvent) Is Nothing) Then
                RaiseEvent code_tmpRowChanged(Me, New code_tmpRowChangeEvent(CType(e.Row,code_tmpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.code_tmpRowChangingEvent) Is Nothing) Then
                RaiseEvent code_tmpRowChanging(Me, New code_tmpRowChangeEvent(CType(e.Row,code_tmpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.code_tmpRowDeletedEvent) Is Nothing) Then
                RaiseEvent code_tmpRowDeleted(Me, New code_tmpRowChangeEvent(CType(e.Row,code_tmpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.code_tmpRowDeletingEvent) Is Nothing) Then
                RaiseEvent code_tmpRowDeleting(Me, New code_tmpRowChangeEvent(CType(e.Row,code_tmpRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removecode_tmpRow(ByVal row As code_tmpRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "code_tmpDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class custserv_view1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "custserv_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As custserv_view1Row
            Get
                Return CType(Me.Rows(index),custserv_view1Row)
            End Get
        End Property
        
        Public Event custserv_view1RowChanging As custserv_view1RowChangeEventHandler
        
        Public Event custserv_view1RowChanged As custserv_view1RowChangeEventHandler
        
        Public Event custserv_view1RowDeleting As custserv_view1RowChangeEventHandler
        
        Public Event custserv_view1RowDeleted As custserv_view1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addcustserv_view1Row(ByVal row As custserv_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addcustserv_view1Row() As custserv_view1Row
            Dim rowcustserv_view1Row As custserv_view1Row = CType(Me.NewRow,custserv_view1Row)
            Dim columnValuesArray(-1) As Object
            rowcustserv_view1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustserv_view1Row)
            Return rowcustserv_view1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As custserv_view1DataTable = CType(MyBase.Clone,custserv_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New custserv_view1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newcustserv_view1Row() As custserv_view1Row
            Return CType(Me.NewRow,custserv_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New custserv_view1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(custserv_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.custserv_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent custserv_view1RowChanged(Me, New custserv_view1RowChangeEvent(CType(e.Row,custserv_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.custserv_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent custserv_view1RowChanging(Me, New custserv_view1RowChangeEvent(CType(e.Row,custserv_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.custserv_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent custserv_view1RowDeleted(Me, New custserv_view1RowChangeEvent(CType(e.Row,custserv_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.custserv_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent custserv_view1RowDeleting(Me, New custserv_view1RowChangeEvent(CType(e.Row,custserv_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removecustserv_view1Row(ByVal row As custserv_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsCustomers = New dsCustomers
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "custserv_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class customersRow
        Inherits Global.System.Data.DataRow
        
        Private tablecustomers As customersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustomers = CType(Me.Table,customersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_gender() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_genderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_gender' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_firstname' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_lastname' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_dob' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_email_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_email_address' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_default_address_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_default_address_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_default_address_id' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_default_address_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_telephoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_telephone' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone_evening() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_telephone_eveningColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_telephone_evening' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_telephone_eveningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_fax() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_faxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_fax' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_password() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_passwordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_password' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletter() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_newsletterColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletter' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_newsletterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletterpartner() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_newsletterpartnerColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletterpartner' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_newsletterpartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_privilegeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_privilege' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_privilegeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege_balance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_privilege_balanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_privilege_balance' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_privilege_balanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_garantie() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_garantieColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_garantie' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_garantieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsoring_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.sponsoring_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsoring_code' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.sponsoring_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsored_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.sponsored_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsored_code' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.sponsored_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_aboColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_suspended() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_suspendedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_suspended' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_suspendedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_type() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_typeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_type' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property flagminiat1995() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.flagminiat1995Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'flagminiat1995' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.flagminiat1995Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_method() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_methodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_method' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_norm() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_dvd_normColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_norm' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_adult() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_dvd_adultColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_adult' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_norm() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_dvd_home_normColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_home_norm' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_home_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_adult() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_dvd_home_adultColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_home_adult' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_home_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property throttling() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.throttlingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'throttling' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.throttlingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_validityto' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_rank() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_rankColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_rank' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_rankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_start_rentthismonth() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_start_rentthismonthColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_start_rentthismonth' in table 'customers' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_start_rentthismonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_credit() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_dvd_creditColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_credit' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_dvd_creditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_multishipment() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_multishipmentColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_multishipment' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_multishipmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_discount_recurring_to_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_discount_recurring_to_date' in table 'custome"& _ 
                            "rs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abotested() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.abotestedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abotested' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.abotestedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_status' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_payment_method() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_payment_methodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_payment_method' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.domiciliation_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_status' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.domiciliation_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_debiter_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.domiciliation_debiter_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_debiter_name' in table 'customers' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.domiciliation_debiter_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.domiciliation_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_number' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.domiciliation_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_account_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.domiciliation_account_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_account_number' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.domiciliation_account_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property adult_pwd() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.adult_pwdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adult_pwd' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.adult_pwdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_card_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_type' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_card_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_card_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_no' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_card_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_exp_date() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_exp_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_exp_date' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_exp_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_owner' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_cc_expiration_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_cc_expiration_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_cc_expiration_status' in table 'customers' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_cc_expiration_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property offline_payment_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.offline_payment_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'offline_payment_status' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.offline_payment_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.commentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comment' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vip() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.vipColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vip' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.vipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property black_listed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.black_listedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'black_listed' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.black_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property red_listed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.red_listedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'red_listed' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.red_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sm_eligible() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.sm_eligibleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sm_eligible' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.sm_eligibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_enquiry_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_enquiry_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_enquiry_id' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_enquiry_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_first_delivery() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.date_first_deliveryColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_first_delivery' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.date_first_deliveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_adult_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.mail_wl_adult_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_adult_not_sufficient' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.mail_wl_adult_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_norm_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.mail_wl_norm_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_norm_not_sufficient' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.mail_wl_norm_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mgm_points() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.mgm_pointsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mgm_points' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.mgm_pointsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wishlist_kind() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.wishlist_kindColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wishlist_kind' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.wishlist_kindColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_of_last_logon() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_info_date_of_last_logonColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_of_last_logon' in table 'customers' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_info_date_of_last_logonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_number_of_logons() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_info_number_of_logonsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_number_of_logons' in table 'customers' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_info_number_of_logonsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_account_created() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_info_date_account_createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_account_created' in table 'customers' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_info_date_account_createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_account_last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_info_date_account_last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_account_last_modified' in table 'custom"& _ 
                            "ers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_info_date_account_last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property global_product_notifications() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.global_product_notificationsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'global_product_notifications' in table 'customers' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.global_product_notificationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_language() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_languageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_language' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.siteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'site' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property partners_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.partners_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partners_id' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.partners_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property belgiqueloisirs_id() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.belgiqueloisirs_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'belgiqueloisirs_id' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.belgiqueloisirs_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property selected_for_email() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.selected_for_emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'selected_for_email' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.selected_for_emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_genderNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_genderNull()
            Me(Me.tablecustomers.customers_genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_firstnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_firstnameNull()
            Me(Me.tablecustomers.customers_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_lastnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_lastnameNull()
            Me(Me.tablecustomers.customers_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_dobNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_dobNull()
            Me(Me.tablecustomers.customers_dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_email_addressNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_email_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_email_addressNull()
            Me(Me.tablecustomers.customers_email_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_default_address_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_default_address_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_default_address_idNull()
            Me(Me.tablecustomers.customers_default_address_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_telephoneNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_telephoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_telephoneNull()
            Me(Me.tablecustomers.customers_telephoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_telephone_eveningNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_telephone_eveningColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_telephone_eveningNull()
            Me(Me.tablecustomers.customers_telephone_eveningColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_faxNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_faxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_faxNull()
            Me(Me.tablecustomers.customers_faxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_passwordNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_passwordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_passwordNull()
            Me(Me.tablecustomers.customers_passwordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_newsletterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterNull()
            Me(Me.tablecustomers.customers_newsletterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterpartnerNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_newsletterpartnerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterpartnerNull()
            Me(Me.tablecustomers.customers_newsletterpartnerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_privilegeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_privilegeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_privilegeNull()
            Me(Me.tablecustomers.customers_privilegeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_privilege_balanceNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_privilege_balanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_privilege_balanceNull()
            Me(Me.tablecustomers.customers_privilege_balanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_garantieNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_garantieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_garantieNull()
            Me(Me.tablecustomers.customers_garantieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsoring_codeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.sponsoring_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsoring_codeNull()
            Me(Me.tablecustomers.sponsoring_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsored_codeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.sponsored_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsored_codeNull()
            Me(Me.tablecustomers.sponsored_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_aboNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_aboColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_aboNull()
            Me(Me.tablecustomers.customers_aboColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_suspendedNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_suspendedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_suspendedNull()
            Me(Me.tablecustomers.customers_abo_suspendedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_typeNull()
            Me(Me.tablecustomers.customers_abo_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isflagminiat1995Null() As Boolean
            Return Me.IsNull(Me.tablecustomers.flagminiat1995Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setflagminiat1995Null()
            Me(Me.tablecustomers.flagminiat1995Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_methodNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_methodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_methodNull()
            Me(Me.tablecustomers.customers_abo_methodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_normNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_dvd_normColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_normNull()
            Me(Me.tablecustomers.customers_abo_dvd_normColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_adultNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_dvd_adultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_adultNull()
            Me(Me.tablecustomers.customers_abo_dvd_adultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_home_normNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_dvd_home_normColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_home_normNull()
            Me(Me.tablecustomers.customers_abo_dvd_home_normColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_home_adultNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_dvd_home_adultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_home_adultNull()
            Me(Me.tablecustomers.customers_abo_dvd_home_adultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsthrottlingNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.throttlingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetthrottlingNull()
            Me(Me.tablecustomers.throttlingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_validitytoNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_validitytoNull()
            Me(Me.tablecustomers.customers_abo_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_rankNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_rankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_rankNull()
            Me(Me.tablecustomers.customers_abo_rankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_start_rentthismonthNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_start_rentthismonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_start_rentthismonthNull()
            Me(Me.tablecustomers.customers_abo_start_rentthismonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_creditNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_dvd_creditColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_creditNull()
            Me(Me.tablecustomers.customers_abo_dvd_creditColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_multishipmentNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_multishipmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_multishipmentNull()
            Me(Me.tablecustomers.customers_abo_multishipmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_discount_recurring_to_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_discount_recurring_to_dateNull()
            Me(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsabotestedNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.abotestedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetabotestedNull()
            Me(Me.tablecustomers.abotestedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_statusNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_statusNull()
            Me(Me.tablecustomers.customers_abo_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_payment_methodNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_payment_methodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_payment_methodNull()
            Me(Me.tablecustomers.customers_abo_payment_methodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_statusNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.domiciliation_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_statusNull()
            Me(Me.tablecustomers.domiciliation_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_debiter_nameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.domiciliation_debiter_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_debiter_nameNull()
            Me(Me.tablecustomers.domiciliation_debiter_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_numberNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.domiciliation_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_numberNull()
            Me(Me.tablecustomers.domiciliation_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_account_numberNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.domiciliation_account_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_account_numberNull()
            Me(Me.tablecustomers.domiciliation_account_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadult_pwdNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.adult_pwdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadult_pwdNull()
            Me(Me.tablecustomers.adult_pwdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_card_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_typeNull()
            Me(Me.tablecustomers.ogone_card_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_noNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_card_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_noNull()
            Me(Me.tablecustomers.ogone_card_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_exp_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_exp_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_exp_dateNull()
            Me(Me.tablecustomers.ogone_exp_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_ownerNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_ownerNull()
            Me(Me.tablecustomers.ogone_ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_cc_expiration_statusNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_cc_expiration_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_cc_expiration_statusNull()
            Me(Me.tablecustomers.ogone_cc_expiration_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isoffline_payment_statusNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.offline_payment_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setoffline_payment_statusNull()
            Me(Me.tablecustomers.offline_payment_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscommentNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.commentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcommentNull()
            Me(Me.tablecustomers.commentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsvipNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.vipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetvipNull()
            Me(Me.tablecustomers.vipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isblack_listedNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.black_listedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setblack_listedNull()
            Me(Me.tablecustomers.black_listedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isred_listedNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.red_listedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setred_listedNull()
            Me(Me.tablecustomers.red_listedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issm_eligibleNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.sm_eligibleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsm_eligibleNull()
            Me(Me.tablecustomers.sm_eligibleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_enquiry_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_enquiry_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_enquiry_idNull()
            Me(Me.tablecustomers.customers_enquiry_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_first_deliveryNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.date_first_deliveryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_first_deliveryNull()
            Me(Me.tablecustomers.date_first_deliveryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_adult_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.mail_wl_adult_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_adult_not_sufficientNull()
            Me(Me.tablecustomers.mail_wl_adult_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_norm_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.mail_wl_norm_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_norm_not_sufficientNull()
            Me(Me.tablecustomers.mail_wl_norm_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismgm_pointsNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.mgm_pointsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmgm_pointsNull()
            Me(Me.tablecustomers.mgm_pointsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iswishlist_kindNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.wishlist_kindColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setwishlist_kindNull()
            Me(Me.tablecustomers.wishlist_kindColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_of_last_logonNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_info_date_of_last_logonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_of_last_logonNull()
            Me(Me.tablecustomers.customers_info_date_of_last_logonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_number_of_logonsNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_info_number_of_logonsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_number_of_logonsNull()
            Me(Me.tablecustomers.customers_info_number_of_logonsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_account_createdNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_info_date_account_createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_account_createdNull()
            Me(Me.tablecustomers.customers_info_date_account_createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_account_last_modifiedNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_info_date_account_last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_account_last_modifiedNull()
            Me(Me.tablecustomers.customers_info_date_account_last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isglobal_product_notificationsNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.global_product_notificationsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setglobal_product_notificationsNull()
            Me(Me.tablecustomers.global_product_notificationsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_languageNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_languageNull()
            Me(Me.tablecustomers.customers_languageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssiteNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.siteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsiteNull()
            Me(Me.tablecustomers.siteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispartners_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.partners_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpartners_idNull()
            Me(Me.tablecustomers.partners_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbelgiqueloisirs_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.belgiqueloisirs_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbelgiqueloisirs_idNull()
            Me(Me.tablecustomers.belgiqueloisirs_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isselected_for_emailNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.selected_for_emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setselected_for_emailNull()
            Me(Me.tablecustomers.selected_for_emailColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class customers_infoRow
        Inherits Global.System.Data.DataRow
        
        Private tablecustomers_info As customers_infoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustomers_info = CType(Me.Table,customers_infoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers_info.customers_info_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_info.customers_info_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_of_last_logon() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_info.customers_info_date_of_last_logonColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_of_last_logon' in table 'customers_info"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_info.customers_info_date_of_last_logonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_number_of_logons() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_info.customers_info_number_of_logonsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_number_of_logons' in table 'customers_info' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_info.customers_info_number_of_logonsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_account_created() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_info.customers_info_date_account_createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_account_created' in table 'customers_in"& _ 
                            "fo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_info.customers_info_date_account_createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_account_last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_info.customers_info_date_account_last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_account_last_modified' in table 'custom"& _ 
                            "ers_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_info.customers_info_date_account_last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property global_product_notifications() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_info.global_product_notificationsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'global_product_notifications' in table 'customers_info' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_info.global_product_notificationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_language() As Integer
            Get
                Return CType(Me(Me.tablecustomers_info.customers_languageColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_info.customers_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As String
            Get
                Return CType(Me(Me.tablecustomers_info.siteColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_info.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property partners_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers_info.partners_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_info.partners_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property belgiqueloisirs_id() As String
            Get
                Return CType(Me(Me.tablecustomers_info.belgiqueloisirs_idColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_info.belgiqueloisirs_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_of_last_logonNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_info.customers_info_date_of_last_logonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_of_last_logonNull()
            Me(Me.tablecustomers_info.customers_info_date_of_last_logonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_number_of_logonsNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_info.customers_info_number_of_logonsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_number_of_logonsNull()
            Me(Me.tablecustomers_info.customers_info_number_of_logonsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_account_createdNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_info.customers_info_date_account_createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_account_createdNull()
            Me(Me.tablecustomers_info.customers_info_date_account_createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_account_last_modifiedNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_info.customers_info_date_account_last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_account_last_modifiedNull()
            Me(Me.tablecustomers_info.customers_info_date_account_last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isglobal_product_notificationsNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_info.global_product_notificationsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setglobal_product_notificationsNull()
            Me(Me.tablecustomers_info.global_product_notificationsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class customers_instant_profileRow
        Inherits Global.System.Data.DataRow
        
        Private tablecustomers_instant_profile As customers_instant_profileDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustomers_instant_profile = CType(Me.Table,customers_instant_profileDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo() As Short
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.aboColumn),Short)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_type() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.abo_typeColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_pattern() As String
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.abo_patternColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.abo_patternColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_pattern_info() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.abo_pattern_infoColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.abo_pattern_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payable() As Short
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.payableColumn),Short)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.payableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_method() As String
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.payment_methodColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property income() As Decimal
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.incomeColumn),Decimal)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.incomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvd_norm() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.dvd_normColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.dvd_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvd_adult() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.dvd_adultColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.dvd_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_credit() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.customers_abo_dvd_creditColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.customers_abo_dvd_creditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property at_home_norm() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.at_home_normColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.at_home_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property at_home_adult() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.at_home_adultColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.at_home_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wl_norm() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.wl_normColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.wl_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wl_adult() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.wl_adultColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.wl_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rentals_norm() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.rentals_normColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.rentals_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rentals_adult() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.rentals_adultColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.rentals_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delays() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.delaysColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.delaysColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delays_after_1juin2005() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.delays_after_1juin2005Column),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.delays_after_1juin2005Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property compensations() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.compensationsColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.compensationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property custserv_repair() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.custserv_repairColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.custserv_repairColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property custserv_delays() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.custserv_delaysColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.custserv_delaysColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rentals_lastmonth() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.rentals_lastmonthColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.rentals_lastmonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property custserv_repair_lastmonth() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.custserv_repair_lastmonthColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.custserv_repair_lastmonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property custserv_delays_lastmonth() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.custserv_delays_lastmonthColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.custserv_delays_lastmonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_stop() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.abo_stopColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.abo_stopColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_stop_cust() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.abo_stop_custColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.abo_stop_custColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property profitability() As Decimal
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.profitabilityColumn),Decimal)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.profitabilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvd_sent_by_kiala() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.dvd_sent_by_kialaColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.dvd_sent_by_kialaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvd_sent_by_kiala_lastmonth() As Integer
            Get
                Return CType(Me(Me.tablecustomers_instant_profile.dvd_sent_by_kiala_lastmonthColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_instant_profile.dvd_sent_by_kiala_lastmonthColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class mail_messagesRow
        Inherits Global.System.Data.DataRow
        
        Private tablemail_messages As mail_messagesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablemail_messages = CType(Me.Table,mail_messagesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_messages_id() As Integer
            Get
                Return CType(Me(Me.tablemail_messages.mail_messages_idColumn),Integer)
            End Get
            Set
                Me(Me.tablemail_messages.mail_messages_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property language_id() As Integer
            Get
                Return CType(Me(Me.tablemail_messages.language_idColumn),Integer)
            End Get
            Set
                Me(Me.tablemail_messages.language_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property messages_subject() As String
            Get
                Return CType(Me(Me.tablemail_messages.messages_subjectColumn),String)
            End Get
            Set
                Me(Me.tablemail_messages.messages_subjectColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property messages_title() As String
            Get
                Return CType(Me(Me.tablemail_messages.messages_titleColumn),String)
            End Get
            Set
                Me(Me.tablemail_messages.messages_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property messages_html() As String
            Get
                Return CType(Me(Me.tablemail_messages.messages_htmlColumn),String)
            End Get
            Set
                Me(Me.tablemail_messages.messages_htmlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Return CType(Me(Me.tablemail_messages.commentColumn),String)
            End Get
            Set
                Me(Me.tablemail_messages.commentColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class mail_messages_sent_historyRow
        Inherits Global.System.Data.DataRow
        
        Private tablemail_messages_sent_history As mail_messages_sent_historyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablemail_messages_sent_history = CType(Me.Table,mail_messages_sent_historyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_messages_sent_history_id() As Integer
            Get
                Return CType(Me(Me.tablemail_messages_sent_history.mail_messages_sent_history_idColumn),Integer)
            End Get
            Set
                Me(Me.tablemail_messages_sent_history.mail_messages_sent_history_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemail_messages_sent_history.dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date' in table 'mail_messages_sent_history' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemail_messages_sent_history.dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tablemail_messages_sent_history.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tablemail_messages_sent_history.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_messages_id() As Integer
            Get
                Return CType(Me(Me.tablemail_messages_sent_history.mail_messages_idColumn),Integer)
            End Get
            Set
                Me(Me.tablemail_messages_sent_history.mail_messages_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property language_id() As Integer
            Get
                Return CType(Me(Me.tablemail_messages_sent_history.language_idColumn),Integer)
            End Get
            Set
                Me(Me.tablemail_messages_sent_history.language_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_opened() As Integer
            Get
                Return CType(Me(Me.tablemail_messages_sent_history.mail_openedColumn),Integer)
            End Get
            Set
                Me(Me.tablemail_messages_sent_history.mail_openedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_opened_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemail_messages_sent_history.mail_opened_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_opened_date' in table 'mail_messages_sent_history' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemail_messages_sent_history.mail_opened_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_dateNull() As Boolean
            Return Me.IsNull(Me.tablemail_messages_sent_history.dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_dateNull()
            Me(Me.tablemail_messages_sent_history.dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_opened_dateNull() As Boolean
            Return Me.IsNull(Me.tablemail_messages_sent_history.mail_opened_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_opened_dateNull()
            Me(Me.tablemail_messages_sent_history.mail_opened_dateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class customers_view1Row
        Inherits Global.System.Data.DataRow
        
        Private tablecustomers_view1 As customers_view1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustomers_view1 = CType(Me.Table,customers_view1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_gender() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.customers_genderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_gender' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.customers_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.customers_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_firstname' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.customers_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_lastname' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.customers_email_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_email_address' in table 'customers_view1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.customers_aboColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.customers_aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_type() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.customers_abo_typeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_type' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.customers_abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_dob() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.customers_dobColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_dob' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.customers_dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.customers_abo_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_validityto' in table 'customers_view1' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.customers_abo_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code_creation_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.code_creation_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code_creation_date' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.code_creation_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property selected_for_email() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.selected_for_emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'selected_for_email' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.selected_for_emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.siteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'site' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_registration_step() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.customers_registration_stepColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_registration_step' in table 'customers_view1' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.customers_registration_stepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_info_date_account_created() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.customers_info_date_account_createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_info_date_account_created' in table 'customers_vi"& _ 
                            "ew1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.customers_info_date_account_createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_discount_code_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.activation_discount_code_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'activation_discount_code_type' in table 'customers_view1' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.activation_discount_code_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_postcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.entry_postcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_postcode' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.entry_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property is_email_valid() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.is_email_validColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'is_email_valid' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.is_email_validColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_first_delivery() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.date_first_deliveryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_first_delivery' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.date_first_deliveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EntityID() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.EntityIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EntityID' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.EntityIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AboStoppedSinceDelay() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.AboStoppedSinceDelayColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AboStoppedSinceDelay' in table 'customers_view1' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.AboStoppedSinceDelayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.code_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code_type' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.code_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_action() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.abo_actionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_action' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.abo_actionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property marketing_ok() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.marketing_okColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'marketing_ok' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.marketing_okColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_discount_code_id() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.activation_discount_code_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'activation_discount_code_id' in table 'customers_view1' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.activation_discount_code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_last_order() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.date_last_orderColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_last_order' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.date_last_orderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property already_sent() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.already_sentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'already_sent' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.already_sentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mgm_points() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.mgm_pointsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mgm_points' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.mgm_pointsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_country_id() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.entry_country_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_country_id' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.entry_country_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wl_size() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.wl_sizeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wl_size' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.wl_sizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property marredevivre() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view1.marredevivreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'marredevivre' in table 'customers_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view1.marredevivreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tablecustomers_view1.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_genderNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.customers_genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_genderNull()
            Me(Me.tablecustomers_view1.customers_genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_firstnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.customers_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_firstnameNull()
            Me(Me.tablecustomers_view1.customers_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_lastnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.customers_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_lastnameNull()
            Me(Me.tablecustomers_view1.customers_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_email_addressNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.customers_email_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_email_addressNull()
            Me(Me.tablecustomers_view1.customers_email_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_aboNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.customers_aboColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_aboNull()
            Me(Me.tablecustomers_view1.customers_aboColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.customers_abo_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_typeNull()
            Me(Me.tablecustomers_view1.customers_abo_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_dobNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.customers_dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_dobNull()
            Me(Me.tablecustomers_view1.customers_dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_validitytoNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.customers_abo_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_validitytoNull()
            Me(Me.tablecustomers_view1.customers_abo_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodeNull()
            Me(Me.tablecustomers_view1.codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscode_creation_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.code_creation_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcode_creation_dateNull()
            Me(Me.tablecustomers_view1.code_creation_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isselected_for_emailNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.selected_for_emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setselected_for_emailNull()
            Me(Me.tablecustomers_view1.selected_for_emailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssiteNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.siteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsiteNull()
            Me(Me.tablecustomers_view1.siteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_registration_stepNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.customers_registration_stepColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_registration_stepNull()
            Me(Me.tablecustomers_view1.customers_registration_stepColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_info_date_account_createdNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.customers_info_date_account_createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_info_date_account_createdNull()
            Me(Me.tablecustomers_view1.customers_info_date_account_createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_discount_code_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.activation_discount_code_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_discount_code_typeNull()
            Me(Me.tablecustomers_view1.activation_discount_code_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_postcodeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.entry_postcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_postcodeNull()
            Me(Me.tablecustomers_view1.entry_postcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isis_email_validNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.is_email_validColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setis_email_validNull()
            Me(Me.tablecustomers_view1.is_email_validColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_first_deliveryNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.date_first_deliveryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_first_deliveryNull()
            Me(Me.tablecustomers_view1.date_first_deliveryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEntityIDNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.EntityIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEntityIDNull()
            Me(Me.tablecustomers_view1.EntityIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAboStoppedSinceDelayNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.AboStoppedSinceDelayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAboStoppedSinceDelayNull()
            Me(Me.tablecustomers_view1.AboStoppedSinceDelayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscode_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.code_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcode_typeNull()
            Me(Me.tablecustomers_view1.code_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_actionNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.abo_actionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_actionNull()
            Me(Me.tablecustomers_view1.abo_actionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismarketing_okNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.marketing_okColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmarketing_okNull()
            Me(Me.tablecustomers_view1.marketing_okColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_discount_code_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.activation_discount_code_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_discount_code_idNull()
            Me(Me.tablecustomers_view1.activation_discount_code_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_last_orderNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.date_last_orderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_last_orderNull()
            Me(Me.tablecustomers_view1.date_last_orderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isalready_sentNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.already_sentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setalready_sentNull()
            Me(Me.tablecustomers_view1.already_sentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismgm_pointsNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.mgm_pointsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmgm_pointsNull()
            Me(Me.tablecustomers_view1.mgm_pointsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_country_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.entry_country_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_country_idNull()
            Me(Me.tablecustomers_view1.entry_country_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iswl_sizeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.wl_sizeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setwl_sizeNull()
            Me(Me.tablecustomers_view1.wl_sizeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmarredevivreNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view1.marredevivreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmarredevivreNull()
            Me(Me.tablecustomers_view1.marredevivreColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class mail_messages1Row
        Inherits Global.System.Data.DataRow
        
        Private tablemail_messages1 As mail_messages1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablemail_messages1 = CType(Me.Table,mail_messages1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_messages_id() As Integer
            Get
                Return CType(Me(Me.tablemail_messages1.mail_messages_idColumn),Integer)
            End Get
            Set
                Me(Me.tablemail_messages1.mail_messages_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property language_id() As Integer
            Get
                Return CType(Me(Me.tablemail_messages1.language_idColumn),Integer)
            End Get
            Set
                Me(Me.tablemail_messages1.language_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property messages_subject() As String
            Get
                Return CType(Me(Me.tablemail_messages1.messages_subjectColumn),String)
            End Get
            Set
                Me(Me.tablemail_messages1.messages_subjectColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property messages_title() As String
            Get
                Return CType(Me(Me.tablemail_messages1.messages_titleColumn),String)
            End Get
            Set
                Me(Me.tablemail_messages1.messages_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property messages_html() As String
            Get
                Return CType(Me(Me.tablemail_messages1.messages_htmlColumn),String)
            End Get
            Set
                Me(Me.tablemail_messages1.messages_htmlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Return CType(Me(Me.tablemail_messages1.commentColumn),String)
            End Get
            Set
                Me(Me.tablemail_messages1.commentColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class languagesRow
        Inherits Global.System.Data.DataRow
        
        Private tablelanguages As languagesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablelanguages = CType(Me.Table,languagesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property languages_id() As Integer
            Get
                Return CType(Me(Me.tablelanguages.languages_idColumn),Integer)
            End Get
            Set
                Me(Me.tablelanguages.languages_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name() As String
            Get
                Return CType(Me(Me.tablelanguages.nameColumn),String)
            End Get
            Set
                Me(Me.tablelanguages.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code() As String
            Get
                Return CType(Me(Me.tablelanguages.codeColumn),String)
            End Get
            Set
                Me(Me.tablelanguages.codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property image() As String
            Get
                Try 
                    Return CType(Me(Me.tablelanguages.imageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'image' in table 'languages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelanguages.imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property directory() As String
            Get
                Try 
                    Return CType(Me(Me.tablelanguages.directoryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'directory' in table 'languages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelanguages.directoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sort_order() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelanguages.sort_orderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sort_order' in table 'languages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelanguages.sort_orderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsimageNull() As Boolean
            Return Me.IsNull(Me.tablelanguages.imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetimageNull()
            Me(Me.tablelanguages.imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdirectoryNull() As Boolean
            Return Me.IsNull(Me.tablelanguages.directoryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdirectoryNull()
            Me(Me.tablelanguages.directoryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issort_orderNull() As Boolean
            Return Me.IsNull(Me.tablelanguages.sort_orderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsort_orderNull()
            Me(Me.tablelanguages.sort_orderColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class orders_status_historyRow
        Inherits Global.System.Data.DataRow
        
        Private tableorders_status_history As orders_status_historyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableorders_status_history = CType(Me.Table,orders_status_historyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_status_history_id() As Integer
            Get
                Return CType(Me(Me.tableorders_status_history.orders_status_history_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders_status_history.orders_status_history_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_id() As Integer
            Get
                Return CType(Me(Me.tableorders_status_history.orders_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders_status_history.orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property new_value() As Integer
            Get
                Return CType(Me(Me.tableorders_status_history.new_valueColumn),Integer)
            End Get
            Set
                Me(Me.tableorders_status_history.new_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property old_value() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableorders_status_history.old_valueColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'old_value' in table 'orders_status_history' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_status_history.old_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableorders_status_history.date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_added' in table 'orders_status_history' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_status_history.date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customer_notified() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableorders_status_history.customer_notifiedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customer_notified' in table 'orders_status_history' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_status_history.customer_notifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isold_valueNull() As Boolean
            Return Me.IsNull(Me.tableorders_status_history.old_valueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setold_valueNull()
            Me(Me.tableorders_status_history.old_valueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_addedNull() As Boolean
            Return Me.IsNull(Me.tableorders_status_history.date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_addedNull()
            Me(Me.tableorders_status_history.date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomer_notifiedNull() As Boolean
            Return Me.IsNull(Me.tableorders_status_history.customer_notifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomer_notifiedNull()
            Me(Me.tableorders_status_history.customer_notifiedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ordersRow
        Inherits Global.System.Data.DataRow
        
        Private tableorders As ordersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableorders = CType(Me.Table,ordersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_id() As Integer
            Get
                Return CType(Me(Me.tableorders.orders_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tableorders.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_name() As String
            Get
                Return CType(Me(Me.tableorders.customers_nameColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_street_address() As String
            Get
                Return CType(Me(Me.tableorders.customers_street_addressColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_street_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_suburb() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.customers_suburbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_suburb' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.customers_suburbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_city() As String
            Get
                Return CType(Me(Me.tableorders.customers_cityColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_postcode() As String
            Get
                Return CType(Me(Me.tableorders.customers_postcodeColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_state() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.customers_stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_state' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.customers_stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_country() As String
            Get
                Return CType(Me(Me.tableorders.customers_countryColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Return CType(Me(Me.tableorders.customers_telephoneColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Return CType(Me(Me.tableorders.customers_email_addressColumn),String)
            End Get
            Set
                Me(Me.tableorders.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_address_format_id() As Integer
            Get
                Return CType(Me(Me.tableorders.customers_address_format_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.customers_address_format_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_name() As String
            Get
                Return CType(Me(Me.tableorders.delivery_nameColumn),String)
            End Get
            Set
                Me(Me.tableorders.delivery_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_street_address() As String
            Get
                Return CType(Me(Me.tableorders.delivery_street_addressColumn),String)
            End Get
            Set
                Me(Me.tableorders.delivery_street_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_suburb() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.delivery_suburbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_suburb' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.delivery_suburbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_city() As String
            Get
                Return CType(Me(Me.tableorders.delivery_cityColumn),String)
            End Get
            Set
                Me(Me.tableorders.delivery_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_postcode() As String
            Get
                Return CType(Me(Me.tableorders.delivery_postcodeColumn),String)
            End Get
            Set
                Me(Me.tableorders.delivery_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_state() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.delivery_stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'delivery_state' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.delivery_stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_country() As String
            Get
                Return CType(Me(Me.tableorders.delivery_countryColumn),String)
            End Get
            Set
                Me(Me.tableorders.delivery_countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property delivery_address_format_id() As Integer
            Get
                Return CType(Me(Me.tableorders.delivery_address_format_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.delivery_address_format_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_method() As String
            Get
                Return CType(Me(Me.tableorders.payment_methodColumn),String)
            End Get
            Set
                Me(Me.tableorders.payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.cc_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_type' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.cc_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.cc_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_owner' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.cc_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.cc_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_number' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.cc_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_expires() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.cc_expiresColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_expires' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.cc_expiresColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableorders.last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_modified' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_purchased() As Date
            Get
                Try 
                    Return CType(Me(Me.tableorders.date_purchasedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_purchased' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.date_purchasedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_status() As Integer
            Get
                Return CType(Me(Me.tableorders.orders_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.orders_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_date_finished() As Date
            Get
                Try 
                    Return CType(Me(Me.tableorders.orders_date_finishedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_date_finished' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.orders_date_finishedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comments() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comments' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property currency() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.currencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'currency' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.currencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property currency_value() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableorders.currency_valueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'currency_value' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.currency_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As Integer
            Get
                Return CType(Me(Me.tableorders.siteColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property secured_mail() As Integer
            Get
                Return CType(Me(Me.tableorders.secured_mailColumn),Integer)
            End Get
            Set
                Me(Me.tableorders.secured_mailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property multishipment_sm() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders.multishipment_smColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'multishipment_sm' in table 'orders' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders.multishipment_smColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_suburbNull() As Boolean
            Return Me.IsNull(Me.tableorders.customers_suburbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_suburbNull()
            Me(Me.tableorders.customers_suburbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_stateNull() As Boolean
            Return Me.IsNull(Me.tableorders.customers_stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_stateNull()
            Me(Me.tableorders.customers_stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_suburbNull() As Boolean
            Return Me.IsNull(Me.tableorders.delivery_suburbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_suburbNull()
            Me(Me.tableorders.delivery_suburbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdelivery_stateNull() As Boolean
            Return Me.IsNull(Me.tableorders.delivery_stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdelivery_stateNull()
            Me(Me.tableorders.delivery_stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_typeNull() As Boolean
            Return Me.IsNull(Me.tableorders.cc_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_typeNull()
            Me(Me.tableorders.cc_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_ownerNull() As Boolean
            Return Me.IsNull(Me.tableorders.cc_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_ownerNull()
            Me(Me.tableorders.cc_ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_numberNull() As Boolean
            Return Me.IsNull(Me.tableorders.cc_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_numberNull()
            Me(Me.tableorders.cc_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_expiresNull() As Boolean
            Return Me.IsNull(Me.tableorders.cc_expiresColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_expiresNull()
            Me(Me.tableorders.cc_expiresColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islast_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableorders.last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlast_modifiedNull()
            Me(Me.tableorders.last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_purchasedNull() As Boolean
            Return Me.IsNull(Me.tableorders.date_purchasedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_purchasedNull()
            Me(Me.tableorders.date_purchasedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_date_finishedNull() As Boolean
            Return Me.IsNull(Me.tableorders.orders_date_finishedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_date_finishedNull()
            Me(Me.tableorders.orders_date_finishedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscommentsNull() As Boolean
            Return Me.IsNull(Me.tableorders.commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcommentsNull()
            Me(Me.tableorders.commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurrencyNull() As Boolean
            Return Me.IsNull(Me.tableorders.currencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurrencyNull()
            Me(Me.tableorders.currencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscurrency_valueNull() As Boolean
            Return Me.IsNull(Me.tableorders.currency_valueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcurrency_valueNull()
            Me(Me.tableorders.currency_valueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismultishipment_smNull() As Boolean
            Return Me.IsNull(Me.tableorders.multishipment_smColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmultishipment_smNull()
            Me(Me.tableorders.multishipment_smColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class orders_productsRow
        Inherits Global.System.Data.DataRow
        
        Private tableorders_products As orders_productsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableorders_products = CType(Me.Table,orders_productsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_products_id() As Integer
            Get
                Return CType(Me(Me.tableorders_products.orders_products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders_products.orders_products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_id() As Integer
            Get
                Return CType(Me(Me.tableorders_products.orders_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders_products.orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableorders_products.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableorders_products.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tableorders_products.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'orders_products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableorders_products.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_name() As String
            Get
                Return CType(Me(Me.tableorders_products.products_nameColumn),String)
            End Get
            Set
                Me(Me.tableorders_products.products_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_price() As Decimal
            Get
                Return CType(Me(Me.tableorders_products.products_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableorders_products.products_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property final_price() As Decimal
            Get
                Return CType(Me(Me.tableorders_products.final_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableorders_products.final_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tax() As Decimal
            Get
                Return CType(Me(Me.tableorders_products.products_taxColumn),Decimal)
            End Get
            Set
                Me(Me.tableorders_products.products_taxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_quantity() As Integer
            Get
                Return CType(Me(Me.tableorders_products.products_quantityColumn),Integer)
            End Get
            Set
                Me(Me.tableorders_products.products_quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvd() As Integer
            Get
                Return CType(Me(Me.tableorders_products.products_dvdColumn),Integer)
            End Get
            Set
                Me(Me.tableorders_products.products_dvdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_products_status() As Integer
            Get
                Return CType(Me(Me.tableorders_products.orders_products_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableorders_products.orders_products_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing() As Integer
            Get
                Return CType(Me(Me.tableorders_products.feesharingColumn),Integer)
            End Get
            Set
                Me(Me.tableorders_products.feesharingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tableorders_products.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tableorders_products.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class productsRow
        Inherits Global.System.Data.DataRow
        
        Private tableproducts As productsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproducts = CType(Me.Table,productsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_quantity() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_quantityColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property imdb_id() As Long
            Get
                Return CType(Me(Me.tableproducts.imdb_idColumn),Long)
            End Get
            Set
                Me(Me.tableproducts.imdb_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_title() As String
            Get
                Return CType(Me(Me.tableproducts.products_titleColumn),String)
            End Get
            Set
                Me(Me.tableproducts.products_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_image() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_imageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_image' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.products_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.products_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_added' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_last_modified' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_available() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_date_availableColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_available' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_date_availableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_weight() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_weightColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_weight' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_weightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_status() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tax_class_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_tax_class_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_tax_class_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property manufacturers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.manufacturers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'manufacturers_id' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.manufacturers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_ordered() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_orderedColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_orderedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_public() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_publicColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_public' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_publicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_runtime() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_runtimeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_runtime' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_runtimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_year() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_yearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_year' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_yearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_countries_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_countries_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_countries_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_picture_format() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_picture_formatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_picture_format' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_picture_formatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_rating() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_ratingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_rating' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_ratingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_directors_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_directors_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_directors_id' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_directors_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_regional_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_regional_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_regional_code' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_regional_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_studio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_studioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_studio' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_studioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_barcode() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_barcodeColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_barcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvd_quantity() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_dvd_quantityColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_dvd_quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_language_fr() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_language_frColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_language_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_undertitle_nl() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_undertitle_nlColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_undertitle_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_the_bags() As Integer
            Get
                Return CType(Me(Me.tableproducts.in_the_bagsColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.in_the_bagsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_the_bags_next() As Integer
            Get
                Return CType(Me(Me.tableproducts.in_the_bags_nextColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.in_the_bags_nextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_cinema_now() As Integer
            Get
                Return CType(Me(Me.tableproducts.in_cinema_nowColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.in_cinema_nowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvdpostchoice() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_dvdpostchoiceColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_dvdpostchoiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_other_language() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_other_languageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_other_language' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_other_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_french() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_frenchColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_frenchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_next() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_nextColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_nextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tiscali_hp_fr() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_tiscali_hp_frColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_tiscali_hp_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tiscali_hp_nl() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_tiscali_hp_nlColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_tiscali_hp_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_number() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_numberColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_aboprocess_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_aboprocess_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_aboprocess_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_aboprocess_number() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_aboprocess_numberColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_aboprocess_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cinebel_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.cinebel_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cinebel_id' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.cinebel_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cinebel_trailer() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.cinebel_trailerColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cinebel_trailer' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.cinebel_trailerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing() As Integer
            Get
                Return CType(Me(Me.tableproducts.feesharingColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.feesharingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_end() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.feesharing_endColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_end' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.feesharing_endColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_upfront_fee() As Decimal
            Get
                Return CType(Me(Me.tableproducts.feesharing_upfront_feeColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.feesharing_upfront_feeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_upfront_fee_recoverable() As Integer
            Get
                Return CType(Me(Me.tableproducts.feesharing_upfront_fee_recoverableColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.feesharing_upfront_fee_recoverableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_turn_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.feesharing_turn_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.feesharing_turn_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_turn_price_after3month() As Decimal
            Get
                Return CType(Me(Me.tableproducts.feesharing_turn_price_after3monthColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.feesharing_turn_price_after3monthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_buy_option_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.feesharing_buy_option_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.feesharing_buy_option_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_expected_nbr_turns() As Integer
            Get
                Return CType(Me(Me.tableproducts.feesharing_expected_nbr_turnsColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.feesharing_expected_nbr_turnsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_desire() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_desireColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_desireColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_desire_weighted() As Decimal
            Get
                Return CType(Me(Me.tableproducts.products_desire_weightedColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.products_desire_weightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_availability() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_availabilityColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_availabilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quantity_to_sale() As Integer
            Get
                Return CType(Me(Me.tableproducts.quantity_to_saleColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.quantity_to_saleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_sale_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.products_sale_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.products_sale_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_sale_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_sale_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_sale_date' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_sale_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tableproducts.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_imageNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_imageNull()
            Me(Me.tableproducts.products_imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_addedNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_addedNull()
            Me(Me.tableproducts.products_date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_last_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_last_modifiedNull()
            Me(Me.tableproducts.products_last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_availableNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_date_availableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_availableNull()
            Me(Me.tableproducts.products_date_availableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_weightNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_weightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_weightNull()
            Me(Me.tableproducts.products_weightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismanufacturers_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts.manufacturers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmanufacturers_idNull()
            Me(Me.tableproducts.manufacturers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_publicNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_publicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_publicNull()
            Me(Me.tableproducts.products_publicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_runtimeNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_runtimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_runtimeNull()
            Me(Me.tableproducts.products_runtimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_yearNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_yearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_yearNull()
            Me(Me.tableproducts.products_yearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_picture_formatNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_picture_formatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_picture_formatNull()
            Me(Me.tableproducts.products_picture_formatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_ratingNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_ratingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_ratingNull()
            Me(Me.tableproducts.products_ratingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_directors_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_directors_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_directors_idNull()
            Me(Me.tableproducts.products_directors_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_regional_codeNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_regional_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_regional_codeNull()
            Me(Me.tableproducts.products_regional_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_studioNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_studioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_studioNull()
            Me(Me.tableproducts.products_studioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_other_languageNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_other_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_other_languageNull()
            Me(Me.tableproducts.products_other_languageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscinebel_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts.cinebel_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcinebel_idNull()
            Me(Me.tableproducts.cinebel_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscinebel_trailerNull() As Boolean
            Return Me.IsNull(Me.tableproducts.cinebel_trailerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcinebel_trailerNull()
            Me(Me.tableproducts.cinebel_trailerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_endNull() As Boolean
            Return Me.IsNull(Me.tableproducts.feesharing_endColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_endNull()
            Me(Me.tableproducts.feesharing_endColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_sale_dateNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_sale_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_sale_dateNull()
            Me(Me.tableproducts.products_sale_dateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class products_adultRow
        Inherits Global.System.Data.DataRow
        
        Private tableproducts_adult As products_adultDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproducts_adult = CType(Me.Table,products_adultDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_quantity() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_quantityColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'products_adult' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_image() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_imageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_image' in table 'products_adult' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts_adult.products_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts_adult.products_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_added' in table 'products_adult' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_last_modified' in table 'products_adult' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_available() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_date_availableColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_available' in table 'products_adult' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_date_availableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_weight() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_weightColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_weight' in table 'products_adult' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_weightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_status() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tax_class_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_tax_class_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_tax_class_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property manufacturers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.manufacturers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'manufacturers_id' in table 'products_adult' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.manufacturers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property distributors_adult_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.distributors_adult_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.distributors_adult_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_ordered() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_orderedColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_orderedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_public() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_publicColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_public' in table 'products_adult' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_publicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_runtime() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_runtimeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_runtime' in table 'products_adult' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_runtimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_year() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_yearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_year' in table 'products_adult' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_yearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_picture_format() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_picture_formatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_picture_format' in table 'products_adult' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_picture_formatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_rating() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_ratingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_rating' in table 'products_adult' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_ratingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_directors_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_directors_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_directors_id' in table 'products_adult' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_directors_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_regional_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_regional_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_regional_code' in table 'products_adult' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_regional_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_studio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_studioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_studio' in table 'products_adult' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_studioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_barcode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_barcodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_barcode' in table 'products_adult' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_barcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvd_quantity() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_dvd_quantityColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_dvd_quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_language_fr() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_language_frColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_language_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_undertitle_nl() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_undertitle_nlColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_undertitle_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_the_bags() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.in_the_bagsColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.in_the_bagsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvdpostchoice() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_dvdpostchoiceColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_dvdpostchoiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_other_language() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_adult.products_other_languageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_other_language' in table 'products_adult' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_adult.products_other_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_french() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_frenchColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_frenchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_next() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_nextColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_nextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_desire() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_desireColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_desireColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_desire_weighted() As Decimal
            Get
                Return CType(Me(Me.tableproducts_adult.products_desire_weightedColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts_adult.products_desire_weightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_availability() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.products_availabilityColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.products_availabilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quantity_to_sale() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.quantity_to_saleColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.quantity_to_saleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_sale_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts_adult.products_sale_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts_adult.products_sale_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quantity_new_to_sale() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.quantity_new_to_saleColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.quantity_new_to_saleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_new_sale_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts_adult.products_new_sale_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts_adult.products_new_sale_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property only_for_sale() As Integer
            Get
                Return CType(Me(Me.tableproducts_adult.only_for_saleColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_adult.only_for_saleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tableproducts_adult.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_imageNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_imageNull()
            Me(Me.tableproducts_adult.products_imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_addedNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_addedNull()
            Me(Me.tableproducts_adult.products_date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_last_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_last_modifiedNull()
            Me(Me.tableproducts_adult.products_last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_availableNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_date_availableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_availableNull()
            Me(Me.tableproducts_adult.products_date_availableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_weightNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_weightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_weightNull()
            Me(Me.tableproducts_adult.products_weightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismanufacturers_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.manufacturers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmanufacturers_idNull()
            Me(Me.tableproducts_adult.manufacturers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_publicNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_publicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_publicNull()
            Me(Me.tableproducts_adult.products_publicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_runtimeNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_runtimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_runtimeNull()
            Me(Me.tableproducts_adult.products_runtimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_yearNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_yearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_yearNull()
            Me(Me.tableproducts_adult.products_yearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_picture_formatNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_picture_formatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_picture_formatNull()
            Me(Me.tableproducts_adult.products_picture_formatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_ratingNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_ratingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_ratingNull()
            Me(Me.tableproducts_adult.products_ratingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_directors_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_directors_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_directors_idNull()
            Me(Me.tableproducts_adult.products_directors_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_regional_codeNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_regional_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_regional_codeNull()
            Me(Me.tableproducts_adult.products_regional_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_studioNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_studioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_studioNull()
            Me(Me.tableproducts_adult.products_studioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_barcodeNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_barcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_barcodeNull()
            Me(Me.tableproducts_adult.products_barcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_other_languageNull() As Boolean
            Return Me.IsNull(Me.tableproducts_adult.products_other_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_other_languageNull()
            Me(Me.tableproducts_adult.products_other_languageColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class products_descriptionRow
        Inherits Global.System.Data.DataRow
        
        Private tableproducts_description As products_descriptionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproducts_description = CType(Me.Table,products_descriptionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_description.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_description.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property language_id() As Integer
            Get
                Return CType(Me(Me.tableproducts_description.language_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts_description.language_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_name() As String
            Get
                Return CType(Me(Me.tableproducts_description.products_nameColumn),String)
            End Get
            Set
                Me(Me.tableproducts_description.products_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_description() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts_description.products_descriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_description' in table 'products_description' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_description.products_descriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_bonus() As String
            Get
                Return CType(Me(Me.tableproducts_description.products_bonusColumn),String)
            End Get
            Set
                Me(Me.tableproducts_description.products_bonusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_url() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts_description.products_urlColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_url' in table 'products_description' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_description.products_urlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_awards() As String
            Get
                Return CType(Me(Me.tableproducts_description.products_awardsColumn),String)
            End Get
            Set
                Me(Me.tableproducts_description.products_awardsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_viewed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_description.products_viewedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_viewed' in table 'products_description' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_description.products_viewedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_image_big() As String
            Get
                Return CType(Me(Me.tableproducts_description.products_image_bigColumn),String)
            End Get
            Set
                Me(Me.tableproducts_description.products_image_bigColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_descriptionNull() As Boolean
            Return Me.IsNull(Me.tableproducts_description.products_descriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_descriptionNull()
            Me(Me.tableproducts_description.products_descriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_urlNull() As Boolean
            Return Me.IsNull(Me.tableproducts_description.products_urlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_urlNull()
            Me(Me.tableproducts_description.products_urlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_viewedNull() As Boolean
            Return Me.IsNull(Me.tableproducts_description.products_viewedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_viewedNull()
            Me(Me.tableproducts_description.products_viewedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class directorsRow
        Inherits Global.System.Data.DataRow
        
        Private tabledirectors As directorsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledirectors = CType(Me.Table,directorsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property directors_id() As Integer
            Get
                Return CType(Me(Me.tabledirectors.directors_idColumn),Integer)
            End Get
            Set
                Me(Me.tabledirectors.directors_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property directors_name() As String
            Get
                Try 
                    Return CType(Me(Me.tabledirectors.directors_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'directors_name' in table 'directors' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledirectors.directors_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property directors_image() As String
            Get
                Try 
                    Return CType(Me(Me.tabledirectors.directors_imageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'directors_image' in table 'directors' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledirectors.directors_imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property directors_dateofbirth() As String
            Get
                Try 
                    Return CType(Me(Me.tabledirectors.directors_dateofbirthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'directors_dateofbirth' in table 'directors' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledirectors.directors_dateofbirthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property directors_description() As String
            Get
                Try 
                    Return CType(Me(Me.tabledirectors.directors_descriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'directors_description' in table 'directors' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledirectors.directors_descriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property directors_awards() As String
            Get
                Try 
                    Return CType(Me(Me.tabledirectors.directors_awardsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'directors_awards' in table 'directors' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledirectors.directors_awardsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property top_directors() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledirectors.top_directorsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'top_directors' in table 'directors' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledirectors.top_directorsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdirectors_nameNull() As Boolean
            Return Me.IsNull(Me.tabledirectors.directors_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdirectors_nameNull()
            Me(Me.tabledirectors.directors_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdirectors_imageNull() As Boolean
            Return Me.IsNull(Me.tabledirectors.directors_imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdirectors_imageNull()
            Me(Me.tabledirectors.directors_imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdirectors_dateofbirthNull() As Boolean
            Return Me.IsNull(Me.tabledirectors.directors_dateofbirthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdirectors_dateofbirthNull()
            Me(Me.tabledirectors.directors_dateofbirthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdirectors_descriptionNull() As Boolean
            Return Me.IsNull(Me.tabledirectors.directors_descriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdirectors_descriptionNull()
            Me(Me.tabledirectors.directors_descriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdirectors_awardsNull() As Boolean
            Return Me.IsNull(Me.tabledirectors.directors_awardsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdirectors_awardsNull()
            Me(Me.tabledirectors.directors_awardsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istop_directorsNull() As Boolean
            Return Me.IsNull(Me.tabledirectors.top_directorsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settop_directorsNull()
            Me(Me.tabledirectors.top_directorsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class products_actors_view1Row
        Inherits Global.System.Data.DataRow
        
        Private tableproducts_actors_view1 As products_actors_view1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproducts_actors_view1 = CType(Me.Table,products_actors_view1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_actors_view1.products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_id' in table 'products_actors_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_actors_view1.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property actors_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts_actors_view1.actors_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'actors_id' in table 'products_actors_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_actors_view1.actors_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property actors_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts_actors_view1.actors_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'actors_name' in table 'products_actors_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts_actors_view1.actors_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts_actors_view1.products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_idNull()
            Me(Me.tableproducts_actors_view1.products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactors_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts_actors_view1.actors_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactors_idNull()
            Me(Me.tableproducts_actors_view1.actors_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactors_nameNull() As Boolean
            Return Me.IsNull(Me.tableproducts_actors_view1.actors_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactors_nameNull()
            Me(Me.tableproducts_actors_view1.actors_nameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class prod_instock_image_view1Row
        Inherits Global.System.Data.DataRow
        
        Private tableprod_instock_image_view1 As prod_instock_image_view1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableprod_instock_image_view1 = CType(Me.Table,prod_instock_image_view1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableprod_instock_image_view1.products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_id' in table 'prod_instock_image_view1' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableprod_instock_image_view1.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cnt_dvd() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableprod_instock_image_view1.cnt_dvdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cnt_dvd' in table 'prod_instock_image_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableprod_instock_image_view1.cnt_dvdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property image_fr() As String
            Get
                Try 
                    Return CType(Me(Me.tableprod_instock_image_view1.image_frColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'image_fr' in table 'prod_instock_image_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableprod_instock_image_view1.image_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property image_nl() As String
            Get
                Try 
                    Return CType(Me(Me.tableprod_instock_image_view1.image_nlColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'image_nl' in table 'prod_instock_image_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableprod_instock_image_view1.image_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property image_en() As String
            Get
                Try 
                    Return CType(Me(Me.tableprod_instock_image_view1.image_enColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'image_en' in table 'prod_instock_image_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableprod_instock_image_view1.image_enColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name_fr() As String
            Get
                Try 
                    Return CType(Me(Me.tableprod_instock_image_view1.name_frColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'name_fr' in table 'prod_instock_image_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableprod_instock_image_view1.name_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name_nl() As String
            Get
                Try 
                    Return CType(Me(Me.tableprod_instock_image_view1.name_nlColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'name_nl' in table 'prod_instock_image_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableprod_instock_image_view1.name_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name_en() As String
            Get
                Try 
                    Return CType(Me(Me.tableprod_instock_image_view1.name_enColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'name_en' in table 'prod_instock_image_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableprod_instock_image_view1.name_enColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_idNull() As Boolean
            Return Me.IsNull(Me.tableprod_instock_image_view1.products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_idNull()
            Me(Me.tableprod_instock_image_view1.products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscnt_dvdNull() As Boolean
            Return Me.IsNull(Me.tableprod_instock_image_view1.cnt_dvdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcnt_dvdNull()
            Me(Me.tableprod_instock_image_view1.cnt_dvdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isimage_frNull() As Boolean
            Return Me.IsNull(Me.tableprod_instock_image_view1.image_frColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setimage_frNull()
            Me(Me.tableprod_instock_image_view1.image_frColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isimage_nlNull() As Boolean
            Return Me.IsNull(Me.tableprod_instock_image_view1.image_nlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setimage_nlNull()
            Me(Me.tableprod_instock_image_view1.image_nlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isimage_enNull() As Boolean
            Return Me.IsNull(Me.tableprod_instock_image_view1.image_enColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setimage_enNull()
            Me(Me.tableprod_instock_image_view1.image_enColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isname_frNull() As Boolean
            Return Me.IsNull(Me.tableprod_instock_image_view1.name_frColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setname_frNull()
            Me(Me.tableprod_instock_image_view1.name_frColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isname_nlNull() As Boolean
            Return Me.IsNull(Me.tableprod_instock_image_view1.name_nlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setname_nlNull()
            Me(Me.tableprod_instock_image_view1.name_nlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isname_enNull() As Boolean
            Return Me.IsNull(Me.tableprod_instock_image_view1.name_enColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setname_enNull()
            Me(Me.tableprod_instock_image_view1.name_enColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class customers_view2Row
        Inherits Global.System.Data.DataRow
        
        Private tablecustomers_view2 As customers_view2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustomers_view2 = CType(Me.Table,customers_view2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_gender() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_genderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_gender' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_firstname' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_lastname' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_email_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_email_address' in table 'customers_view2' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_aboColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_type() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_abo_typeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_type' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_dob' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_abo_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_validityto' in table 'customers_view2' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_abo_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ship_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.ship_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ship_firstname' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.ship_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ship_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.ship_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ship_lastname' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.ship_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ship_address() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.ship_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ship_address' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.ship_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ship_postcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.ship_postcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ship_postcode' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.ship_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ship_city() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.ship_cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ship_city' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.ship_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ship_country() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.ship_countryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ship_country' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.ship_countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_telephoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_telephone' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone_evening() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_telephone_eveningColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_telephone_evening' in table 'customers_view2' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_telephone_eveningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletter() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_newsletterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletter' in table 'customers_view2' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_newsletterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_next_abo_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_next_abo_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_next_abo_type' in table 'customers_view2' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_next_abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletterpartner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_newsletterpartnerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletterpartner' in table 'customers_view2' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_newsletterpartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_norm() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_abo_dvd_normColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_norm' in table 'customers_view2' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_abo_dvd_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_adult() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_abo_dvd_adultColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_adult' in table 'customers_view2' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_abo_dvd_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_norm() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_abo_dvd_home_normColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_home_norm' in table 'customers_view2' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_abo_dvd_home_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_adult() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_abo_dvd_home_adultColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_home_adult' in table 'customers_view2' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_abo_dvd_home_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_credit() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_abo_dvd_creditColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_dvd_credit' in table 'customers_view2' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_abo_dvd_creditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_multishipment() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_abo_multishipmentColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_multishipment' in table 'customers_view2' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_abo_multishipmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_payment_method() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.customers_abo_payment_methodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_payment_method' in table 'customers_view2' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.customers_abo_payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property account_created() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.account_createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'account_created' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.account_createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lang_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.lang_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lang_id' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.lang_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lang_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.lang_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lang_name' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.lang_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_lastrented() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.date_lastrentedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_lastrented' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.date_lastrentedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_abo_action_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.last_abo_action_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_abo_action_id' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.last_abo_action_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_abo_action_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.last_abo_action_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_abo_action_name' in table 'customers_view2' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.last_abo_action_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_abo_action_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.last_abo_action_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_abo_action_date' in table 'customers_view2' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.last_abo_action_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nbr_dvd_wishlist() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.nbr_dvd_wishlistColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nbr_dvd_wishlist' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.nbr_dvd_wishlistColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property before_last_action() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_view2.before_last_actionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'before_last_action' in table 'customers_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_view2.before_last_actionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tablecustomers_view2.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_genderNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_genderNull()
            Me(Me.tablecustomers_view2.customers_genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_firstnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_firstnameNull()
            Me(Me.tablecustomers_view2.customers_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_lastnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_lastnameNull()
            Me(Me.tablecustomers_view2.customers_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_email_addressNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_email_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_email_addressNull()
            Me(Me.tablecustomers_view2.customers_email_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_aboNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_aboColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_aboNull()
            Me(Me.tablecustomers_view2.customers_aboColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_abo_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_typeNull()
            Me(Me.tablecustomers_view2.customers_abo_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_dobNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_dobNull()
            Me(Me.tablecustomers_view2.customers_dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_validitytoNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_abo_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_validitytoNull()
            Me(Me.tablecustomers_view2.customers_abo_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isship_firstnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.ship_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setship_firstnameNull()
            Me(Me.tablecustomers_view2.ship_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isship_lastnameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.ship_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setship_lastnameNull()
            Me(Me.tablecustomers_view2.ship_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isship_addressNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.ship_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setship_addressNull()
            Me(Me.tablecustomers_view2.ship_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isship_postcodeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.ship_postcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setship_postcodeNull()
            Me(Me.tablecustomers_view2.ship_postcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isship_cityNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.ship_cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setship_cityNull()
            Me(Me.tablecustomers_view2.ship_cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isship_countryNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.ship_countryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setship_countryNull()
            Me(Me.tablecustomers_view2.ship_countryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_telephoneNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_telephoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_telephoneNull()
            Me(Me.tablecustomers_view2.customers_telephoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_telephone_eveningNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_telephone_eveningColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_telephone_eveningNull()
            Me(Me.tablecustomers_view2.customers_telephone_eveningColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_newsletterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterNull()
            Me(Me.tablecustomers_view2.customers_newsletterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_next_abo_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_next_abo_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_next_abo_typeNull()
            Me(Me.tablecustomers_view2.customers_next_abo_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterpartnerNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_newsletterpartnerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterpartnerNull()
            Me(Me.tablecustomers_view2.customers_newsletterpartnerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_normNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_abo_dvd_normColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_normNull()
            Me(Me.tablecustomers_view2.customers_abo_dvd_normColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_adultNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_abo_dvd_adultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_adultNull()
            Me(Me.tablecustomers_view2.customers_abo_dvd_adultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_home_normNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_abo_dvd_home_normColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_home_normNull()
            Me(Me.tablecustomers_view2.customers_abo_dvd_home_normColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_home_adultNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_abo_dvd_home_adultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_home_adultNull()
            Me(Me.tablecustomers_view2.customers_abo_dvd_home_adultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_dvd_creditNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_abo_dvd_creditColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_dvd_creditNull()
            Me(Me.tablecustomers_view2.customers_abo_dvd_creditColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_multishipmentNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_abo_multishipmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_multishipmentNull()
            Me(Me.tablecustomers_view2.customers_abo_multishipmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_payment_methodNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.customers_abo_payment_methodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_payment_methodNull()
            Me(Me.tablecustomers_view2.customers_abo_payment_methodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isaccount_createdNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.account_createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setaccount_createdNull()
            Me(Me.tablecustomers_view2.account_createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islang_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.lang_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlang_idNull()
            Me(Me.tablecustomers_view2.lang_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islang_nameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.lang_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlang_nameNull()
            Me(Me.tablecustomers_view2.lang_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_lastrentedNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.date_lastrentedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_lastrentedNull()
            Me(Me.tablecustomers_view2.date_lastrentedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islast_abo_action_idNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.last_abo_action_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlast_abo_action_idNull()
            Me(Me.tablecustomers_view2.last_abo_action_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islast_abo_action_nameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.last_abo_action_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlast_abo_action_nameNull()
            Me(Me.tablecustomers_view2.last_abo_action_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islast_abo_action_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.last_abo_action_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlast_abo_action_dateNull()
            Me(Me.tablecustomers_view2.last_abo_action_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnbr_dvd_wishlistNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.nbr_dvd_wishlistColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnbr_dvd_wishlistNull()
            Me(Me.tablecustomers_view2.nbr_dvd_wishlistColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbefore_last_actionNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_view2.before_last_actionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbefore_last_actionNull()
            Me(Me.tablecustomers_view2.before_last_actionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class aboRow
        Inherits Global.System.Data.DataRow
        
        Private tableabo As aboDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableabo = CType(Me.Table,aboDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_id() As Integer
            Get
                Return CType(Me(Me.tableabo.abo_idColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.abo_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customerid() As Integer
            Get
                Return CType(Me(Me.tableabo.customeridColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.customeridColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Action() As Integer
            Get
                Return CType(Me(Me.tableabo.ActionColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.ActionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo.code_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code_id' in table 'abo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo.code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo.DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date' in table 'abo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo.DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property product_id() As Integer
            Get
                Return CType(Me(Me.tableabo.product_idColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.product_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_method() As String
            Get
                Return CType(Me(Me.tableabo.payment_methodColumn),String)
            End Get
            Set
                Me(Me.tableabo.payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property privilege_notified() As Integer
            Get
                Return CType(Me(Me.tableabo.privilege_notifiedColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.privilege_notifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Return CType(Me(Me.tableabo.commentColumn),String)
            End Get
            Set
                Me(Me.tableabo.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As Integer
            Get
                Return CType(Me(Me.tableabo.siteColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscode_idNull() As Boolean
            Return Me.IsNull(Me.tableabo.code_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcode_idNull()
            Me(Me.tableabo.code_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_DateNull() As Boolean
            Return Me.IsNull(Me.tableabo.DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_DateNull()
            Me(Me.tableabo.DateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class abo_actionRow
        Inherits Global.System.Data.DataRow
        
        Private tableabo_action As abo_actionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableabo_action = CType(Me.Table,abo_actionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableabo_action.idColumn),Integer)
            End Get
            Set
                Me(Me.tableabo_action.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name() As String
            Get
                Return CType(Me(Me.tableabo_action.nameColumn),String)
            End Get
            Set
                Me(Me.tableabo_action.nameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class customers_mikeRow
        Inherits Global.System.Data.DataRow
        
        Private tablecustomers_mike As customers_mikeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustomers_mike = CType(Me.Table,customers_mikeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_gender() As String
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_genderColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_firstnameColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_lastnameColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.customers_dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_dob' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_email_addressColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_default_address_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_default_address_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_default_address_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_telephoneColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone_evening() As String
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_telephone_eveningColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_telephone_eveningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_fax() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.customers_faxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_fax' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_password() As String
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_passwordColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletter() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.customers_newsletterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletter' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_newsletterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletterpartner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.customers_newsletterpartnerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletterpartner' in table 'customers_mike' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_newsletterpartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_privilegeColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_privilegeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_privilege_balance() As Decimal
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_privilege_balanceColumn),Decimal)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_privilege_balanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_garantie() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_garantieColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_garantieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsoring_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.sponsoring_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsoring_code' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.sponsoring_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sponsored_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.sponsored_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sponsored_code' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.sponsored_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_aboColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_suspended() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_suspendedColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_suspendedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_type() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_typeColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property flagminiat1995() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.flagminiat1995Column),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.flagminiat1995Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_method() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_methodColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_norm() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_dvd_normColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_dvd_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_adult() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_dvd_adultColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_dvd_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_norm() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_dvd_home_normColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_dvd_home_normColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_home_adult() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_dvd_home_adultColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_dvd_home_adultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property throttling() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.throttlingColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.throttlingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.customers_abo_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_validityto' in table 'customers_mike' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_rank() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_rankColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_rankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_start_rentthismonth() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_start_rentthismonthColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_start_rentthismonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_dvd_credit() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_dvd_creditColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_dvd_creditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_multishipment() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_multishipmentColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_multishipmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_discount_recurring_to_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.customers_abo_discount_recurring_to_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_discount_recurring_to_date' in table 'custome"& _ 
                            "rs_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_discount_recurring_to_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abotested() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.abotestedColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.abotestedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_status() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_statusColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_payment_method() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_abo_payment_methodColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_abo_payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_status() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.domiciliation_statusColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.domiciliation_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_debiter_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.domiciliation_debiter_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_debiter_name' in table 'customers_mike' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.domiciliation_debiter_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.domiciliation_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_number' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.domiciliation_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_account_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.domiciliation_account_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_account_number' in table 'customers_mike' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.domiciliation_account_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property adult_pwd() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.adult_pwdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adult_pwd' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.adult_pwdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.ogone_card_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_type' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.ogone_card_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.ogone_card_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_no' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.ogone_card_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_exp_date() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.ogone_exp_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_exp_date' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.ogone_exp_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.ogone_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_owner' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.ogone_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_cc_expiration_status() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.ogone_cc_expiration_statusColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.ogone_cc_expiration_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property offline_payment_status() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.offline_payment_statusColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.offline_payment_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.commentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comment' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vip() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.vipColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.vipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property black_listed() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.black_listedColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.black_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property red_listed() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.red_listedColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.red_listedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sm_eligible() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.sm_eligibleColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.sm_eligibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_enquiry_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.customers_enquiry_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.customers_enquiry_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_first_delivery() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.date_first_deliveryColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_first_delivery' in table 'customers_mike' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.date_first_deliveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_adult_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.mail_wl_adult_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_adult_not_sufficient' in table 'customers_mike' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.mail_wl_adult_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_norm_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_mike.mail_wl_norm_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_norm_not_sufficient' in table 'customers_mike' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_mike.mail_wl_norm_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mgm_points() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.mgm_pointsColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.mgm_pointsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wishlist_kind() As Integer
            Get
                Return CType(Me(Me.tablecustomers_mike.wishlist_kindColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_mike.wishlist_kindColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_dobNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.customers_dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_dobNull()
            Me(Me.tablecustomers_mike.customers_dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_faxNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.customers_faxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_faxNull()
            Me(Me.tablecustomers_mike.customers_faxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.customers_newsletterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterNull()
            Me(Me.tablecustomers_mike.customers_newsletterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterpartnerNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.customers_newsletterpartnerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterpartnerNull()
            Me(Me.tablecustomers_mike.customers_newsletterpartnerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsoring_codeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.sponsoring_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsoring_codeNull()
            Me(Me.tablecustomers_mike.sponsoring_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issponsored_codeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.sponsored_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsponsored_codeNull()
            Me(Me.tablecustomers_mike.sponsored_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_validitytoNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.customers_abo_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_validitytoNull()
            Me(Me.tablecustomers_mike.customers_abo_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_discount_recurring_to_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.customers_abo_discount_recurring_to_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_discount_recurring_to_dateNull()
            Me(Me.tablecustomers_mike.customers_abo_discount_recurring_to_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_debiter_nameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.domiciliation_debiter_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_debiter_nameNull()
            Me(Me.tablecustomers_mike.domiciliation_debiter_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_numberNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.domiciliation_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_numberNull()
            Me(Me.tablecustomers_mike.domiciliation_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_account_numberNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.domiciliation_account_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_account_numberNull()
            Me(Me.tablecustomers_mike.domiciliation_account_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadult_pwdNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.adult_pwdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadult_pwdNull()
            Me(Me.tablecustomers_mike.adult_pwdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.ogone_card_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_typeNull()
            Me(Me.tablecustomers_mike.ogone_card_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_noNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.ogone_card_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_noNull()
            Me(Me.tablecustomers_mike.ogone_card_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_exp_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.ogone_exp_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_exp_dateNull()
            Me(Me.tablecustomers_mike.ogone_exp_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_ownerNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.ogone_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_ownerNull()
            Me(Me.tablecustomers_mike.ogone_ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscommentNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.commentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcommentNull()
            Me(Me.tablecustomers_mike.commentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_first_deliveryNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.date_first_deliveryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_first_deliveryNull()
            Me(Me.tablecustomers_mike.date_first_deliveryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_adult_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.mail_wl_adult_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_adult_not_sufficientNull()
            Me(Me.tablecustomers_mike.mail_wl_adult_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_norm_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_mike.mail_wl_norm_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_norm_not_sufficientNull()
            Me(Me.tablecustomers_mike.mail_wl_norm_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class customers_nl_tempRow
        Inherits Global.System.Data.DataRow
        
        Private tablecustomers_nl_temp As customers_nl_tempDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustomers_nl_temp = CType(Me.Table,customers_nl_tempDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers_nl_temp.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_nl_temp.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Return CType(Me(Me.tablecustomers_nl_temp.customers_firstnameColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_nl_temp.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Return CType(Me(Me.tablecustomers_nl_temp.customers_lastnameColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_nl_temp.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Return CType(Me(Me.tablecustomers_nl_temp.customers_email_addressColumn),String)
            End Get
            Set
                Me(Me.tablecustomers_nl_temp.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_nl_temp.discount_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discount_code' in table 'customers_nl_temp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_nl_temp.discount_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_language() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_nl_temp.customers_languageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_language' in table 'customers_nl_temp' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_nl_temp.customers_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_codeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_nl_temp.discount_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_codeNull()
            Me(Me.tablecustomers_nl_temp.discount_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_languageNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_nl_temp.customers_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_languageNull()
            Me(Me.tablecustomers_nl_temp.customers_languageColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class siteRow
        Inherits Global.System.Data.DataRow
        
        Private tablesite As siteDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablesite = CType(Me.Table,siteDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablesite.site_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'site_id' in table 'site' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesite.site_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site_name() As String
            Get
                Return CType(Me(Me.tablesite.site_nameColumn),String)
            End Get
            Set
                Me(Me.tablesite.site_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site_link() As String
            Get
                Try 
                    Return CType(Me(Me.tablesite.site_linkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'site_link' in table 'site' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesite.site_linkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property logo() As String
            Get
                Try 
                    Return CType(Me(Me.tablesite.logoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'logo' in table 'site' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablesite.logoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issite_idNull() As Boolean
            Return Me.IsNull(Me.tablesite.site_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsite_idNull()
            Me(Me.tablesite.site_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issite_linkNull() As Boolean
            Return Me.IsNull(Me.tablesite.site_linkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsite_linkNull()
            Me(Me.tablesite.site_linkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslogoNull() As Boolean
            Return Me.IsNull(Me.tablesite.logoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlogoNull()
            Me(Me.tablesite.logoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class propsectsRow
        Inherits Global.System.Data.DataRow
        
        Private tablepropsects As propsectsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablepropsects = CType(Me.Table,propsectsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepropsects.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'propsects' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepropsects.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tablepropsects.customers_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_firstname' in table 'propsects' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepropsects.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tablepropsects.customers_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_lastname' in table 'propsects' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepropsects.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_email_address() As String
            Get
                Return CType(Me(Me.tablepropsects.customers_email_addressColumn),String)
            End Get
            Set
                Me(Me.tablepropsects.customers_email_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_language() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepropsects.customers_languageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_language' in table 'propsects' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepropsects.customers_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As String
            Get
                Try 
                    Return CType(Me(Me.tablepropsects.siteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'site' in table 'propsects' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepropsects.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EntityID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepropsects.EntityIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EntityID' in table 'propsects' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepropsects.EntityIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property selected_for_email() As String
            Get
                Try 
                    Return CType(Me(Me.tablepropsects.selected_for_emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'selected_for_email' in table 'propsects' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepropsects.selected_for_emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property unsubscribe() As String
            Get
                Try 
                    Return CType(Me(Me.tablepropsects.unsubscribeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unsubscribe' in table 'propsects' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepropsects.unsubscribeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property is_email_valid() As String
            Get
                Try 
                    Return CType(Me(Me.tablepropsects.is_email_validColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'is_email_valid' in table 'propsects' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepropsects.is_email_validColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_email_sended() As String
            Get
                Try 
                    Return CType(Me(Me.tablepropsects.last_email_sendedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_email_sended' in table 'propsects' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepropsects.last_email_sendedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tablepropsects.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tablepropsects.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_firstnameNull() As Boolean
            Return Me.IsNull(Me.tablepropsects.customers_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_firstnameNull()
            Me(Me.tablepropsects.customers_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_lastnameNull() As Boolean
            Return Me.IsNull(Me.tablepropsects.customers_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_lastnameNull()
            Me(Me.tablepropsects.customers_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_languageNull() As Boolean
            Return Me.IsNull(Me.tablepropsects.customers_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_languageNull()
            Me(Me.tablepropsects.customers_languageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssiteNull() As Boolean
            Return Me.IsNull(Me.tablepropsects.siteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsiteNull()
            Me(Me.tablepropsects.siteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEntityIDNull() As Boolean
            Return Me.IsNull(Me.tablepropsects.EntityIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEntityIDNull()
            Me(Me.tablepropsects.EntityIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isselected_for_emailNull() As Boolean
            Return Me.IsNull(Me.tablepropsects.selected_for_emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setselected_for_emailNull()
            Me(Me.tablepropsects.selected_for_emailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsunsubscribeNull() As Boolean
            Return Me.IsNull(Me.tablepropsects.unsubscribeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetunsubscribeNull()
            Me(Me.tablepropsects.unsubscribeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isis_email_validNull() As Boolean
            Return Me.IsNull(Me.tablepropsects.is_email_validColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setis_email_validNull()
            Me(Me.tablepropsects.is_email_validColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islast_email_sendedNull() As Boolean
            Return Me.IsNull(Me.tablepropsects.last_email_sendedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlast_email_sendedNull()
            Me(Me.tablepropsects.last_email_sendedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class customers_abo_payment_methodRow
        Inherits Global.System.Data.DataRow
        
        Private tablecustomers_abo_payment_method As customers_abo_payment_methodDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustomers_abo_payment_method = CType(Me.Table,customers_abo_payment_methodDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_payment_method_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers_abo_payment_method.customers_abo_payment_method_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers_abo_payment_method.customers_abo_payment_method_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_payment_method_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers_abo_payment_method.customers_abo_payment_method_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_payment_method_name' in table 'customers_abo_"& _ 
                            "payment_method' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers_abo_payment_method.customers_abo_payment_method_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_payment_method_nameNull() As Boolean
            Return Me.IsNull(Me.tablecustomers_abo_payment_method.customers_abo_payment_method_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_payment_method_nameNull()
            Me(Me.tablecustomers_abo_payment_method.customers_abo_payment_method_nameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class phone_requestRow
        Inherits Global.System.Data.DataRow
        
        Private tablephone_request As phone_requestDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablephone_request = CType(Me.Table,phone_requestDataTable)
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class weekdaysRow
        Inherits Global.System.Data.DataRow
        
        Private tableweekdays As weekdaysDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableweekdays = CType(Me.Table,weekdaysDataTable)
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class phone_request_hoursRow
        Inherits Global.System.Data.DataRow
        
        Private tablephone_request_hours As phone_request_hoursDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablephone_request_hours = CType(Me.Table,phone_request_hoursDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codevalue() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablephone_request_hours.codevalueColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codevalue' in table 'phone_request_hours' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablephone_request_hours.codevalueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codedesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablephone_request_hours.codedescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codedesc' in table 'phone_request_hours' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablephone_request_hours.codedescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodevalueNull() As Boolean
            Return Me.IsNull(Me.tablephone_request_hours.codevalueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodevalueNull()
            Me(Me.tablephone_request_hours.codevalueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodedescNull() As Boolean
            Return Me.IsNull(Me.tablephone_request_hours.codedescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodedescNull()
            Me(Me.tablephone_request_hours.codedescColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class phone_request_reasonRow
        Inherits Global.System.Data.DataRow
        
        Private tablephone_request_reason As phone_request_reasonDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablephone_request_reason = CType(Me.Table,phone_request_reasonDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codevalue() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablephone_request_reason.codevalueColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codevalue' in table 'phone_request_reason' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablephone_request_reason.codevalueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codedesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablephone_request_reason.codedescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codedesc' in table 'phone_request_reason' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablephone_request_reason.codedescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodevalueNull() As Boolean
            Return Me.IsNull(Me.tablephone_request_reason.codevalueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodevalueNull()
            Me(Me.tablephone_request_reason.codevalueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodedescNull() As Boolean
            Return Me.IsNull(Me.tablephone_request_reason.codedescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodedescNull()
            Me(Me.tablephone_request_reason.codedescColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class QuizzRow
        Inherits Global.System.Data.DataRow
        
        Private tableQuizz As QuizzDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableQuizz = CType(Me.Table,QuizzDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quizz_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableQuizz.quizz_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quizz_id' in table 'Quizz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableQuizz.quizz_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _date() As String
            Get
                Try 
                    Return CType(Me(Me.tableQuizz.dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date' in table 'Quizz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableQuizz.dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property language_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableQuizz.language_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'language_id' in table 'Quizz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableQuizz.language_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tableQuizz.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tableQuizz.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property email() As String
            Get
                Try 
                    Return CType(Me(Me.tableQuizz.emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'email' in table 'Quizz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableQuizz.emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pseudo() As String
            Get
                Try 
                    Return CType(Me(Me.tableQuizz.pseudoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pseudo' in table 'Quizz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableQuizz.pseudoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quizz_name_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableQuizz.quizz_name_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quizz_name_id' in table 'Quizz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableQuizz.quizz_name_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property score() As String
            Get
                Return CType(Me(Me.tableQuizz.scoreColumn),String)
            End Get
            Set
                Me(Me.tableQuizz.scoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nbrofquestions() As String
            Get
                Return CType(Me(Me.tableQuizz.nbrofquestionsColumn),String)
            End Get
            Set
                Me(Me.tableQuizz.nbrofquestionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As String
            Get
                Return CType(Me(Me.tableQuizz.siteColumn),String)
            End Get
            Set
                Me(Me.tableQuizz.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EntityID() As String
            Get
                Try 
                    Return CType(Me(Me.tableQuizz.EntityIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EntityID' in table 'Quizz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableQuizz.EntityIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property unsubscribe() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableQuizz.unsubscribeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unsubscribe' in table 'Quizz' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableQuizz.unsubscribeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquizz_idNull() As Boolean
            Return Me.IsNull(Me.tableQuizz.quizz_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquizz_idNull()
            Me(Me.tableQuizz.quizz_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_dateNull() As Boolean
            Return Me.IsNull(Me.tableQuizz.dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_dateNull()
            Me(Me.tableQuizz.dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islanguage_idNull() As Boolean
            Return Me.IsNull(Me.tableQuizz.language_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlanguage_idNull()
            Me(Me.tableQuizz.language_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsemailNull() As Boolean
            Return Me.IsNull(Me.tableQuizz.emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetemailNull()
            Me(Me.tableQuizz.emailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspseudoNull() As Boolean
            Return Me.IsNull(Me.tableQuizz.pseudoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpseudoNull()
            Me(Me.tableQuizz.pseudoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isquizz_name_idNull() As Boolean
            Return Me.IsNull(Me.tableQuizz.quizz_name_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setquizz_name_idNull()
            Me(Me.tableQuizz.quizz_name_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEntityIDNull() As Boolean
            Return Me.IsNull(Me.tableQuizz.EntityIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEntityIDNull()
            Me(Me.tableQuizz.EntityIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsunsubscribeNull() As Boolean
            Return Me.IsNull(Me.tableQuizz.unsubscribeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetunsubscribeNull()
            Me(Me.tableQuizz.unsubscribeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class code_tmpRow
        Inherits Global.System.Data.DataRow
        
        Private tablecode_tmp As code_tmpDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecode_tmp = CType(Me.Table,code_tmpDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tablecode_tmp.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecode_tmp.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code() As String
            Get
                If Me.IscodeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablecode_tmp.codeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablecode_tmp.codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code_type() As String
            Get
                Return CType(Me(Me.tablecode_tmp.code_typeColumn),String)
            End Get
            Set
                Me(Me.tablecode_tmp.code_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_Creation_Date() As String
            Get
                Try 
                    Return CType(Me(Me.tablecode_tmp.Code_Creation_DateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_Creation_Date' in table 'code_tmp' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecode_tmp.Code_Creation_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodeNull() As Boolean
            Return Me.IsNull(Me.tablecode_tmp.codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodeNull()
            Me(Me.tablecode_tmp.codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_Creation_DateNull() As Boolean
            Return Me.IsNull(Me.tablecode_tmp.Code_Creation_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_Creation_DateNull()
            Me(Me.tablecode_tmp.Code_Creation_DateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class custserv_view1Row
        Inherits Global.System.Data.DataRow
        
        Private tablecustserv_view1 As custserv_view1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustserv_view1 = CType(Me.Table,custserv_view1DataTable)
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class customersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As customersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As customersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As customersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class customers_infoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As customers_infoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As customers_infoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As customers_infoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class customers_instant_profileRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As customers_instant_profileRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As customers_instant_profileRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As customers_instant_profileRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class mail_messagesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As mail_messagesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As mail_messagesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As mail_messagesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class mail_messages_sent_historyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As mail_messages_sent_historyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As mail_messages_sent_historyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As mail_messages_sent_historyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class customers_view1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As customers_view1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As customers_view1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As customers_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class mail_messages1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As mail_messages1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As mail_messages1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As mail_messages1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class languagesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As languagesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As languagesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As languagesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class orders_status_historyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As orders_status_historyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As orders_status_historyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As orders_status_historyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ordersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ordersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ordersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ordersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class orders_productsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As orders_productsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As orders_productsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As orders_productsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class productsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As productsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As productsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As productsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class products_adultRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As products_adultRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As products_adultRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As products_adultRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class products_descriptionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As products_descriptionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As products_descriptionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As products_descriptionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class directorsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As directorsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As directorsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As directorsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class products_actors_view1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As products_actors_view1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As products_actors_view1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As products_actors_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class prod_instock_image_view1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As prod_instock_image_view1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As prod_instock_image_view1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As prod_instock_image_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class customers_view2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As customers_view2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As customers_view2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As customers_view2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class aboRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As aboRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As aboRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As aboRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class abo_actionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As abo_actionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As abo_actionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As abo_actionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class customers_mikeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As customers_mikeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As customers_mikeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As customers_mikeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class customers_nl_tempRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As customers_nl_tempRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As customers_nl_tempRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As customers_nl_tempRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class siteRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As siteRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As siteRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As siteRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class propsectsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As propsectsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As propsectsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As propsectsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class customers_abo_payment_methodRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As customers_abo_payment_methodRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As customers_abo_payment_methodRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As customers_abo_payment_methodRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class phone_requestRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As phone_requestRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As phone_requestRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As phone_requestRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class weekdaysRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As weekdaysRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As weekdaysRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As weekdaysRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class phone_request_hoursRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As phone_request_hoursRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As phone_request_hoursRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As phone_request_hoursRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class phone_request_reasonRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As phone_request_reasonRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As phone_request_reasonRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As phone_request_reasonRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class QuizzRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As QuizzRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As QuizzRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As QuizzRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class code_tmpRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As code_tmpRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As code_tmpRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As code_tmpRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class custserv_view1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As custserv_view1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As custserv_view1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As custserv_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
