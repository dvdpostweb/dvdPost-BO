'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4959
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsFeeSharing"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsFeeSharing
    Inherits Global.System.Data.DataSet
    
    Private tablefeesharing_moviemax As feesharing_moviemaxDataTable
    
    Private tablefeesharing_moviemax_id As feesharing_moviemax_idDataTable
    
    Private tablefeesharing_moviemax_input As feesharing_moviemax_inputDataTable
    
    Private tablefeesharing_moviemax_leverancier As feesharing_moviemax_leverancierDataTable
    
    Private tableproducts As productsDataTable
    
    Private tableMovieMax_Info_View1 As MovieMax_Info_View1DataTable
    
    Private tablefeesharing_moviemax_output As feesharing_moviemax_outputDataTable
    
    Private tablefee_view1 As fee_view1DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("feesharing_moviemax")) Is Nothing) Then
                MyBase.Tables.Add(New feesharing_moviemaxDataTable(ds.Tables("feesharing_moviemax")))
            End If
            If (Not (ds.Tables("feesharing_moviemax_id")) Is Nothing) Then
                MyBase.Tables.Add(New feesharing_moviemax_idDataTable(ds.Tables("feesharing_moviemax_id")))
            End If
            If (Not (ds.Tables("feesharing_moviemax_input")) Is Nothing) Then
                MyBase.Tables.Add(New feesharing_moviemax_inputDataTable(ds.Tables("feesharing_moviemax_input")))
            End If
            If (Not (ds.Tables("feesharing_moviemax_leverancier")) Is Nothing) Then
                MyBase.Tables.Add(New feesharing_moviemax_leverancierDataTable(ds.Tables("feesharing_moviemax_leverancier")))
            End If
            If (Not (ds.Tables("products")) Is Nothing) Then
                MyBase.Tables.Add(New productsDataTable(ds.Tables("products")))
            End If
            If (Not (ds.Tables("MovieMax_Info_View1")) Is Nothing) Then
                MyBase.Tables.Add(New MovieMax_Info_View1DataTable(ds.Tables("MovieMax_Info_View1")))
            End If
            If (Not (ds.Tables("feesharing_moviemax_output")) Is Nothing) Then
                MyBase.Tables.Add(New feesharing_moviemax_outputDataTable(ds.Tables("feesharing_moviemax_output")))
            End If
            If (Not (ds.Tables("fee_view1")) Is Nothing) Then
                MyBase.Tables.Add(New fee_view1DataTable(ds.Tables("fee_view1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property feesharing_moviemax() As feesharing_moviemaxDataTable
        Get
            Return Me.tablefeesharing_moviemax
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property feesharing_moviemax_id() As feesharing_moviemax_idDataTable
        Get
            Return Me.tablefeesharing_moviemax_id
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property feesharing_moviemax_input() As feesharing_moviemax_inputDataTable
        Get
            Return Me.tablefeesharing_moviemax_input
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property feesharing_moviemax_leverancier() As feesharing_moviemax_leverancierDataTable
        Get
            Return Me.tablefeesharing_moviemax_leverancier
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property products() As productsDataTable
        Get
            Return Me.tableproducts
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MovieMax_Info_View1() As MovieMax_Info_View1DataTable
        Get
            Return Me.tableMovieMax_Info_View1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property feesharing_moviemax_output() As feesharing_moviemax_outputDataTable
        Get
            Return Me.tablefeesharing_moviemax_output
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property fee_view1() As fee_view1DataTable
        Get
            Return Me.tablefee_view1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsFeeSharing = CType(MyBase.Clone,dsFeeSharing)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("feesharing_moviemax")) Is Nothing) Then
                MyBase.Tables.Add(New feesharing_moviemaxDataTable(ds.Tables("feesharing_moviemax")))
            End If
            If (Not (ds.Tables("feesharing_moviemax_id")) Is Nothing) Then
                MyBase.Tables.Add(New feesharing_moviemax_idDataTable(ds.Tables("feesharing_moviemax_id")))
            End If
            If (Not (ds.Tables("feesharing_moviemax_input")) Is Nothing) Then
                MyBase.Tables.Add(New feesharing_moviemax_inputDataTable(ds.Tables("feesharing_moviemax_input")))
            End If
            If (Not (ds.Tables("feesharing_moviemax_leverancier")) Is Nothing) Then
                MyBase.Tables.Add(New feesharing_moviemax_leverancierDataTable(ds.Tables("feesharing_moviemax_leverancier")))
            End If
            If (Not (ds.Tables("products")) Is Nothing) Then
                MyBase.Tables.Add(New productsDataTable(ds.Tables("products")))
            End If
            If (Not (ds.Tables("MovieMax_Info_View1")) Is Nothing) Then
                MyBase.Tables.Add(New MovieMax_Info_View1DataTable(ds.Tables("MovieMax_Info_View1")))
            End If
            If (Not (ds.Tables("feesharing_moviemax_output")) Is Nothing) Then
                MyBase.Tables.Add(New feesharing_moviemax_outputDataTable(ds.Tables("feesharing_moviemax_output")))
            End If
            If (Not (ds.Tables("fee_view1")) Is Nothing) Then
                MyBase.Tables.Add(New fee_view1DataTable(ds.Tables("fee_view1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablefeesharing_moviemax = CType(MyBase.Tables("feesharing_moviemax"),feesharing_moviemaxDataTable)
        If (initTable = true) Then
            If (Not (Me.tablefeesharing_moviemax) Is Nothing) Then
                Me.tablefeesharing_moviemax.InitVars
            End If
        End If
        Me.tablefeesharing_moviemax_id = CType(MyBase.Tables("feesharing_moviemax_id"),feesharing_moviemax_idDataTable)
        If (initTable = true) Then
            If (Not (Me.tablefeesharing_moviemax_id) Is Nothing) Then
                Me.tablefeesharing_moviemax_id.InitVars
            End If
        End If
        Me.tablefeesharing_moviemax_input = CType(MyBase.Tables("feesharing_moviemax_input"),feesharing_moviemax_inputDataTable)
        If (initTable = true) Then
            If (Not (Me.tablefeesharing_moviemax_input) Is Nothing) Then
                Me.tablefeesharing_moviemax_input.InitVars
            End If
        End If
        Me.tablefeesharing_moviemax_leverancier = CType(MyBase.Tables("feesharing_moviemax_leverancier"),feesharing_moviemax_leverancierDataTable)
        If (initTable = true) Then
            If (Not (Me.tablefeesharing_moviemax_leverancier) Is Nothing) Then
                Me.tablefeesharing_moviemax_leverancier.InitVars
            End If
        End If
        Me.tableproducts = CType(MyBase.Tables("products"),productsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproducts) Is Nothing) Then
                Me.tableproducts.InitVars
            End If
        End If
        Me.tableMovieMax_Info_View1 = CType(MyBase.Tables("MovieMax_Info_View1"),MovieMax_Info_View1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableMovieMax_Info_View1) Is Nothing) Then
                Me.tableMovieMax_Info_View1.InitVars
            End If
        End If
        Me.tablefeesharing_moviemax_output = CType(MyBase.Tables("feesharing_moviemax_output"),feesharing_moviemax_outputDataTable)
        If (initTable = true) Then
            If (Not (Me.tablefeesharing_moviemax_output) Is Nothing) Then
                Me.tablefeesharing_moviemax_output.InitVars
            End If
        End If
        Me.tablefee_view1 = CType(MyBase.Tables("fee_view1"),fee_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tablefee_view1) Is Nothing) Then
                Me.tablefee_view1.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsFeeSharing"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsFeeSharing.xsd"
        Me.Locale = New Global.System.Globalization.CultureInfo("en-US")
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablefeesharing_moviemax = New feesharing_moviemaxDataTable
        MyBase.Tables.Add(Me.tablefeesharing_moviemax)
        Me.tablefeesharing_moviemax_id = New feesharing_moviemax_idDataTable
        MyBase.Tables.Add(Me.tablefeesharing_moviemax_id)
        Me.tablefeesharing_moviemax_input = New feesharing_moviemax_inputDataTable
        MyBase.Tables.Add(Me.tablefeesharing_moviemax_input)
        Me.tablefeesharing_moviemax_leverancier = New feesharing_moviemax_leverancierDataTable
        MyBase.Tables.Add(Me.tablefeesharing_moviemax_leverancier)
        Me.tableproducts = New productsDataTable
        MyBase.Tables.Add(Me.tableproducts)
        Me.tableMovieMax_Info_View1 = New MovieMax_Info_View1DataTable
        MyBase.Tables.Add(Me.tableMovieMax_Info_View1)
        Me.tablefeesharing_moviemax_output = New feesharing_moviemax_outputDataTable
        MyBase.Tables.Add(Me.tablefeesharing_moviemax_output)
        Me.tablefee_view1 = New fee_view1DataTable
        MyBase.Tables.Add(Me.tablefee_view1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializefeesharing_moviemax() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializefeesharing_moviemax_id() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializefeesharing_moviemax_input() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializefeesharing_moviemax_leverancier() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeproducts() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeMovieMax_Info_View1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializefeesharing_moviemax_output() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializefee_view1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsFeeSharing = New dsFeeSharing
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub feesharing_moviemaxRowChangeEventHandler(ByVal sender As Object, ByVal e As feesharing_moviemaxRowChangeEvent)
    
    Public Delegate Sub feesharing_moviemax_idRowChangeEventHandler(ByVal sender As Object, ByVal e As feesharing_moviemax_idRowChangeEvent)
    
    Public Delegate Sub feesharing_moviemax_inputRowChangeEventHandler(ByVal sender As Object, ByVal e As feesharing_moviemax_inputRowChangeEvent)
    
    Public Delegate Sub feesharing_moviemax_leverancierRowChangeEventHandler(ByVal sender As Object, ByVal e As feesharing_moviemax_leverancierRowChangeEvent)
    
    Public Delegate Sub productsRowChangeEventHandler(ByVal sender As Object, ByVal e As productsRowChangeEvent)
    
    Public Delegate Sub MovieMax_Info_View1RowChangeEventHandler(ByVal sender As Object, ByVal e As MovieMax_Info_View1RowChangeEvent)
    
    Public Delegate Sub feesharing_moviemax_outputRowChangeEventHandler(ByVal sender As Object, ByVal e As feesharing_moviemax_outputRowChangeEvent)
    
    Public Delegate Sub fee_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As fee_view1RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class feesharing_moviemaxDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnfeesharing_boomerang_id As Global.System.Data.DataColumn
        
        Private columnfeesharing_date As Global.System.Data.DataColumn
        
        Private columnperiod As Global.System.Data.DataColumn
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnrentals As Global.System.Data.DataColumn
        
        Private columnrentals_in_first_month As Global.System.Data.DataColumn
        
        Private columnrentals_after As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "feesharing_moviemax"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_boomerang_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_boomerang_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property periodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperiod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rentalsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrentals
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rentals_in_first_monthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrentals_in_first_month
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rentals_afterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrentals_after
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As feesharing_moviemaxRow
            Get
                Return CType(Me.Rows(index),feesharing_moviemaxRow)
            End Get
        End Property
        
        Public Event feesharing_moviemaxRowChanging As feesharing_moviemaxRowChangeEventHandler
        
        Public Event feesharing_moviemaxRowChanged As feesharing_moviemaxRowChangeEventHandler
        
        Public Event feesharing_moviemaxRowDeleting As feesharing_moviemaxRowChangeEventHandler
        
        Public Event feesharing_moviemaxRowDeleted As feesharing_moviemaxRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addfeesharing_moviemaxRow(ByVal row As feesharing_moviemaxRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addfeesharing_moviemaxRow(ByVal feesharing_date As Date, ByVal period As String, ByVal products_id As Integer, ByVal rentals As Integer, ByVal rentals_in_first_month As Integer, ByVal rentals_after As Integer) As feesharing_moviemaxRow
            Dim rowfeesharing_moviemaxRow As feesharing_moviemaxRow = CType(Me.NewRow,feesharing_moviemaxRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, feesharing_date, period, products_id, rentals, rentals_in_first_month, rentals_after}
            rowfeesharing_moviemaxRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowfeesharing_moviemaxRow)
            Return rowfeesharing_moviemaxRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByfeesharing_boomerang_id(ByVal feesharing_boomerang_id As Integer) As feesharing_moviemaxRow
            Return CType(Me.Rows.Find(New Object() {feesharing_boomerang_id}),feesharing_moviemaxRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As feesharing_moviemaxDataTable = CType(MyBase.Clone,feesharing_moviemaxDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New feesharing_moviemaxDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnfeesharing_boomerang_id = MyBase.Columns("feesharing_boomerang_id")
            Me.columnfeesharing_date = MyBase.Columns("feesharing_date")
            Me.columnperiod = MyBase.Columns("period")
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnrentals = MyBase.Columns("rentals")
            Me.columnrentals_in_first_month = MyBase.Columns("rentals_in_first_month")
            Me.columnrentals_after = MyBase.Columns("rentals_after")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnfeesharing_boomerang_id = New Global.System.Data.DataColumn("feesharing_boomerang_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_boomerang_id)
            Me.columnfeesharing_date = New Global.System.Data.DataColumn("feesharing_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_date)
            Me.columnperiod = New Global.System.Data.DataColumn("period", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperiod)
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnrentals = New Global.System.Data.DataColumn("rentals", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrentals)
            Me.columnrentals_in_first_month = New Global.System.Data.DataColumn("rentals_in_first_month", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrentals_in_first_month)
            Me.columnrentals_after = New Global.System.Data.DataColumn("rentals_after", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrentals_after)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsFeeSharingKey1", New Global.System.Data.DataColumn() {Me.columnfeesharing_boomerang_id}, true))
            Me.columnfeesharing_boomerang_id.AutoIncrement = true
            Me.columnfeesharing_boomerang_id.AllowDBNull = false
            Me.columnfeesharing_boomerang_id.ReadOnly = true
            Me.columnfeesharing_boomerang_id.Unique = true
            Me.columnperiod.AllowDBNull = false
            Me.columnproducts_id.AllowDBNull = false
            Me.columnrentals.AllowDBNull = false
            Me.columnrentals_in_first_month.AllowDBNull = false
            Me.columnrentals_after.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newfeesharing_moviemaxRow() As feesharing_moviemaxRow
            Return CType(Me.NewRow,feesharing_moviemaxRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New feesharing_moviemaxRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(feesharing_moviemaxRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.feesharing_moviemaxRowChangedEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemaxRowChanged(Me, New feesharing_moviemaxRowChangeEvent(CType(e.Row,feesharing_moviemaxRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.feesharing_moviemaxRowChangingEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemaxRowChanging(Me, New feesharing_moviemaxRowChangeEvent(CType(e.Row,feesharing_moviemaxRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.feesharing_moviemaxRowDeletedEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemaxRowDeleted(Me, New feesharing_moviemaxRowChangeEvent(CType(e.Row,feesharing_moviemaxRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.feesharing_moviemaxRowDeletingEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemaxRowDeleting(Me, New feesharing_moviemaxRowChangeEvent(CType(e.Row,feesharing_moviemaxRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removefeesharing_moviemaxRow(ByVal row As feesharing_moviemaxRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsFeeSharing = New dsFeeSharing
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "feesharing_moviemaxDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class feesharing_moviemax_idDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columntitelnr As Global.System.Data.DataColumn
        
        Private columntitle_name As Global.System.Data.DataColumn
        
        Private columnactor As Global.System.Data.DataColumn
        
        Private columnmaatschappij As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "feesharing_moviemax_id"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property titelnrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitelnr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property title_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitle_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property actorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property maatschappijColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaatschappij
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As feesharing_moviemax_idRow
            Get
                Return CType(Me.Rows(index),feesharing_moviemax_idRow)
            End Get
        End Property
        
        Public Event feesharing_moviemax_idRowChanging As feesharing_moviemax_idRowChangeEventHandler
        
        Public Event feesharing_moviemax_idRowChanged As feesharing_moviemax_idRowChangeEventHandler
        
        Public Event feesharing_moviemax_idRowDeleting As feesharing_moviemax_idRowChangeEventHandler
        
        Public Event feesharing_moviemax_idRowDeleted As feesharing_moviemax_idRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addfeesharing_moviemax_idRow(ByVal row As feesharing_moviemax_idRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addfeesharing_moviemax_idRow(ByVal titelnr As Integer, ByVal title_name As String, ByVal actor As String, ByVal maatschappij As Integer) As feesharing_moviemax_idRow
            Dim rowfeesharing_moviemax_idRow As feesharing_moviemax_idRow = CType(Me.NewRow,feesharing_moviemax_idRow)
            Dim columnValuesArray() As Object = New Object() {titelnr, title_name, actor, maatschappij}
            rowfeesharing_moviemax_idRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowfeesharing_moviemax_idRow)
            Return rowfeesharing_moviemax_idRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As feesharing_moviemax_idDataTable = CType(MyBase.Clone,feesharing_moviemax_idDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New feesharing_moviemax_idDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columntitelnr = MyBase.Columns("titelnr")
            Me.columntitle_name = MyBase.Columns("title_name")
            Me.columnactor = MyBase.Columns("actor")
            Me.columnmaatschappij = MyBase.Columns("maatschappij")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columntitelnr = New Global.System.Data.DataColumn("titelnr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitelnr)
            Me.columntitle_name = New Global.System.Data.DataColumn("title_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitle_name)
            Me.columnactor = New Global.System.Data.DataColumn("actor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactor)
            Me.columnmaatschappij = New Global.System.Data.DataColumn("maatschappij", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaatschappij)
            Me.columntitelnr.AllowDBNull = false
            Me.columntitle_name.AllowDBNull = false
            Me.columnactor.AllowDBNull = false
            Me.columnmaatschappij.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newfeesharing_moviemax_idRow() As feesharing_moviemax_idRow
            Return CType(Me.NewRow,feesharing_moviemax_idRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New feesharing_moviemax_idRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(feesharing_moviemax_idRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.feesharing_moviemax_idRowChangedEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_idRowChanged(Me, New feesharing_moviemax_idRowChangeEvent(CType(e.Row,feesharing_moviemax_idRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.feesharing_moviemax_idRowChangingEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_idRowChanging(Me, New feesharing_moviemax_idRowChangeEvent(CType(e.Row,feesharing_moviemax_idRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.feesharing_moviemax_idRowDeletedEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_idRowDeleted(Me, New feesharing_moviemax_idRowChangeEvent(CType(e.Row,feesharing_moviemax_idRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.feesharing_moviemax_idRowDeletingEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_idRowDeleting(Me, New feesharing_moviemax_idRowChangeEvent(CType(e.Row,feesharing_moviemax_idRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removefeesharing_moviemax_idRow(ByVal row As feesharing_moviemax_idRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsFeeSharing = New dsFeeSharing
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "feesharing_moviemax_idDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class feesharing_moviemax_inputDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columntitle_name As Global.System.Data.DataColumn
        
        Private columntitelnr As Global.System.Data.DataColumn
        
        Private columnmaatschappij As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "feesharing_moviemax_input"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property title_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitle_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property titelnrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitelnr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property maatschappijColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaatschappij
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As feesharing_moviemax_inputRow
            Get
                Return CType(Me.Rows(index),feesharing_moviemax_inputRow)
            End Get
        End Property
        
        Public Event feesharing_moviemax_inputRowChanging As feesharing_moviemax_inputRowChangeEventHandler
        
        Public Event feesharing_moviemax_inputRowChanged As feesharing_moviemax_inputRowChangeEventHandler
        
        Public Event feesharing_moviemax_inputRowDeleting As feesharing_moviemax_inputRowChangeEventHandler
        
        Public Event feesharing_moviemax_inputRowDeleted As feesharing_moviemax_inputRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addfeesharing_moviemax_inputRow(ByVal row As feesharing_moviemax_inputRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addfeesharing_moviemax_inputRow(ByVal products_id As Integer, ByVal title_name As String, ByVal titelnr As Integer, ByVal maatschappij As Integer) As feesharing_moviemax_inputRow
            Dim rowfeesharing_moviemax_inputRow As feesharing_moviemax_inputRow = CType(Me.NewRow,feesharing_moviemax_inputRow)
            Dim columnValuesArray() As Object = New Object() {products_id, title_name, titelnr, maatschappij}
            rowfeesharing_moviemax_inputRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowfeesharing_moviemax_inputRow)
            Return rowfeesharing_moviemax_inputRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproducts_id(ByVal products_id As Integer) As feesharing_moviemax_inputRow
            Return CType(Me.Rows.Find(New Object() {products_id}),feesharing_moviemax_inputRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As feesharing_moviemax_inputDataTable = CType(MyBase.Clone,feesharing_moviemax_inputDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New feesharing_moviemax_inputDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columntitle_name = MyBase.Columns("title_name")
            Me.columntitelnr = MyBase.Columns("titelnr")
            Me.columnmaatschappij = MyBase.Columns("maatschappij")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columntitle_name = New Global.System.Data.DataColumn("title_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitle_name)
            Me.columntitelnr = New Global.System.Data.DataColumn("titelnr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitelnr)
            Me.columnmaatschappij = New Global.System.Data.DataColumn("maatschappij", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaatschappij)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsFeeSharingKey3", New Global.System.Data.DataColumn() {Me.columnproducts_id}, true))
            Me.columnproducts_id.AllowDBNull = false
            Me.columnproducts_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newfeesharing_moviemax_inputRow() As feesharing_moviemax_inputRow
            Return CType(Me.NewRow,feesharing_moviemax_inputRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New feesharing_moviemax_inputRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(feesharing_moviemax_inputRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.feesharing_moviemax_inputRowChangedEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_inputRowChanged(Me, New feesharing_moviemax_inputRowChangeEvent(CType(e.Row,feesharing_moviemax_inputRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.feesharing_moviemax_inputRowChangingEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_inputRowChanging(Me, New feesharing_moviemax_inputRowChangeEvent(CType(e.Row,feesharing_moviemax_inputRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.feesharing_moviemax_inputRowDeletedEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_inputRowDeleted(Me, New feesharing_moviemax_inputRowChangeEvent(CType(e.Row,feesharing_moviemax_inputRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.feesharing_moviemax_inputRowDeletingEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_inputRowDeleting(Me, New feesharing_moviemax_inputRowChangeEvent(CType(e.Row,feesharing_moviemax_inputRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removefeesharing_moviemax_inputRow(ByVal row As feesharing_moviemax_inputRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsFeeSharing = New dsFeeSharing
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "feesharing_moviemax_inputDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class feesharing_moviemax_leverancierDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnleverancier As Global.System.Data.DataColumn
        
        Private columnpercentage As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "feesharing_moviemax_leverancier"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property leverancierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnleverancier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property percentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpercentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As feesharing_moviemax_leverancierRow
            Get
                Return CType(Me.Rows(index),feesharing_moviemax_leverancierRow)
            End Get
        End Property
        
        Public Event feesharing_moviemax_leverancierRowChanging As feesharing_moviemax_leverancierRowChangeEventHandler
        
        Public Event feesharing_moviemax_leverancierRowChanged As feesharing_moviemax_leverancierRowChangeEventHandler
        
        Public Event feesharing_moviemax_leverancierRowDeleting As feesharing_moviemax_leverancierRowChangeEventHandler
        
        Public Event feesharing_moviemax_leverancierRowDeleted As feesharing_moviemax_leverancierRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addfeesharing_moviemax_leverancierRow(ByVal row As feesharing_moviemax_leverancierRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addfeesharing_moviemax_leverancierRow(ByVal id As Integer, ByVal leverancier As String, ByVal percentage As Integer) As feesharing_moviemax_leverancierRow
            Dim rowfeesharing_moviemax_leverancierRow As feesharing_moviemax_leverancierRow = CType(Me.NewRow,feesharing_moviemax_leverancierRow)
            Dim columnValuesArray() As Object = New Object() {id, leverancier, percentage}
            rowfeesharing_moviemax_leverancierRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowfeesharing_moviemax_leverancierRow)
            Return rowfeesharing_moviemax_leverancierRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByid(ByVal id As Integer) As feesharing_moviemax_leverancierRow
            Return CType(Me.Rows.Find(New Object() {id}),feesharing_moviemax_leverancierRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As feesharing_moviemax_leverancierDataTable = CType(MyBase.Clone,feesharing_moviemax_leverancierDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New feesharing_moviemax_leverancierDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnleverancier = MyBase.Columns("leverancier")
            Me.columnpercentage = MyBase.Columns("percentage")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnleverancier = New Global.System.Data.DataColumn("leverancier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnleverancier)
            Me.columnpercentage = New Global.System.Data.DataColumn("percentage", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpercentage)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsFeeSharingKey6", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AllowDBNull = false
            Me.columnid.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newfeesharing_moviemax_leverancierRow() As feesharing_moviemax_leverancierRow
            Return CType(Me.NewRow,feesharing_moviemax_leverancierRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New feesharing_moviemax_leverancierRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(feesharing_moviemax_leverancierRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.feesharing_moviemax_leverancierRowChangedEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_leverancierRowChanged(Me, New feesharing_moviemax_leverancierRowChangeEvent(CType(e.Row,feesharing_moviemax_leverancierRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.feesharing_moviemax_leverancierRowChangingEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_leverancierRowChanging(Me, New feesharing_moviemax_leverancierRowChangeEvent(CType(e.Row,feesharing_moviemax_leverancierRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.feesharing_moviemax_leverancierRowDeletedEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_leverancierRowDeleted(Me, New feesharing_moviemax_leverancierRowChangeEvent(CType(e.Row,feesharing_moviemax_leverancierRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.feesharing_moviemax_leverancierRowDeletingEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_leverancierRowDeleting(Me, New feesharing_moviemax_leverancierRowChangeEvent(CType(e.Row,feesharing_moviemax_leverancierRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removefeesharing_moviemax_leverancierRow(ByVal row As feesharing_moviemax_leverancierRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsFeeSharing = New dsFeeSharing
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "feesharing_moviemax_leverancierDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class productsDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnproducts_quantity As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnimdb_id As Global.System.Data.DataColumn
        
        Private columnproducts_title As Global.System.Data.DataColumn
        
        Private columnproducts_image As Global.System.Data.DataColumn
        
        Private columnproducts_price As Global.System.Data.DataColumn
        
        Private columnproducts_date_added As Global.System.Data.DataColumn
        
        Private columnproducts_last_modified As Global.System.Data.DataColumn
        
        Private columnproducts_date_available As Global.System.Data.DataColumn
        
        Private columnproducts_weight As Global.System.Data.DataColumn
        
        Private columnproducts_status As Global.System.Data.DataColumn
        
        Private columnproducts_tax_class_id As Global.System.Data.DataColumn
        
        Private columnmanufacturers_id As Global.System.Data.DataColumn
        
        Private columnproducts_ordered As Global.System.Data.DataColumn
        
        Private columnproducts_public As Global.System.Data.DataColumn
        
        Private columnproducts_runtime As Global.System.Data.DataColumn
        
        Private columnproducts_year As Global.System.Data.DataColumn
        
        Private columnproducts_countries_id As Global.System.Data.DataColumn
        
        Private columnproducts_picture_format As Global.System.Data.DataColumn
        
        Private columnproducts_rating As Global.System.Data.DataColumn
        
        Private columnproducts_directors_id As Global.System.Data.DataColumn
        
        Private columnproducts_regional_code As Global.System.Data.DataColumn
        
        Private columnproducts_studio As Global.System.Data.DataColumn
        
        Private columnproducts_barcode As Global.System.Data.DataColumn
        
        Private columnproducts_dvd_quantity As Global.System.Data.DataColumn
        
        Private columnproducts_language_fr As Global.System.Data.DataColumn
        
        Private columnproducts_undertitle_nl As Global.System.Data.DataColumn
        
        Private columnin_the_bags As Global.System.Data.DataColumn
        
        Private columnin_the_bags_next As Global.System.Data.DataColumn
        
        Private columnin_cinema_now As Global.System.Data.DataColumn
        
        Private columnproducts_dvdpostchoice As Global.System.Data.DataColumn
        
        Private columnproducts_other_language As Global.System.Data.DataColumn
        
        Private columnproducts_french As Global.System.Data.DataColumn
        
        Private columnproducts_next As Global.System.Data.DataColumn
        
        Private columnproducts_tiscali_hp_fr As Global.System.Data.DataColumn
        
        Private columnproducts_tiscali_hp_nl As Global.System.Data.DataColumn
        
        Private columnproducts_series_id As Global.System.Data.DataColumn
        
        Private columnproducts_series_number As Global.System.Data.DataColumn
        
        Private columnproducts_series_aboprocess_id As Global.System.Data.DataColumn
        
        Private columnproducts_series_aboprocess_number As Global.System.Data.DataColumn
        
        Private columncinebel_id As Global.System.Data.DataColumn
        
        Private columncinebel_trailer As Global.System.Data.DataColumn
        
        Private columnfeesharing As Global.System.Data.DataColumn
        
        Private columnfeesharing_end As Global.System.Data.DataColumn
        
        Private columnfeesharing_upfront_fee As Global.System.Data.DataColumn
        
        Private columnfeesharing_upfront_fee_recoverable As Global.System.Data.DataColumn
        
        Private columnfeesharing_turn_price As Global.System.Data.DataColumn
        
        Private columnfeesharing_turn_price_after3month As Global.System.Data.DataColumn
        
        Private columnfeesharing_buy_option_price As Global.System.Data.DataColumn
        
        Private columnfeesharing_expected_nbr_turns As Global.System.Data.DataColumn
        
        Private columnproducts_desire As Global.System.Data.DataColumn
        
        Private columnproducts_desire_weighted As Global.System.Data.DataColumn
        
        Private columnproducts_availability As Global.System.Data.DataColumn
        
        Private columnquantity_to_sale As Global.System.Data.DataColumn
        
        Private columnproducts_sale_price As Global.System.Data.DataColumn
        
        Private columnproducts_sale_date As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "products"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_quantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imdb_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimdb_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_image
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_last_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_availableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_available
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_weightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_weight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tax_class_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tax_class_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property manufacturers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmanufacturers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_orderedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_ordered
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_publicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_public
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_runtimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_runtime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_yearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_countries_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_countries_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_picture_formatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_picture_format
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_ratingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_rating
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_directors_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_directors_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_regional_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_regional_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_studioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_studio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_barcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_barcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvd_quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvd_quantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_language_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_language_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_undertitle_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_undertitle_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_the_bagsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_the_bags
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_the_bags_nextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_the_bags_next
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_cinema_nowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_cinema_now
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvdpostchoiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvdpostchoice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_other_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_other_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_frenchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_french
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_nextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_next
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tiscali_hp_frColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tiscali_hp_fr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_tiscali_hp_nlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_tiscali_hp_nl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_aboprocess_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_aboprocess_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_aboprocess_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_aboprocess_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cinebel_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncinebel_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cinebel_trailerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncinebel_trailer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_endColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_end
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_upfront_feeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_upfront_fee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_upfront_fee_recoverableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_upfront_fee_recoverable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_turn_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_turn_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_turn_price_after3monthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_turn_price_after3month
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_buy_option_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_buy_option_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_expected_nbr_turnsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_expected_nbr_turns
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_desireColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_desire
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_desire_weightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_desire_weighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_availabilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_availability
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property quantity_to_saleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquantity_to_sale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_sale_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_sale_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_sale_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_sale_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As productsRow
            Get
                Return CType(Me.Rows(index),productsRow)
            End Get
        End Property
        
        Public Event productsRowChanging As productsRowChangeEventHandler
        
        Public Event productsRowChanged As productsRowChangeEventHandler
        
        Public Event productsRowDeleting As productsRowChangeEventHandler
        
        Public Event productsRowDeleted As productsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddproductsRow(ByVal row As productsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overloads Function AddproductsRow( _
                    ByVal products_id As Integer, _
                    ByVal products_quantity As Integer, _
                    ByVal products_model As String, _
                    ByVal imdb_id As Integer, _
                    ByVal products_title As String, _
                    ByVal products_image As String, _
                    ByVal products_price As Decimal, _
                    ByVal products_date_added As Date, _
                    ByVal products_last_modified As Date, _
                    ByVal products_date_available As Date, _
                    ByVal products_weight As Integer, _
                    ByVal products_status As Integer, _
                    ByVal products_tax_class_id As Integer, _
                    ByVal manufacturers_id As Integer, _
                    ByVal products_ordered As Integer, _
                    ByVal products_public As Integer, _
                    ByVal products_runtime As Integer, _
                    ByVal products_year As Integer, _
                    ByVal products_countries_id As Integer, _
                    ByVal products_picture_format As Integer, _
                    ByVal products_rating As Integer, _
                    ByVal products_directors_id As Integer, _
                    ByVal products_regional_code As Integer, _
                    ByVal products_studio As Integer, _
                    ByVal products_barcode As Integer, _
                    ByVal products_dvd_quantity As Integer, _
                    ByVal products_language_fr As Integer, _
                    ByVal products_undertitle_nl As Integer, _
                    ByVal in_the_bags As Integer, _
                    ByVal in_the_bags_next As Integer, _
                    ByVal in_cinema_now As Integer, _
                    ByVal products_dvdpostchoice As Integer, _
                    ByVal products_other_language As Integer, _
                    ByVal products_french As Integer, _
                    ByVal products_next As Integer, _
                    ByVal products_tiscali_hp_fr As Integer, _
                    ByVal products_tiscali_hp_nl As Integer, _
                    ByVal products_series_id As Integer, _
                    ByVal products_series_number As Integer, _
                    ByVal products_series_aboprocess_id As Integer, _
                    ByVal products_series_aboprocess_number As Integer, _
                    ByVal cinebel_id As Integer, _
                    ByVal cinebel_trailer As Integer, _
                    ByVal feesharing As Integer, _
                    ByVal feesharing_end As Date, _
                    ByVal feesharing_upfront_fee As Decimal, _
                    ByVal feesharing_upfront_fee_recoverable As Integer, _
                    ByVal feesharing_turn_price As Decimal, _
                    ByVal feesharing_turn_price_after3month As Decimal, _
                    ByVal feesharing_buy_option_price As Decimal, _
                    ByVal feesharing_expected_nbr_turns As Integer, _
                    ByVal products_desire As Integer, _
                    ByVal products_desire_weighted As Decimal, _
                    ByVal products_availability As Integer, _
                    ByVal quantity_to_sale As Integer, _
                    ByVal products_sale_price As Decimal, _
                    ByVal products_sale_date As Date) As productsRow
            Dim rowproductsRow As productsRow = CType(Me.NewRow, productsRow)
            Dim columnValuesArray() As Object = New Object() {products_id, products_quantity, products_model, imdb_id, products_title, products_image, products_price, products_date_added, products_last_modified, products_date_available, products_weight, products_status, products_tax_class_id, manufacturers_id, products_ordered, products_public, products_runtime, products_year, products_countries_id, products_picture_format, products_rating, products_directors_id, products_regional_code, products_studio, products_barcode, products_dvd_quantity, products_language_fr, products_undertitle_nl, in_the_bags, in_the_bags_next, in_cinema_now, products_dvdpostchoice, products_other_language, products_french, products_next, products_tiscali_hp_fr, products_tiscali_hp_nl, products_series_id, products_series_number, products_series_aboprocess_id, products_series_aboprocess_number, cinebel_id, cinebel_trailer, feesharing, feesharing_end, feesharing_upfront_fee, feesharing_upfront_fee_recoverable, feesharing_turn_price, feesharing_turn_price_after3month, feesharing_buy_option_price, feesharing_expected_nbr_turns, products_desire, products_desire_weighted, products_availability, quantity_to_sale, products_sale_price, products_sale_date}
            rowproductsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproductsRow)
            Return rowproductsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproducts_id(ByVal products_id As Integer) As productsRow
            Return CType(Me.Rows.Find(New Object() {products_id}),productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As productsDataTable = CType(MyBase.Clone,productsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New productsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnproducts_quantity = MyBase.Columns("products_quantity")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnimdb_id = MyBase.Columns("imdb_id")
            Me.columnproducts_title = MyBase.Columns("products_title")
            Me.columnproducts_image = MyBase.Columns("products_image")
            Me.columnproducts_price = MyBase.Columns("products_price")
            Me.columnproducts_date_added = MyBase.Columns("products_date_added")
            Me.columnproducts_last_modified = MyBase.Columns("products_last_modified")
            Me.columnproducts_date_available = MyBase.Columns("products_date_available")
            Me.columnproducts_weight = MyBase.Columns("products_weight")
            Me.columnproducts_status = MyBase.Columns("products_status")
            Me.columnproducts_tax_class_id = MyBase.Columns("products_tax_class_id")
            Me.columnmanufacturers_id = MyBase.Columns("manufacturers_id")
            Me.columnproducts_ordered = MyBase.Columns("products_ordered")
            Me.columnproducts_public = MyBase.Columns("products_public")
            Me.columnproducts_runtime = MyBase.Columns("products_runtime")
            Me.columnproducts_year = MyBase.Columns("products_year")
            Me.columnproducts_countries_id = MyBase.Columns("products_countries_id")
            Me.columnproducts_picture_format = MyBase.Columns("products_picture_format")
            Me.columnproducts_rating = MyBase.Columns("products_rating")
            Me.columnproducts_directors_id = MyBase.Columns("products_directors_id")
            Me.columnproducts_regional_code = MyBase.Columns("products_regional_code")
            Me.columnproducts_studio = MyBase.Columns("products_studio")
            Me.columnproducts_barcode = MyBase.Columns("products_barcode")
            Me.columnproducts_dvd_quantity = MyBase.Columns("products_dvd_quantity")
            Me.columnproducts_language_fr = MyBase.Columns("products_language_fr")
            Me.columnproducts_undertitle_nl = MyBase.Columns("products_undertitle_nl")
            Me.columnin_the_bags = MyBase.Columns("in_the_bags")
            Me.columnin_the_bags_next = MyBase.Columns("in_the_bags_next")
            Me.columnin_cinema_now = MyBase.Columns("in_cinema_now")
            Me.columnproducts_dvdpostchoice = MyBase.Columns("products_dvdpostchoice")
            Me.columnproducts_other_language = MyBase.Columns("products_other_language")
            Me.columnproducts_french = MyBase.Columns("products_french")
            Me.columnproducts_next = MyBase.Columns("products_next")
            Me.columnproducts_tiscali_hp_fr = MyBase.Columns("products_tiscali_hp_fr")
            Me.columnproducts_tiscali_hp_nl = MyBase.Columns("products_tiscali_hp_nl")
            Me.columnproducts_series_id = MyBase.Columns("products_series_id")
            Me.columnproducts_series_number = MyBase.Columns("products_series_number")
            Me.columnproducts_series_aboprocess_id = MyBase.Columns("products_series_aboprocess_id")
            Me.columnproducts_series_aboprocess_number = MyBase.Columns("products_series_aboprocess_number")
            Me.columncinebel_id = MyBase.Columns("cinebel_id")
            Me.columncinebel_trailer = MyBase.Columns("cinebel_trailer")
            Me.columnfeesharing = MyBase.Columns("feesharing")
            Me.columnfeesharing_end = MyBase.Columns("feesharing_end")
            Me.columnfeesharing_upfront_fee = MyBase.Columns("feesharing_upfront_fee")
            Me.columnfeesharing_upfront_fee_recoverable = MyBase.Columns("feesharing_upfront_fee_recoverable")
            Me.columnfeesharing_turn_price = MyBase.Columns("feesharing_turn_price")
            Me.columnfeesharing_turn_price_after3month = MyBase.Columns("feesharing_turn_price_after3month")
            Me.columnfeesharing_buy_option_price = MyBase.Columns("feesharing_buy_option_price")
            Me.columnfeesharing_expected_nbr_turns = MyBase.Columns("feesharing_expected_nbr_turns")
            Me.columnproducts_desire = MyBase.Columns("products_desire")
            Me.columnproducts_desire_weighted = MyBase.Columns("products_desire_weighted")
            Me.columnproducts_availability = MyBase.Columns("products_availability")
            Me.columnquantity_to_sale = MyBase.Columns("quantity_to_sale")
            Me.columnproducts_sale_price = MyBase.Columns("products_sale_price")
            Me.columnproducts_sale_date = MyBase.Columns("products_sale_date")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnproducts_quantity = New Global.System.Data.DataColumn("products_quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_quantity)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnimdb_id = New Global.System.Data.DataColumn("imdb_id", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimdb_id)
            Me.columnproducts_title = New Global.System.Data.DataColumn("products_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_title)
            Me.columnproducts_image = New Global.System.Data.DataColumn("products_image", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_image)
            Me.columnproducts_price = New Global.System.Data.DataColumn("products_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_price)
            Me.columnproducts_date_added = New Global.System.Data.DataColumn("products_date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_added)
            Me.columnproducts_last_modified = New Global.System.Data.DataColumn("products_last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_last_modified)
            Me.columnproducts_date_available = New Global.System.Data.DataColumn("products_date_available", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_available)
            Me.columnproducts_weight = New Global.System.Data.DataColumn("products_weight", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_weight)
            Me.columnproducts_status = New Global.System.Data.DataColumn("products_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_status)
            Me.columnproducts_tax_class_id = New Global.System.Data.DataColumn("products_tax_class_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tax_class_id)
            Me.columnmanufacturers_id = New Global.System.Data.DataColumn("manufacturers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmanufacturers_id)
            Me.columnproducts_ordered = New Global.System.Data.DataColumn("products_ordered", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_ordered)
            Me.columnproducts_public = New Global.System.Data.DataColumn("products_public", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_public)
            Me.columnproducts_runtime = New Global.System.Data.DataColumn("products_runtime", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_runtime)
            Me.columnproducts_year = New Global.System.Data.DataColumn("products_year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_year)
            Me.columnproducts_countries_id = New Global.System.Data.DataColumn("products_countries_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_countries_id)
            Me.columnproducts_picture_format = New Global.System.Data.DataColumn("products_picture_format", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_picture_format)
            Me.columnproducts_rating = New Global.System.Data.DataColumn("products_rating", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_rating)
            Me.columnproducts_directors_id = New Global.System.Data.DataColumn("products_directors_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_directors_id)
            Me.columnproducts_regional_code = New Global.System.Data.DataColumn("products_regional_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_regional_code)
            Me.columnproducts_studio = New Global.System.Data.DataColumn("products_studio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_studio)
            Me.columnproducts_barcode = New Global.System.Data.DataColumn("products_barcode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_barcode)
            Me.columnproducts_dvd_quantity = New Global.System.Data.DataColumn("products_dvd_quantity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvd_quantity)
            Me.columnproducts_language_fr = New Global.System.Data.DataColumn("products_language_fr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_language_fr)
            Me.columnproducts_undertitle_nl = New Global.System.Data.DataColumn("products_undertitle_nl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_undertitle_nl)
            Me.columnin_the_bags = New Global.System.Data.DataColumn("in_the_bags", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_the_bags)
            Me.columnin_the_bags_next = New Global.System.Data.DataColumn("in_the_bags_next", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_the_bags_next)
            Me.columnin_cinema_now = New Global.System.Data.DataColumn("in_cinema_now", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_cinema_now)
            Me.columnproducts_dvdpostchoice = New Global.System.Data.DataColumn("products_dvdpostchoice", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvdpostchoice)
            Me.columnproducts_other_language = New Global.System.Data.DataColumn("products_other_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_other_language)
            Me.columnproducts_french = New Global.System.Data.DataColumn("products_french", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_french)
            Me.columnproducts_next = New Global.System.Data.DataColumn("products_next", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_next)
            Me.columnproducts_tiscali_hp_fr = New Global.System.Data.DataColumn("products_tiscali_hp_fr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tiscali_hp_fr)
            Me.columnproducts_tiscali_hp_nl = New Global.System.Data.DataColumn("products_tiscali_hp_nl", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_tiscali_hp_nl)
            Me.columnproducts_series_id = New Global.System.Data.DataColumn("products_series_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_id)
            Me.columnproducts_series_number = New Global.System.Data.DataColumn("products_series_number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_number)
            Me.columnproducts_series_aboprocess_id = New Global.System.Data.DataColumn("products_series_aboprocess_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_aboprocess_id)
            Me.columnproducts_series_aboprocess_number = New Global.System.Data.DataColumn("products_series_aboprocess_number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_aboprocess_number)
            Me.columncinebel_id = New Global.System.Data.DataColumn("cinebel_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncinebel_id)
            Me.columncinebel_trailer = New Global.System.Data.DataColumn("cinebel_trailer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncinebel_trailer)
            Me.columnfeesharing = New Global.System.Data.DataColumn("feesharing", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing)
            Me.columnfeesharing_end = New Global.System.Data.DataColumn("feesharing_end", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_end)
            Me.columnfeesharing_upfront_fee = New Global.System.Data.DataColumn("feesharing_upfront_fee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_upfront_fee)
            Me.columnfeesharing_upfront_fee_recoverable = New Global.System.Data.DataColumn("feesharing_upfront_fee_recoverable", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_upfront_fee_recoverable)
            Me.columnfeesharing_turn_price = New Global.System.Data.DataColumn("feesharing_turn_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_turn_price)
            Me.columnfeesharing_turn_price_after3month = New Global.System.Data.DataColumn("feesharing_turn_price_after3month", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_turn_price_after3month)
            Me.columnfeesharing_buy_option_price = New Global.System.Data.DataColumn("feesharing_buy_option_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_buy_option_price)
            Me.columnfeesharing_expected_nbr_turns = New Global.System.Data.DataColumn("feesharing_expected_nbr_turns", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_expected_nbr_turns)
            Me.columnproducts_desire = New Global.System.Data.DataColumn("products_desire", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_desire)
            Me.columnproducts_desire_weighted = New Global.System.Data.DataColumn("products_desire_weighted", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_desire_weighted)
            Me.columnproducts_availability = New Global.System.Data.DataColumn("products_availability", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_availability)
            Me.columnquantity_to_sale = New Global.System.Data.DataColumn("quantity_to_sale", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquantity_to_sale)
            Me.columnproducts_sale_price = New Global.System.Data.DataColumn("products_sale_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_sale_price)
            Me.columnproducts_sale_date = New Global.System.Data.DataColumn("products_sale_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_sale_date)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsFeeSharingKey4", New Global.System.Data.DataColumn() {Me.columnproducts_id}, true))
            Me.columnproducts_id.AllowDBNull = false
            Me.columnproducts_id.Unique = true
            Me.columnproducts_quantity.AllowDBNull = false
            Me.columnimdb_id.AllowDBNull = false
            Me.columnproducts_title.AllowDBNull = false
            Me.columnproducts_price.AllowDBNull = false
            Me.columnproducts_status.AllowDBNull = false
            Me.columnproducts_tax_class_id.AllowDBNull = false
            Me.columnproducts_ordered.AllowDBNull = false
            Me.columnproducts_countries_id.AllowDBNull = false
            Me.columnproducts_barcode.AllowDBNull = false
            Me.columnproducts_dvd_quantity.AllowDBNull = false
            Me.columnproducts_language_fr.AllowDBNull = false
            Me.columnproducts_undertitle_nl.AllowDBNull = false
            Me.columnin_the_bags.AllowDBNull = false
            Me.columnin_the_bags_next.AllowDBNull = false
            Me.columnin_cinema_now.AllowDBNull = false
            Me.columnproducts_dvdpostchoice.AllowDBNull = false
            Me.columnproducts_french.AllowDBNull = false
            Me.columnproducts_next.AllowDBNull = false
            Me.columnproducts_tiscali_hp_fr.AllowDBNull = false
            Me.columnproducts_tiscali_hp_nl.AllowDBNull = false
            Me.columnproducts_series_id.AllowDBNull = false
            Me.columnproducts_series_number.AllowDBNull = false
            Me.columnproducts_series_aboprocess_id.AllowDBNull = false
            Me.columnproducts_series_aboprocess_number.AllowDBNull = false
            Me.columnfeesharing.AllowDBNull = false
            Me.columnfeesharing_upfront_fee.AllowDBNull = false
            Me.columnfeesharing_upfront_fee_recoverable.AllowDBNull = false
            Me.columnfeesharing_turn_price.AllowDBNull = false
            Me.columnfeesharing_turn_price_after3month.AllowDBNull = false
            Me.columnfeesharing_buy_option_price.AllowDBNull = false
            Me.columnfeesharing_expected_nbr_turns.AllowDBNull = false
            Me.columnproducts_desire.AllowDBNull = false
            Me.columnproducts_desire_weighted.AllowDBNull = false
            Me.columnproducts_availability.AllowDBNull = false
            Me.columnquantity_to_sale.AllowDBNull = false
            Me.columnproducts_sale_price.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewproductsRow() As productsRow
            Return CType(Me.NewRow,productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New productsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.productsRowChangedEvent) Is Nothing) Then
                RaiseEvent productsRowChanged(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.productsRowChangingEvent) Is Nothing) Then
                RaiseEvent productsRowChanging(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.productsRowDeletedEvent) Is Nothing) Then
                RaiseEvent productsRowDeleted(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.productsRowDeletingEvent) Is Nothing) Then
                RaiseEvent productsRowDeleting(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveproductsRow(ByVal row As productsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsFeeSharing = New dsFeeSharing
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "productsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MovieMax_Info_View1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columntitle_name As Global.System.Data.DataColumn
        
        Private columntitelnr As Global.System.Data.DataColumn
        
        Private columnmaatschappij As Global.System.Data.DataColumn
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnleverancier As Global.System.Data.DataColumn
        
        Private columnpercentage As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MovieMax_Info_View1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property title_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitle_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property titelnrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitelnr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property maatschappijColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaatschappij
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property leverancierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnleverancier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property percentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpercentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MovieMax_Info_View1Row
            Get
                Return CType(Me.Rows(index),MovieMax_Info_View1Row)
            End Get
        End Property
        
        Public Event MovieMax_Info_View1RowChanging As MovieMax_Info_View1RowChangeEventHandler
        
        Public Event MovieMax_Info_View1RowChanged As MovieMax_Info_View1RowChangeEventHandler
        
        Public Event MovieMax_Info_View1RowDeleting As MovieMax_Info_View1RowChangeEventHandler
        
        Public Event MovieMax_Info_View1RowDeleted As MovieMax_Info_View1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddMovieMax_Info_View1Row(ByVal row As MovieMax_Info_View1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddMovieMax_Info_View1Row(ByVal products_id As Integer, ByVal title_name As String, ByVal titelnr As Integer, ByVal maatschappij As Integer, ByVal id As Integer, ByVal leverancier As String, ByVal percentage As Integer) As MovieMax_Info_View1Row
            Dim rowMovieMax_Info_View1Row As MovieMax_Info_View1Row = CType(Me.NewRow,MovieMax_Info_View1Row)
            Dim columnValuesArray() As Object = New Object() {products_id, title_name, titelnr, maatschappij, id, leverancier, percentage}
            rowMovieMax_Info_View1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowMovieMax_Info_View1Row)
            Return rowMovieMax_Info_View1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproducts_id(ByVal products_id As Integer) As MovieMax_Info_View1Row
            Return CType(Me.Rows.Find(New Object() {products_id}),MovieMax_Info_View1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MovieMax_Info_View1DataTable = CType(MyBase.Clone,MovieMax_Info_View1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MovieMax_Info_View1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columntitle_name = MyBase.Columns("title_name")
            Me.columntitelnr = MyBase.Columns("titelnr")
            Me.columnmaatschappij = MyBase.Columns("maatschappij")
            Me.columnid = MyBase.Columns("id")
            Me.columnleverancier = MyBase.Columns("leverancier")
            Me.columnpercentage = MyBase.Columns("percentage")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columntitle_name = New Global.System.Data.DataColumn("title_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitle_name)
            Me.columntitelnr = New Global.System.Data.DataColumn("titelnr", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitelnr)
            Me.columnmaatschappij = New Global.System.Data.DataColumn("maatschappij", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaatschappij)
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnleverancier = New Global.System.Data.DataColumn("leverancier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnleverancier)
            Me.columnpercentage = New Global.System.Data.DataColumn("percentage", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpercentage)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsFeeSharingKey5", New Global.System.Data.DataColumn() {Me.columnproducts_id}, true))
            Me.columnproducts_id.AllowDBNull = false
            Me.columnproducts_id.Unique = true
            Me.columntitelnr.AllowDBNull = false
            Me.columnmaatschappij.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewMovieMax_Info_View1Row() As MovieMax_Info_View1Row
            Return CType(Me.NewRow,MovieMax_Info_View1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MovieMax_Info_View1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MovieMax_Info_View1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MovieMax_Info_View1RowChangedEvent) Is Nothing) Then
                RaiseEvent MovieMax_Info_View1RowChanged(Me, New MovieMax_Info_View1RowChangeEvent(CType(e.Row,MovieMax_Info_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MovieMax_Info_View1RowChangingEvent) Is Nothing) Then
                RaiseEvent MovieMax_Info_View1RowChanging(Me, New MovieMax_Info_View1RowChangeEvent(CType(e.Row,MovieMax_Info_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MovieMax_Info_View1RowDeletedEvent) Is Nothing) Then
                RaiseEvent MovieMax_Info_View1RowDeleted(Me, New MovieMax_Info_View1RowChangeEvent(CType(e.Row,MovieMax_Info_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MovieMax_Info_View1RowDeletingEvent) Is Nothing) Then
                RaiseEvent MovieMax_Info_View1RowDeleting(Me, New MovieMax_Info_View1RowChangeEvent(CType(e.Row,MovieMax_Info_View1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveMovieMax_Info_View1Row(ByVal row As MovieMax_Info_View1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsFeeSharing = New dsFeeSharing
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MovieMax_Info_View1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class feesharing_moviemax_outputDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnfeesharing_moviemax_output_id As Global.System.Data.DataColumn
        
        Private columnfield1 As Global.System.Data.DataColumn
        
        Private columnfield2 As Global.System.Data.DataColumn
        
        Private columndate1 As Global.System.Data.DataColumn
        
        Private columntime As Global.System.Data.DataColumn
        
        Private columntitlenr As Global.System.Data.DataColumn
        
        Private columnfield6 As Global.System.Data.DataColumn
        
        Private columnfield7 As Global.System.Data.DataColumn
        
        Private columnfield8 As Global.System.Data.DataColumn
        
        Private columnfield9 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "feesharing_moviemax_output"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_moviemax_output_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_moviemax_output_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property field1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnfield1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property field2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnfield2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property timeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property titlenrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitlenr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property field6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnfield6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property field7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnfield7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property field8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnfield8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property field9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnfield9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As feesharing_moviemax_outputRow
            Get
                Return CType(Me.Rows(index),feesharing_moviemax_outputRow)
            End Get
        End Property
        
        Public Event feesharing_moviemax_outputRowChanging As feesharing_moviemax_outputRowChangeEventHandler
        
        Public Event feesharing_moviemax_outputRowChanged As feesharing_moviemax_outputRowChangeEventHandler
        
        Public Event feesharing_moviemax_outputRowDeleting As feesharing_moviemax_outputRowChangeEventHandler
        
        Public Event feesharing_moviemax_outputRowDeleted As feesharing_moviemax_outputRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addfeesharing_moviemax_outputRow(ByVal row As feesharing_moviemax_outputRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addfeesharing_moviemax_outputRow(ByVal field1 As String, ByVal field2 As String, ByVal date1 As Date, ByVal time As Date, ByVal titlenr As String, ByVal field6 As String, ByVal field7 As String, ByVal field8 As String, ByVal field9 As String) As feesharing_moviemax_outputRow
            Dim rowfeesharing_moviemax_outputRow As feesharing_moviemax_outputRow = CType(Me.NewRow,feesharing_moviemax_outputRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, field1, field2, date1, time, titlenr, field6, field7, field8, field9}
            rowfeesharing_moviemax_outputRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowfeesharing_moviemax_outputRow)
            Return rowfeesharing_moviemax_outputRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByfeesharing_moviemax_output_id(ByVal feesharing_moviemax_output_id As Integer) As feesharing_moviemax_outputRow
            Return CType(Me.Rows.Find(New Object() {feesharing_moviemax_output_id}),feesharing_moviemax_outputRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As feesharing_moviemax_outputDataTable = CType(MyBase.Clone,feesharing_moviemax_outputDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New feesharing_moviemax_outputDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnfeesharing_moviemax_output_id = MyBase.Columns("feesharing_moviemax_output_id")
            Me.columnfield1 = MyBase.Columns("field1")
            Me.columnfield2 = MyBase.Columns("field2")
            Me.columndate1 = MyBase.Columns("date1")
            Me.columntime = MyBase.Columns("time")
            Me.columntitlenr = MyBase.Columns("titlenr")
            Me.columnfield6 = MyBase.Columns("field6")
            Me.columnfield7 = MyBase.Columns("field7")
            Me.columnfield8 = MyBase.Columns("field8")
            Me.columnfield9 = MyBase.Columns("field9")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnfeesharing_moviemax_output_id = New Global.System.Data.DataColumn("feesharing_moviemax_output_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_moviemax_output_id)
            Me.columnfield1 = New Global.System.Data.DataColumn("field1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfield1)
            Me.columnfield2 = New Global.System.Data.DataColumn("field2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfield2)
            Me.columndate1 = New Global.System.Data.DataColumn("date1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate1)
            Me.columntime = New Global.System.Data.DataColumn("time", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntime)
            Me.columntitlenr = New Global.System.Data.DataColumn("titlenr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitlenr)
            Me.columnfield6 = New Global.System.Data.DataColumn("field6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfield6)
            Me.columnfield7 = New Global.System.Data.DataColumn("field7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfield7)
            Me.columnfield8 = New Global.System.Data.DataColumn("field8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfield8)
            Me.columnfield9 = New Global.System.Data.DataColumn("field9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfield9)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsFeeSharingKey2", New Global.System.Data.DataColumn() {Me.columnfeesharing_moviemax_output_id}, true))
            Me.columnfeesharing_moviemax_output_id.AutoIncrement = true
            Me.columnfeesharing_moviemax_output_id.AllowDBNull = false
            Me.columnfeesharing_moviemax_output_id.ReadOnly = true
            Me.columnfeesharing_moviemax_output_id.Unique = true
            Me.columnfield1.AllowDBNull = false
            Me.columnfield2.AllowDBNull = false
            Me.columntime.AllowDBNull = false
            Me.columntitlenr.AllowDBNull = false
            Me.columnfield6.AllowDBNull = false
            Me.columnfield7.AllowDBNull = false
            Me.columnfield8.AllowDBNull = false
            Me.columnfield9.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newfeesharing_moviemax_outputRow() As feesharing_moviemax_outputRow
            Return CType(Me.NewRow,feesharing_moviemax_outputRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New feesharing_moviemax_outputRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(feesharing_moviemax_outputRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.feesharing_moviemax_outputRowChangedEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_outputRowChanged(Me, New feesharing_moviemax_outputRowChangeEvent(CType(e.Row,feesharing_moviemax_outputRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.feesharing_moviemax_outputRowChangingEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_outputRowChanging(Me, New feesharing_moviemax_outputRowChangeEvent(CType(e.Row,feesharing_moviemax_outputRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.feesharing_moviemax_outputRowDeletedEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_outputRowDeleted(Me, New feesharing_moviemax_outputRowChangeEvent(CType(e.Row,feesharing_moviemax_outputRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.feesharing_moviemax_outputRowDeletingEvent) Is Nothing) Then
                RaiseEvent feesharing_moviemax_outputRowDeleting(Me, New feesharing_moviemax_outputRowChangeEvent(CType(e.Row,feesharing_moviemax_outputRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removefeesharing_moviemax_outputRow(ByVal row As feesharing_moviemax_outputRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsFeeSharing = New dsFeeSharing
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "feesharing_moviemax_outputDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class fee_view1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnorders_id As Global.System.Data.DataColumn
        
        Private columndate_purchased As Global.System.Data.DataColumn
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnfeesharing As Global.System.Data.DataColumn
        
        Private columnfeesharing_end As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnstudio_name As Global.System.Data.DataColumn
        
        Private columnproducts_title As Global.System.Data.DataColumn
        
        Private columnfeesharing_upfront_fee As Global.System.Data.DataColumn
        
        Private columnfeesharing_upfront_fee_recoverable As Global.System.Data.DataColumn
        
        Private columnfeesharing_turn_price As Global.System.Data.DataColumn
        
        Private columnfeesharing_turn_price_after3month As Global.System.Data.DataColumn
        
        Private columnfeesharing_buy_option_price As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "fee_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property orders_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorders_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_purchasedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_purchased
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_endColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_end
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property studio_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstudio_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_upfront_feeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_upfront_fee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_upfront_fee_recoverableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_upfront_fee_recoverable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_turn_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_turn_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_turn_price_after3monthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_turn_price_after3month
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feesharing_buy_option_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeesharing_buy_option_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As fee_view1Row
            Get
                Return CType(Me.Rows(index),fee_view1Row)
            End Get
        End Property
        
        Public Event fee_view1RowChanging As fee_view1RowChangeEventHandler
        
        Public Event fee_view1RowChanged As fee_view1RowChangeEventHandler
        
        Public Event fee_view1RowDeleting As fee_view1RowChangeEventHandler
        
        Public Event fee_view1RowDeleted As fee_view1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addfee_view1Row(ByVal row As fee_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addfee_view1Row(ByVal orders_id As Integer, ByVal date_purchased As Date, ByVal products_id As Integer, ByVal feesharing As Integer, ByVal feesharing_end As Date, ByVal customers_id As Integer, ByVal products_model As String, ByVal studio_name As String, ByVal products_title As String, ByVal feesharing_upfront_fee As Decimal, ByVal feesharing_upfront_fee_recoverable As Integer, ByVal feesharing_turn_price As Decimal, ByVal feesharing_turn_price_after3month As Decimal, ByVal feesharing_buy_option_price As Decimal) As fee_view1Row
            Dim rowfee_view1Row As fee_view1Row = CType(Me.NewRow,fee_view1Row)
            Dim columnValuesArray() As Object = New Object() {orders_id, date_purchased, products_id, feesharing, feesharing_end, customers_id, products_model, studio_name, products_title, feesharing_upfront_fee, feesharing_upfront_fee_recoverable, feesharing_turn_price, feesharing_turn_price_after3month, feesharing_buy_option_price}
            rowfee_view1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowfee_view1Row)
            Return rowfee_view1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As fee_view1DataTable = CType(MyBase.Clone,fee_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New fee_view1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnorders_id = MyBase.Columns("orders_id")
            Me.columndate_purchased = MyBase.Columns("date_purchased")
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnfeesharing = MyBase.Columns("feesharing")
            Me.columnfeesharing_end = MyBase.Columns("feesharing_end")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnstudio_name = MyBase.Columns("studio_name")
            Me.columnproducts_title = MyBase.Columns("products_title")
            Me.columnfeesharing_upfront_fee = MyBase.Columns("feesharing_upfront_fee")
            Me.columnfeesharing_upfront_fee_recoverable = MyBase.Columns("feesharing_upfront_fee_recoverable")
            Me.columnfeesharing_turn_price = MyBase.Columns("feesharing_turn_price")
            Me.columnfeesharing_turn_price_after3month = MyBase.Columns("feesharing_turn_price_after3month")
            Me.columnfeesharing_buy_option_price = MyBase.Columns("feesharing_buy_option_price")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnorders_id = New Global.System.Data.DataColumn("orders_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorders_id)
            Me.columndate_purchased = New Global.System.Data.DataColumn("date_purchased", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_purchased)
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnfeesharing = New Global.System.Data.DataColumn("feesharing", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing)
            Me.columnfeesharing_end = New Global.System.Data.DataColumn("feesharing_end", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_end)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnstudio_name = New Global.System.Data.DataColumn("studio_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstudio_name)
            Me.columnproducts_title = New Global.System.Data.DataColumn("products_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_title)
            Me.columnfeesharing_upfront_fee = New Global.System.Data.DataColumn("feesharing_upfront_fee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_upfront_fee)
            Me.columnfeesharing_upfront_fee_recoverable = New Global.System.Data.DataColumn("feesharing_upfront_fee_recoverable", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_upfront_fee_recoverable)
            Me.columnfeesharing_turn_price = New Global.System.Data.DataColumn("feesharing_turn_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_turn_price)
            Me.columnfeesharing_turn_price_after3month = New Global.System.Data.DataColumn("feesharing_turn_price_after3month", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_turn_price_after3month)
            Me.columnfeesharing_buy_option_price = New Global.System.Data.DataColumn("feesharing_buy_option_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeesharing_buy_option_price)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newfee_view1Row() As fee_view1Row
            Return CType(Me.NewRow,fee_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New fee_view1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(fee_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.fee_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent fee_view1RowChanged(Me, New fee_view1RowChangeEvent(CType(e.Row,fee_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.fee_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent fee_view1RowChanging(Me, New fee_view1RowChangeEvent(CType(e.Row,fee_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.fee_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent fee_view1RowDeleted(Me, New fee_view1RowChangeEvent(CType(e.Row,fee_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.fee_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent fee_view1RowDeleting(Me, New fee_view1RowChangeEvent(CType(e.Row,fee_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removefee_view1Row(ByVal row As fee_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsFeeSharing = New dsFeeSharing
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "fee_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class feesharing_moviemaxRow
        Inherits Global.System.Data.DataRow
        
        Private tablefeesharing_moviemax As feesharing_moviemaxDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablefeesharing_moviemax = CType(Me.Table,feesharing_moviemaxDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_boomerang_id() As Integer
            Get
                Return CType(Me(Me.tablefeesharing_moviemax.feesharing_boomerang_idColumn),Integer)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax.feesharing_boomerang_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablefeesharing_moviemax.feesharing_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_date' in table 'feesharing_moviemax' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefeesharing_moviemax.feesharing_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property period() As String
            Get
                Return CType(Me(Me.tablefeesharing_moviemax.periodColumn),String)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax.periodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tablefeesharing_moviemax.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rentals() As Integer
            Get
                Return CType(Me(Me.tablefeesharing_moviemax.rentalsColumn),Integer)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax.rentalsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rentals_in_first_month() As Integer
            Get
                Return CType(Me(Me.tablefeesharing_moviemax.rentals_in_first_monthColumn),Integer)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax.rentals_in_first_monthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rentals_after() As Integer
            Get
                Return CType(Me(Me.tablefeesharing_moviemax.rentals_afterColumn),Integer)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax.rentals_afterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_dateNull() As Boolean
            Return Me.IsNull(Me.tablefeesharing_moviemax.feesharing_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_dateNull()
            Me(Me.tablefeesharing_moviemax.feesharing_dateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class feesharing_moviemax_idRow
        Inherits Global.System.Data.DataRow
        
        Private tablefeesharing_moviemax_id As feesharing_moviemax_idDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablefeesharing_moviemax_id = CType(Me.Table,feesharing_moviemax_idDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property titelnr() As Integer
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_id.titelnrColumn),Integer)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_id.titelnrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property title_name() As String
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_id.title_nameColumn),String)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_id.title_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property actor() As String
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_id.actorColumn),String)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_id.actorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property maatschappij() As Integer
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_id.maatschappijColumn),Integer)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_id.maatschappijColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class feesharing_moviemax_inputRow
        Inherits Global.System.Data.DataRow
        
        Private tablefeesharing_moviemax_input As feesharing_moviemax_inputDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablefeesharing_moviemax_input = CType(Me.Table,feesharing_moviemax_inputDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_input.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_input.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property title_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablefeesharing_moviemax_input.title_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'title_name' in table 'feesharing_moviemax_input' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_input.title_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property titelnr() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefeesharing_moviemax_input.titelnrColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'titelnr' in table 'feesharing_moviemax_input' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_input.titelnrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property maatschappij() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefeesharing_moviemax_input.maatschappijColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maatschappij' in table 'feesharing_moviemax_input' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_input.maatschappijColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istitle_nameNull() As Boolean
            Return Me.IsNull(Me.tablefeesharing_moviemax_input.title_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settitle_nameNull()
            Me(Me.tablefeesharing_moviemax_input.title_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstitelnrNull() As Boolean
            Return Me.IsNull(Me.tablefeesharing_moviemax_input.titelnrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettitelnrNull()
            Me(Me.tablefeesharing_moviemax_input.titelnrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmaatschappijNull() As Boolean
            Return Me.IsNull(Me.tablefeesharing_moviemax_input.maatschappijColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmaatschappijNull()
            Me(Me.tablefeesharing_moviemax_input.maatschappijColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class feesharing_moviemax_leverancierRow
        Inherits Global.System.Data.DataRow
        
        Private tablefeesharing_moviemax_leverancier As feesharing_moviemax_leverancierDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablefeesharing_moviemax_leverancier = CType(Me.Table,feesharing_moviemax_leverancierDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_leverancier.idColumn),Integer)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_leverancier.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property leverancier() As String
            Get
                Try 
                    Return CType(Me(Me.tablefeesharing_moviemax_leverancier.leverancierColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'leverancier' in table 'feesharing_moviemax_leverancier' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_leverancier.leverancierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property percentage() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefeesharing_moviemax_leverancier.percentageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'percentage' in table 'feesharing_moviemax_leverancier' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_leverancier.percentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsleverancierNull() As Boolean
            Return Me.IsNull(Me.tablefeesharing_moviemax_leverancier.leverancierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetleverancierNull()
            Me(Me.tablefeesharing_moviemax_leverancier.leverancierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspercentageNull() As Boolean
            Return Me.IsNull(Me.tablefeesharing_moviemax_leverancier.percentageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpercentageNull()
            Me(Me.tablefeesharing_moviemax_leverancier.percentageColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class productsRow
        Inherits Global.System.Data.DataRow
        
        Private tableproducts As productsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproducts = CType(Me.Table,productsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_quantity() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_quantityColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property imdb_id() As Long
            Get
                Return CType(Me(Me.tableproducts.imdb_idColumn),Long)
            End Get
            Set
                Me(Me.tableproducts.imdb_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_title() As String
            Get
                Return CType(Me(Me.tableproducts.products_titleColumn),String)
            End Get
            Set
                Me(Me.tableproducts.products_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_image() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_imageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_image' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.products_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.products_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_added' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_last_modified' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_available() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_date_availableColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_available' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_date_availableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_weight() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_weightColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_weight' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_weightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_status() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tax_class_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_tax_class_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_tax_class_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property manufacturers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.manufacturers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'manufacturers_id' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.manufacturers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_ordered() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_orderedColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_orderedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_public() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_publicColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_public' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_publicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_runtime() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_runtimeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_runtime' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_runtimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_year() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_yearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_year' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_yearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_countries_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_countries_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_countries_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_picture_format() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_picture_formatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_picture_format' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_picture_formatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_rating() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_ratingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_rating' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_ratingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_directors_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_directors_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_directors_id' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_directors_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_regional_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_regional_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_regional_code' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_regional_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_studio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_studioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_studio' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_studioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_barcode() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_barcodeColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_barcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvd_quantity() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_dvd_quantityColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_dvd_quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_language_fr() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_language_frColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_language_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_undertitle_nl() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_undertitle_nlColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_undertitle_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_the_bags() As Integer
            Get
                Return CType(Me(Me.tableproducts.in_the_bagsColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.in_the_bagsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_the_bags_next() As Integer
            Get
                Return CType(Me(Me.tableproducts.in_the_bags_nextColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.in_the_bags_nextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_cinema_now() As Integer
            Get
                Return CType(Me(Me.tableproducts.in_cinema_nowColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.in_cinema_nowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvdpostchoice() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_dvdpostchoiceColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_dvdpostchoiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_other_language() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_other_languageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_other_language' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_other_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_french() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_frenchColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_frenchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_next() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_nextColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_nextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tiscali_hp_fr() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_tiscali_hp_frColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_tiscali_hp_frColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_tiscali_hp_nl() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_tiscali_hp_nlColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_tiscali_hp_nlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_number() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_numberColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_aboprocess_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_aboprocess_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_aboprocess_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_aboprocess_number() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_aboprocess_numberColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_aboprocess_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cinebel_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.cinebel_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cinebel_id' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.cinebel_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cinebel_trailer() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.cinebel_trailerColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cinebel_trailer' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.cinebel_trailerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing() As Integer
            Get
                Return CType(Me(Me.tableproducts.feesharingColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.feesharingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_end() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.feesharing_endColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_end' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.feesharing_endColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_upfront_fee() As Decimal
            Get
                Return CType(Me(Me.tableproducts.feesharing_upfront_feeColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.feesharing_upfront_feeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_upfront_fee_recoverable() As Integer
            Get
                Return CType(Me(Me.tableproducts.feesharing_upfront_fee_recoverableColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.feesharing_upfront_fee_recoverableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_turn_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.feesharing_turn_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.feesharing_turn_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_turn_price_after3month() As Decimal
            Get
                Return CType(Me(Me.tableproducts.feesharing_turn_price_after3monthColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.feesharing_turn_price_after3monthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_buy_option_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.feesharing_buy_option_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.feesharing_buy_option_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_expected_nbr_turns() As Integer
            Get
                Return CType(Me(Me.tableproducts.feesharing_expected_nbr_turnsColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.feesharing_expected_nbr_turnsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_desire() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_desireColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_desireColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_desire_weighted() As Decimal
            Get
                Return CType(Me(Me.tableproducts.products_desire_weightedColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.products_desire_weightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_availability() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_availabilityColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_availabilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property quantity_to_sale() As Integer
            Get
                Return CType(Me(Me.tableproducts.quantity_to_saleColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.quantity_to_saleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_sale_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.products_sale_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.products_sale_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_sale_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_sale_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_sale_date' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_sale_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tableproducts.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_imageNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_imageNull()
            Me(Me.tableproducts.products_imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_addedNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_addedNull()
            Me(Me.tableproducts.products_date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_last_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_last_modifiedNull()
            Me(Me.tableproducts.products_last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_availableNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_date_availableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_availableNull()
            Me(Me.tableproducts.products_date_availableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_weightNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_weightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_weightNull()
            Me(Me.tableproducts.products_weightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismanufacturers_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts.manufacturers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmanufacturers_idNull()
            Me(Me.tableproducts.manufacturers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_publicNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_publicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_publicNull()
            Me(Me.tableproducts.products_publicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_runtimeNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_runtimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_runtimeNull()
            Me(Me.tableproducts.products_runtimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_yearNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_yearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_yearNull()
            Me(Me.tableproducts.products_yearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_picture_formatNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_picture_formatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_picture_formatNull()
            Me(Me.tableproducts.products_picture_formatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_ratingNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_ratingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_ratingNull()
            Me(Me.tableproducts.products_ratingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_directors_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_directors_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_directors_idNull()
            Me(Me.tableproducts.products_directors_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_regional_codeNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_regional_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_regional_codeNull()
            Me(Me.tableproducts.products_regional_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_studioNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_studioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_studioNull()
            Me(Me.tableproducts.products_studioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_other_languageNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_other_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_other_languageNull()
            Me(Me.tableproducts.products_other_languageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscinebel_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts.cinebel_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcinebel_idNull()
            Me(Me.tableproducts.cinebel_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscinebel_trailerNull() As Boolean
            Return Me.IsNull(Me.tableproducts.cinebel_trailerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcinebel_trailerNull()
            Me(Me.tableproducts.cinebel_trailerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_endNull() As Boolean
            Return Me.IsNull(Me.tableproducts.feesharing_endColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_endNull()
            Me(Me.tableproducts.feesharing_endColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_sale_dateNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_sale_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_sale_dateNull()
            Me(Me.tableproducts.products_sale_dateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class MovieMax_Info_View1Row
        Inherits Global.System.Data.DataRow
        
        Private tableMovieMax_Info_View1 As MovieMax_Info_View1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMovieMax_Info_View1 = CType(Me.Table,MovieMax_Info_View1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableMovieMax_Info_View1.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableMovieMax_Info_View1.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property title_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovieMax_Info_View1.title_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'title_name' in table 'MovieMax_Info_View1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovieMax_Info_View1.title_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property titelnr() As Integer
            Get
                Return CType(Me(Me.tableMovieMax_Info_View1.titelnrColumn),Integer)
            End Get
            Set
                Me(Me.tableMovieMax_Info_View1.titelnrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property maatschappij() As Integer
            Get
                Return CType(Me(Me.tableMovieMax_Info_View1.maatschappijColumn),Integer)
            End Get
            Set
                Me(Me.tableMovieMax_Info_View1.maatschappijColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMovieMax_Info_View1.idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id' in table 'MovieMax_Info_View1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovieMax_Info_View1.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property leverancier() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovieMax_Info_View1.leverancierColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'leverancier' in table 'MovieMax_Info_View1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovieMax_Info_View1.leverancierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property percentage() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMovieMax_Info_View1.percentageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'percentage' in table 'MovieMax_Info_View1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovieMax_Info_View1.percentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istitle_nameNull() As Boolean
            Return Me.IsNull(Me.tableMovieMax_Info_View1.title_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settitle_nameNull()
            Me(Me.tableMovieMax_Info_View1.title_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tableMovieMax_Info_View1.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidNull()
            Me(Me.tableMovieMax_Info_View1.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsleverancierNull() As Boolean
            Return Me.IsNull(Me.tableMovieMax_Info_View1.leverancierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetleverancierNull()
            Me(Me.tableMovieMax_Info_View1.leverancierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspercentageNull() As Boolean
            Return Me.IsNull(Me.tableMovieMax_Info_View1.percentageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpercentageNull()
            Me(Me.tableMovieMax_Info_View1.percentageColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class feesharing_moviemax_outputRow
        Inherits Global.System.Data.DataRow
        
        Private tablefeesharing_moviemax_output As feesharing_moviemax_outputDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablefeesharing_moviemax_output = CType(Me.Table,feesharing_moviemax_outputDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_moviemax_output_id() As Integer
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_output.feesharing_moviemax_output_idColumn),Integer)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_output.feesharing_moviemax_output_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property field1() As String
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_output.field1Column),String)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_output.field1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property field2() As String
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_output.field2Column),String)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_output.field2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date1() As Date
            Get
                Try 
                    Return CType(Me(Me.tablefeesharing_moviemax_output.date1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date1' in table 'feesharing_moviemax_output' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_output.date1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property time() As Date
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_output.timeColumn),Date)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_output.timeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property titlenr() As String
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_output.titlenrColumn),String)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_output.titlenrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property field6() As String
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_output.field6Column),String)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_output.field6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property field7() As String
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_output.field7Column),String)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_output.field7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property field8() As String
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_output.field8Column),String)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_output.field8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property field9() As String
            Get
                Return CType(Me(Me.tablefeesharing_moviemax_output.field9Column),String)
            End Get
            Set
                Me(Me.tablefeesharing_moviemax_output.field9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate1Null() As Boolean
            Return Me.IsNull(Me.tablefeesharing_moviemax_output.date1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate1Null()
            Me(Me.tablefeesharing_moviemax_output.date1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class fee_view1Row
        Inherits Global.System.Data.DataRow
        
        Private tablefee_view1 As fee_view1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablefee_view1 = CType(Me.Table,fee_view1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property orders_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.orders_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orders_id' in table 'fee_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.orders_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_purchased() As Date
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.date_purchasedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_purchased' in table 'fee_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.date_purchasedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_id' in table 'fee_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.feesharingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing' in table 'fee_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.feesharingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_end() As Date
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.feesharing_endColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_end' in table 'fee_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.feesharing_endColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'fee_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'fee_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property studio_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.studio_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'studio_name' in table 'fee_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.studio_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_title() As String
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.products_titleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_title' in table 'fee_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.products_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_upfront_fee() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.feesharing_upfront_feeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_upfront_fee' in table 'fee_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.feesharing_upfront_feeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_upfront_fee_recoverable() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.feesharing_upfront_fee_recoverableColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_upfront_fee_recoverable' in table 'fee_view1' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.feesharing_upfront_fee_recoverableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_turn_price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.feesharing_turn_priceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_turn_price' in table 'fee_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.feesharing_turn_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_turn_price_after3month() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.feesharing_turn_price_after3monthColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_turn_price_after3month' in table 'fee_view1' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.feesharing_turn_price_after3monthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feesharing_buy_option_price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablefee_view1.feesharing_buy_option_priceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'feesharing_buy_option_price' in table 'fee_view1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablefee_view1.feesharing_buy_option_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isorders_idNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.orders_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setorders_idNull()
            Me(Me.tablefee_view1.orders_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_purchasedNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.date_purchasedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_purchasedNull()
            Me(Me.tablefee_view1.date_purchasedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_idNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_idNull()
            Me(Me.tablefee_view1.products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfeesharingNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.feesharingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfeesharingNull()
            Me(Me.tablefee_view1.feesharingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_endNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.feesharing_endColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_endNull()
            Me(Me.tablefee_view1.feesharing_endColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tablefee_view1.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tablefee_view1.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isstudio_nameNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.studio_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setstudio_nameNull()
            Me(Me.tablefee_view1.studio_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_titleNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.products_titleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_titleNull()
            Me(Me.tablefee_view1.products_titleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_upfront_feeNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.feesharing_upfront_feeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_upfront_feeNull()
            Me(Me.tablefee_view1.feesharing_upfront_feeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_upfront_fee_recoverableNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.feesharing_upfront_fee_recoverableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_upfront_fee_recoverableNull()
            Me(Me.tablefee_view1.feesharing_upfront_fee_recoverableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_turn_priceNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.feesharing_turn_priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_turn_priceNull()
            Me(Me.tablefee_view1.feesharing_turn_priceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_turn_price_after3monthNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.feesharing_turn_price_after3monthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_turn_price_after3monthNull()
            Me(Me.tablefee_view1.feesharing_turn_price_after3monthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfeesharing_buy_option_priceNull() As Boolean
            Return Me.IsNull(Me.tablefee_view1.feesharing_buy_option_priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfeesharing_buy_option_priceNull()
            Me(Me.tablefee_view1.feesharing_buy_option_priceColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class feesharing_moviemaxRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As feesharing_moviemaxRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As feesharing_moviemaxRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As feesharing_moviemaxRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class feesharing_moviemax_idRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As feesharing_moviemax_idRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As feesharing_moviemax_idRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As feesharing_moviemax_idRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class feesharing_moviemax_inputRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As feesharing_moviemax_inputRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As feesharing_moviemax_inputRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As feesharing_moviemax_inputRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class feesharing_moviemax_leverancierRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As feesharing_moviemax_leverancierRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As feesharing_moviemax_leverancierRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As feesharing_moviemax_leverancierRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class productsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As productsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As productsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As productsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class MovieMax_Info_View1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MovieMax_Info_View1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As MovieMax_Info_View1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As MovieMax_Info_View1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class feesharing_moviemax_outputRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As feesharing_moviemax_outputRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As feesharing_moviemax_outputRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As feesharing_moviemax_outputRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class fee_view1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As fee_view1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As fee_view1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As fee_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
